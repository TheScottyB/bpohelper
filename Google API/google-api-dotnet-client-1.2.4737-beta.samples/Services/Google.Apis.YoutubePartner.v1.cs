//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.YoutubePartner.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class AdBreak {
        
        private System.Nullable<long> _midrollSeconds;
        
        private string _position;
        
        private System.Collections.Generic.IList<AdSlot> _slot;
        
        /// <summary>The time of the ad break specified as the number of seconds after the start of the video when the break occurs.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("midrollSeconds")]
        public virtual System.Nullable<long> MidrollSeconds {
            get {
                return this._midrollSeconds;
            }
            set {
                this._midrollSeconds = value;
            }
        }
        
        /// <summary>The point at which the break occurs during the video playback.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("position")]
        public virtual string Position {
            get {
                return this._position;
            }
            set {
                this._position = value;
            }
        }
        
        /// <summary>A list of ad slots that occur in an ad break. Ad slots let you specify the number of ads that should run in each break.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("slot")]
        public virtual System.Collections.Generic.IList<AdSlot> Slot {
            get {
                return this._slot;
            }
            set {
                this._slot = value;
            }
        }
    }
    
    public class AdSlot {
        
        private string _id;
        
        private string _type;
        
        /// <summary>A value that identifies the ad slot to the ad server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of ad that runs in the slot. The value may affect YouTube&apos;s fallback behavior if the third-party platform does not return ads.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
    }
    
    public class AllowedAdvertisingOptions {
        
        private System.Nullable<bool> _adsOnEmbeds;
        
        private string _kind;
        
        private System.Collections.Generic.IList<string> _licAdFormats;
        
        private System.Collections.Generic.IList<string> _ugcAdFormats;
        
        /// <summary>This setting indicates whether the partner can display ads when videos run in an embedded player.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adsOnEmbeds")]
        public virtual System.Nullable<bool> AdsOnEmbeds {
            get {
                return this._adsOnEmbeds;
            }
            set {
                this._adsOnEmbeds = value;
            }
        }
        
        /// <summary>This property identifies the resource type. Its value is youtubePartner#allowedAdvertisingOptions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>A list of ad formats that the partner is allowed to use for its uploaded videos.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("licAdFormats")]
        public virtual System.Collections.Generic.IList<string> LicAdFormats {
            get {
                return this._licAdFormats;
            }
            set {
                this._licAdFormats = value;
            }
        }
        
        /// <summary>A list of ad formats that the partner is allowed to use for claimed, user-uploaded content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ugcAdFormats")]
        public virtual System.Collections.Generic.IList<string> UgcAdFormats {
            get {
                return this._ugcAdFormats;
            }
            set {
                this._ugcAdFormats = value;
            }
        }
    }
    
    public class Asset : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<string> _aliasId;
        
        private string _id;
        
        private string _kind;
        
        private Policy _matchPolicy;
        
        private Metadata _metadata;
        
        private RightsOwnership _ownership;
        
        private string _status;
        
        private string _type;
        
        private string _ETag;
        
        /// <summary>A list of asset IDs that can be used to refer to the asset. The list contains values if the asset represents multiple constituent assets that have been merged. In that case, any of the asset IDs originally assigned to the constituent assets could be used to update the master, or synthesized, asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("aliasId")]
        public virtual System.Collections.Generic.IList<string> AliasId {
            get {
                return this._aliasId;
            }
            set {
                this._aliasId = value;
            }
        }
        
        /// <summary>An ID that YouTube assigns and uses to uniquely identify the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For asset resources, the value is youtubePartner#asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("matchPolicy")]
        public virtual Policy MatchPolicy {
            get {
                return this._matchPolicy;
            }
            set {
                this._matchPolicy = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual Metadata Metadata {
            get {
                return this._metadata;
            }
            set {
                this._metadata = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("ownership")]
        public virtual RightsOwnership Ownership {
            get {
                return this._ownership;
            }
            set {
                this._ownership = value;
            }
        }
        
        /// <summary>The asset&apos;s status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
        
        /// <summary>The asset&apos;s type. This value determines the metadata fields that you can set for the asset. In addition, certain API functions may only be supported for specific types of assets. For example, composition assets may have more complex ownership data than other types of assets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class AssetListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Asset> _items;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>A list of asset resources that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Asset> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#assetList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class AssetRelationship : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _childAssetId;
        
        private string _id;
        
        private string _kind;
        
        private string _parentAssetId;
        
        private string _ETag;
        
        /// <summary>The ID of the child (contained) asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("childAssetId")]
        public virtual string ChildAssetId {
            get {
                return this._childAssetId;
            }
            set {
                this._childAssetId = value;
            }
        }
        
        /// <summary>A value that YouTube assigns and uses to uniquely identify the asset relationship.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For this resource, the value is youtubePartner#assetRelationship.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The ID of the parent (containing) asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("parentAssetId")]
        public virtual string ParentAssetId {
            get {
                return this._parentAssetId;
            }
            set {
                this._parentAssetId = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class AssetRelationshipListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<AssetRelationship> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _ETag;
        
        /// <summary>A list of assetRelationship resources that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<AssetRelationship> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#assetRelationshipList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class AssetSearchResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<AssetSnippet> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _ETag;
        
        /// <summary>A list of asset resources that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<AssetSnippet> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#assetSnippetList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class AssetSnippet {
        
        private string _customId;
        
        private string _id;
        
        private string _isrc;
        
        private string _iswc;
        
        private string _kind;
        
        private string _title;
        
        private string _type;
        
        /// <summary>Custom ID assigned by the content owner to this asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customId")]
        public virtual string CustomId {
            get {
                return this._customId;
            }
            set {
                this._customId = value;
            }
        }
        
        /// <summary>An ID that YouTube assigns and uses to uniquely identify the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The ISRC (International Standard Recording Code) for this asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isrc")]
        public virtual string Isrc {
            get {
                return this._isrc;
            }
            set {
                this._isrc = value;
            }
        }
        
        /// <summary>The ISWC (International Standard Musical Work Code) for this asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iswc")]
        public virtual string Iswc {
            get {
                return this._iswc;
            }
            set {
                this._iswc = value;
            }
        }
        
        /// <summary>The type of the API resource. For this operation, the value is youtubePartner#assetSnippet.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Title of this asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>The asset&apos;s type. This value determines which metadata fields might be included in the metadata object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
    }
    
    public class Claim : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _assetId;
        
        private string _contentType;
        
        private string _id;
        
        private string _kind;
        
        private Policy _policy;
        
        private string _status;
        
        private string _videoId;
        
        private string _ETag;
        
        /// <summary>The unique YouTube asset ID that identifies the asset associated with the claim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assetId")]
        public virtual string AssetId {
            get {
                return this._assetId;
            }
            set {
                this._assetId = value;
            }
        }
        
        /// <summary>This value indicates whether the claim covers the audio, video, or audiovisual portion of the claimed content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType {
            get {
                return this._contentType;
            }
            set {
                this._contentType = value;
            }
        }
        
        /// <summary>The ID that YouTube assigns and uses to uniquely identify the claim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For claim resources, this value is youtubePartner#claim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("policy")]
        public virtual Policy Policy {
            get {
                return this._policy;
            }
            set {
                this._policy = value;
            }
        }
        
        /// <summary>The claim&apos;s status. When updating a claim, you can update its status from active to inactive to effectively release the claim, but the API does not support other updates to a claim&apos;s status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
        
        /// <summary>The unique YouTube video ID that identifies the video associated with the claim.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
        public virtual string VideoId {
            get {
                return this._videoId;
            }
            set {
                this._videoId = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class ClaimListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Claim> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _previousPageToken;
        
        private string _ETag;
        
        /// <summary>A list of claims that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Claim> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#claimList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("previousPageToken")]
        public virtual string PreviousPageToken {
            get {
                return this._previousPageToken;
            }
            set {
                this._previousPageToken = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class ClaimedVideoDefaults {
        
        private System.Nullable<bool> _channelOverride;
        
        private string _kind;
        
        private System.Collections.Generic.IList<string> _newVideoDefaults;
        
        /// <summary>Set this property to true to indicate that the channel&apos;s claimedVideoOptions can override the content owner&apos;s claimedVideoOptions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelOverride")]
        public virtual System.Nullable<bool> ChannelOverride {
            get {
                return this._channelOverride;
            }
            set {
                this._channelOverride = value;
            }
        }
        
        /// <summary>Identifies this resource as default options for newly claimed video. Value: &quot;youtubePartner#claimedVideoDefaults&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>A list of ad formats that could be used as the default settings for a newly claimed video. The first partner that claims the video sets its default advertising options to that video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newVideoDefaults")]
        public virtual System.Collections.Generic.IList<string> NewVideoDefaults {
            get {
                return this._newVideoDefaults;
            }
            set {
                this._newVideoDefaults = value;
            }
        }
    }
    
    public class Conditions {
        
        private string _contentMatchType;
        
        private System.Collections.Generic.IList<IntervalCondition> _matchDuration;
        
        private System.Collections.Generic.IList<IntervalCondition> _matchPercent;
        
        private System.Collections.Generic.IList<IntervalCondition> _referenceDuration;
        
        private System.Collections.Generic.IList<IntervalCondition> _referencePercent;
        
        private TerritoryCondition _requiredTerritories;
        
        /// <summary>This match condition specifies whether the user- or partner-uploaded content needs to match the audio, video or audiovisual content of a reference file for the rule to apply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentMatchType")]
        public virtual string ContentMatchType {
            get {
                return this._contentMatchType;
            }
            set {
                this._contentMatchType = value;
            }
        }
        
        /// <summary>This match condition specifies an amount of time that the user- or partner- uploaded content needs to match a reference file for the rule to apply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchDuration")]
        public virtual System.Collections.Generic.IList<IntervalCondition> MatchDuration {
            get {
                return this._matchDuration;
            }
            set {
                this._matchDuration = value;
            }
        }
        
        /// <summary>This match condition specifies a percentage of the user- or partner-uploaded content that needs to match a reference file for the rule to apply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("matchPercent")]
        public virtual System.Collections.Generic.IList<IntervalCondition> MatchPercent {
            get {
                return this._matchPercent;
            }
            set {
                this._matchPercent = value;
            }
        }
        
        /// <summary>This match condition indicates that the reference must be a certain duration for the rule to apply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referenceDuration")]
        public virtual System.Collections.Generic.IList<IntervalCondition> ReferenceDuration {
            get {
                return this._referenceDuration;
            }
            set {
                this._referenceDuration = value;
            }
        }
        
        /// <summary>This match condition indicates that the specified percentage of a reference file must match the user- or partner-uploaded content for the rule to apply.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("referencePercent")]
        public virtual System.Collections.Generic.IList<IntervalCondition> ReferencePercent {
            get {
                return this._referencePercent;
            }
            set {
                this._referencePercent = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("requiredTerritories")]
        public virtual TerritoryCondition RequiredTerritories {
            get {
                return this._requiredTerritories;
            }
            set {
                this._requiredTerritories = value;
            }
        }
    }
    
    public class ContentOwner : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _conflictNotificationEmail;
        
        private string _displayName;
        
        private System.Collections.Generic.IList<string> _disputeNotificationEmails;
        
        private System.Collections.Generic.IList<string> _fingerprintReportNotificationEmails;
        
        private string _id;
        
        private string _kind;
        
        private System.Collections.Generic.IList<string> _primaryNotificationEmails;
        
        private string _ETag;
        
        /// <summary>The email address visible to other partners for use in managing asset ownership conflicts.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("conflictNotificationEmail")]
        public virtual string ConflictNotificationEmail {
            get {
                return this._conflictNotificationEmail;
            }
            set {
                this._conflictNotificationEmail = value;
            }
        }
        
        /// <summary>The content owner&apos;s display name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName {
            get {
                return this._displayName;
            }
            set {
                this._displayName = value;
            }
        }
        
        /// <summary>The email address(es) to which YouTube sends claim dispute notifications and possible claim notifications.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("disputeNotificationEmails")]
        public virtual System.Collections.Generic.IList<string> DisputeNotificationEmails {
            get {
                return this._disputeNotificationEmails;
            }
            set {
                this._disputeNotificationEmails = value;
            }
        }
        
        /// <summary>The email address(es) to which YouTube sends fingerprint reports.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fingerprintReportNotificationEmails")]
        public virtual System.Collections.Generic.IList<string> FingerprintReportNotificationEmails {
            get {
                return this._fingerprintReportNotificationEmails;
            }
            set {
                this._fingerprintReportNotificationEmails = value;
            }
        }
        
        /// <summary>A unique ID that YouTube uses to identify the content owner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For content owner resources, the value is youtubePartner#contentOwner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The email address(es) to which YouTube sends CMS account details and report notifications.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("primaryNotificationEmails")]
        public virtual System.Collections.Generic.IList<string> PrimaryNotificationEmails {
            get {
                return this._primaryNotificationEmails;
            }
            set {
                this._primaryNotificationEmails = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class ContentOwnerAdvertisingOption : Google.Apis.Requests.IDirectResponseSchema {
        
        private AllowedAdvertisingOptions _allowedOptions;
        
        private ClaimedVideoDefaults _claimedVideoOptions;
        
        private string _id;
        
        private string _kind;
        
        private string _ETag;
        
        [Newtonsoft.Json.JsonPropertyAttribute("allowedOptions")]
        public virtual AllowedAdvertisingOptions AllowedOptions {
            get {
                return this._allowedOptions;
            }
            set {
                this._allowedOptions = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("claimedVideoOptions")]
        public virtual ClaimedVideoDefaults ClaimedVideoOptions {
            get {
                return this._claimedVideoOptions;
            }
            set {
                this._claimedVideoOptions = value;
            }
        }
        
        /// <summary>The value that YouTube uses to uniquely identify the content owner.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For this resource, the value is youtubePartner#contentOwnerAdvertisingOption.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class ContentOwnerListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<ContentOwner> _items;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>A list of content owners that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<ContentOwner> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#contentOwnerList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class CountriesRestriction {
        
        private System.Collections.Generic.IList<string> _adFormats;
        
        private System.Collections.Generic.IList<string> _territories;
        
        /// <summary>A list of ad formats that can be used in the specified countries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adFormats")]
        public virtual System.Collections.Generic.IList<string> AdFormats {
            get {
                return this._adFormats;
            }
            set {
                this._adFormats = value;
            }
        }
        
        /// <summary>A list of ISO 3166-1 alpha-2 country codes that identify the countries where ads are enabled.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("territories")]
        public virtual System.Collections.Generic.IList<string> Territories {
            get {
                return this._territories;
            }
            set {
                this._territories = value;
            }
        }
    }
    
    public class Date {
        
        private System.Nullable<long> _day;
        
        private System.Nullable<long> _month;
        
        private System.Nullable<long> _year;
        
        /// <summary>The date&apos;s day. The value should be an integer between 1 and 31. Note that some day-month combinations are not valid.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("day")]
        public virtual System.Nullable<long> Day {
            get {
                return this._day;
            }
            set {
                this._day = value;
            }
        }
        
        /// <summary>The date&apos;s month. The value should be an integer between 1 and 12.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("month")]
        public virtual System.Nullable<long> Month {
            get {
                return this._month;
            }
            set {
                this._month = value;
            }
        }
        
        /// <summary>The date&apos;s year in the Gregorian Calendar. Assumed to be A.D.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("year")]
        public virtual System.Nullable<long> Year {
            get {
                return this._year;
            }
            set {
                this._year = value;
            }
        }
    }
    
    public class DateRange {
        
        private Date _end;
        
        private string _kind;
        
        private Date _start;
        
        [Newtonsoft.Json.JsonPropertyAttribute("end")]
        public virtual Date End {
            get {
                return this._end;
            }
            set {
                this._end = value;
            }
        }
        
        /// <summary>Identifies this resource as order date range. Value: &quot;youtubePartner#dateRange&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("start")]
        public virtual Date Start {
            get {
                return this._start;
            }
            set {
                this._start = value;
            }
        }
    }
    
    public class IntervalCondition {
        
        private System.Nullable<double> _high;
        
        private System.Nullable<double> _low;
        
        /// <summary>The maximum (inclusive) allowed value for the condition to be satisfied. The default value is âˆž.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("high")]
        public virtual System.Nullable<double> High {
            get {
                return this._high;
            }
            set {
                this._high = value;
            }
        }
        
        /// <summary>The minimum (inclusive) allowed value for the condition to be satisfied. The default value is -âˆž.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("low")]
        public virtual System.Nullable<double> Low {
            get {
                return this._low;
            }
            set {
                this._low = value;
            }
        }
    }
    
    public class Metadata {
        
        private System.Collections.Generic.IList<string> _actor;
        
        private string _album;
        
        private System.Collections.Generic.IList<string> _artist;
        
        private System.Collections.Generic.IList<string> _broadcaster;
        
        private string _category;
        
        private string _contentType;
        
        private Date _copyrightDate;
        
        private string _customId;
        
        private string _description;
        
        private System.Collections.Generic.IList<string> _director;
        
        private string _eidr;
        
        private System.Nullable<long> _endYear;
        
        private string _episodeNumber;
        
        private System.Nullable<bool> _episodesAreUntitled;
        
        private System.Collections.Generic.IList<string> _genre;
        
        private string _grid;
        
        private string _hfa;
        
        private string _infoUrl;
        
        private string _isan;
        
        private string _isrc;
        
        private string _iswc;
        
        private System.Collections.Generic.IList<string> _keyword;
        
        private string _label;
        
        private string _notes;
        
        private string _originalReleaseMedium;
        
        private System.Collections.Generic.IList<string> _producer;
        
        private System.Collections.Generic.IList<Rating> _ratings;
        
        private Date _releaseDate;
        
        private string _seasonNumber;
        
        private string _showCustomId;
        
        private string _showTitle;
        
        private string _spokenLanguage;
        
        private System.Nullable<long> _startYear;
        
        private System.Collections.Generic.IList<string> _subtitledLanguage;
        
        private string _title;
        
        private string _tmsId;
        
        private System.Nullable<long> _totalEpisodesExpected;
        
        private string _upc;
        
        private System.Collections.Generic.IList<string> _writer;
        
        /// <summary>A list that identifies actors associated with the asset. You can specify up to 50 actors for an asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("actor")]
        public virtual System.Collections.Generic.IList<string> Actor {
            get {
                return this._actor;
            }
            set {
                this._actor = value;
            }
        }
        
        /// <summary>The album on which a sound recording asset is included. This field is only valid for sound recording assets and has a maximum length of 255 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("album")]
        public virtual string Album {
            get {
                return this._album;
            }
            set {
                this._album = value;
            }
        }
        
        /// <summary>The artist associated with a music video or sound recording asset. This field is only valid for music video and sound recording assets. It is required for sound recordings included in the AudioSwap program.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("artist")]
        public virtual System.Collections.Generic.IList<string> Artist {
            get {
                return this._artist;
            }
            set {
                this._artist = value;
            }
        }
        
        /// <summary>Identifies the network or channel that originally broadcast a show or a season of a show. This field should only be included for an asset if the broadcaster associated with the asset is different from the partner uploading the asset to YouTube. Note that a show may have multiple broadcasters; for example, a show may switch networks between seasons.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("broadcaster")]
        public virtual System.Collections.Generic.IList<string> Broadcaster {
            get {
                return this._broadcaster;
            }
            set {
                this._broadcaster = value;
            }
        }
        
        /// <summary>Category of this asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("category")]
        public virtual string Category {
            get {
                return this._category;
            }
            set {
                this._category = value;
            }
        }
        
        /// <summary>The type of video content that the asset represents. This field is only valid for movie and episode assets, and is required for the following types of those assets:  
        ///- Episode assets that are linked to a show 
        ///- Movie assets that appear in YouTube&apos;s Movies category</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType {
            get {
                return this._contentType;
            }
            set {
                this._contentType = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("copyrightDate")]
        public virtual Date CopyrightDate {
            get {
                return this._copyrightDate;
            }
            set {
                this._copyrightDate = value;
            }
        }
        
        /// <summary>A unique value that you, the metadata provider, use to identify an asset. The value could be a unique ID that you created for the asset or a standard identifier, such as an ISRC. The value has a maximum length of 64 bytes and may contain alphanumeric characters, hyphens (-), underscores (_), periods (.), &quot;at&quot; symbols (@), or forward slashes (/).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customId")]
        public virtual string CustomId {
            get {
                return this._customId;
            }
            set {
                this._customId = value;
            }
        }
        
        /// <summary>A description of the asset. The description may be displayed on YouTube or in CMS. This field has a maximum length of 5,000 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>A list that identifies directors associated with the asset. You can specify up to 50 directors for an asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("director")]
        public virtual System.Collections.Generic.IList<string> Director {
            get {
                return this._director;
            }
            set {
                this._director = value;
            }
        }
        
        /// <summary>The Entertainment Identifier Registry (EIDR) assigned to an asset. This value is only used for episode and movie assets and is optional in both cases. The value contains a standard prefix for EIDR registry, followed by a forward slash, a 20-character hexadecimal string, and an alphanumeric (0-9A-Z) check character.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("eidr")]
        public virtual string Eidr {
            get {
                return this._eidr;
            }
            set {
                this._eidr = value;
            }
        }
        
        /// <summary>The last year that a television show aired. This value is only used for show assets, for which it is optional. Do not specify a value if new show episodes are still being created.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endYear")]
        public virtual System.Nullable<long> EndYear {
            get {
                return this._endYear;
            }
            set {
                this._endYear = value;
            }
        }
        
        /// <summary>The episode number associated with an episode asset. This field is required for and only used for episode assets that are linked to show assets. It has a maximum length of 5 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("episodeNumber")]
        public virtual string EpisodeNumber {
            get {
                return this._episodeNumber;
            }
            set {
                this._episodeNumber = value;
            }
        }
        
        /// <summary>This value indicates that the episodes associated with a particular show asset or a particular season asset are untitled. An untitled show (or season) has episodes which are identified by their episode number or date. If this field is set to true, then YouTube will optimize the title displayed for associated episodes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("episodesAreUntitled")]
        public virtual System.Nullable<bool> EpisodesAreUntitled {
            get {
                return this._episodesAreUntitled;
            }
            set {
                this._episodesAreUntitled = value;
            }
        }
        
        /// <summary>This field specifies a genre that can be used to categorize an asset. Assets may be categorized in more than one genre, and YouTube uses different sets of genres to categorize different types of assets. For example, Soaps might be a valid genre for a show but not for a movie or sound recording.  
        ///- Show assets 
        ///- Movie assets that appear in YouTube&apos;s Movies category 
        ///- Sound recordings included in the AudioSwap program</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("genre")]
        public virtual System.Collections.Generic.IList<string> Genre {
            get {
                return this._genre;
            }
            set {
                this._genre = value;
            }
        }
        
        /// <summary>The GRID (Global Release Identifier) of a music video or sound recording. This field&apos;s value must contain exactly 18 alphanumeric characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("grid")]
        public virtual string Grid {
            get {
                return this._grid;
            }
            set {
                this._grid = value;
            }
        }
        
        /// <summary>The six-character Harry Fox Agency (HFA) song code issued to uniquely identify a composition. This value is only valid for composition assets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hfa")]
        public virtual string Hfa {
            get {
                return this._hfa;
            }
            set {
                this._hfa = value;
            }
        }
        
        /// <summary>An official URL associated with the asset. This field has a maximum length of 1536 bytes. Please do not submit a 1537-byte URL. Your efforts would be futile.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("infoUrl")]
        public virtual string InfoUrl {
            get {
                return this._infoUrl;
            }
            set {
                this._infoUrl = value;
            }
        }
        
        /// <summary>The ISAN (International Standard Audiovisual Number) for the asset. This value is only used for episode and movie assets and is optional in both cases. The value contains 26 characters, which includes the 24 hexadecimal characters of the ISAN as well as two check characters, in the following format:  
        ///- The first 16 characters in the tag value contain hexadecimal characters specifying the &apos;root&apos; and &apos;episode&apos; components of the ISAN. 
        ///- The seventeenth character is a check character (a letter from A-Z). 
        ///- Characters 18 to 25 are the remaining eight characters of the ISAN, which specify the &apos;version&apos; component of the ISAN. 
        ///- The twenty-sixth character is another check character (A-Z).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isan")]
        public virtual string Isan {
            get {
                return this._isan;
            }
            set {
                this._isan = value;
            }
        }
        
        /// <summary>The ISRC (International Standard Recording Code) of a music video or sound recording asset. This field&apos;s value must contain exactly 12 alphanumeric characters.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("isrc")]
        public virtual string Isrc {
            get {
                return this._isrc;
            }
            set {
                this._isrc = value;
            }
        }
        
        /// <summary>The ISWC (International Standard Musical Work Code) for a composition asset. The field&apos;s value must contain exactly 11 characters in the format of a letter (T) followed by 10 digits.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("iswc")]
        public virtual string Iswc {
            get {
                return this._iswc;
            }
            set {
                this._iswc = value;
            }
        }
        
        /// <summary>A list of up to 100 keywords associated with a show asset. This field is required for and also only used for show assets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("keyword")]
        public virtual System.Collections.Generic.IList<string> Keyword {
            get {
                return this._keyword;
            }
            set {
                this._keyword = value;
            }
        }
        
        /// <summary>The record label that released a sound recording asset. This field is only valid for sound recording assets and has a maximum length of 255 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label {
            get {
                return this._label;
            }
            set {
                this._label = value;
            }
        }
        
        /// <summary>Additional information that does not map directly to one of the other metadata fields. This field has a maximum length of 255 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("notes")]
        public virtual string Notes {
            get {
                return this._notes;
            }
            set {
                this._notes = value;
            }
        }
        
        /// <summary>The method by which people first had the opportunity to see a video asset. This value is only used for episode and movie assets. It is required for the assets listed below and otherwise optional:  
        ///- Episode assets that are linked to a show 
        ///- Movie assets that appear in YouTube&apos;s Movies category</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("originalReleaseMedium")]
        public virtual string OriginalReleaseMedium {
            get {
                return this._originalReleaseMedium;
            }
            set {
                this._originalReleaseMedium = value;
            }
        }
        
        /// <summary>A list that identifies producers of the asset. You can specify up to 50 producers for an asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("producer")]
        public virtual System.Collections.Generic.IList<string> Producer {
            get {
                return this._producer;
            }
            set {
                this._producer = value;
            }
        }
        
        /// <summary>A list of ratings that an asset received. The rating must be valid under the specified rating system.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ratings")]
        public virtual System.Collections.Generic.IList<Rating> Ratings {
            get {
                return this._ratings;
            }
            set {
                this._ratings = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("releaseDate")]
        public virtual Date ReleaseDate {
            get {
                return this._releaseDate;
            }
            set {
                this._releaseDate = value;
            }
        }
        
        /// <summary>The season number that identifies a season asset, or the season number that is associated with an episode asset. This field has a maximum length of 5 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seasonNumber")]
        public virtual string SeasonNumber {
            get {
                return this._seasonNumber;
            }
            set {
                this._seasonNumber = value;
            }
        }
        
        /// <summary>The customId of the show asset that a season or episode asset is associated with. It is required for season and episode assets that appear in the Shows category on YouTube, and it is not valid for other types of assets. This field has a maximum length of 64 bytes and may contain alphanumeric characters, hyphens (-), underscores (_), periods (.), &quot;at&quot; symbols (@), or forward slashes (/).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showCustomId")]
        public virtual string ShowCustomId {
            get {
                return this._showCustomId;
            }
            set {
                this._showCustomId = value;
            }
        }
        
        /// <summary>The name of the show that an episode asset is associated with. Note: This tag is only used for and valid for episodes that are not associated with show assets and enables those assets to still display a show title in the asset metadata section of CMS. This field has a maximum length of 120 bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("showTitle")]
        public virtual string ShowTitle {
            get {
                return this._showTitle;
            }
            set {
                this._showTitle = value;
            }
        }
        
        /// <summary>The video&apos;s primary spoken language. The value can be any ISO 639-1 two-letter language code. This value is only used for episode and movie assets and is not valid for other types of assets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spokenLanguage")]
        public virtual string SpokenLanguage {
            get {
                return this._spokenLanguage;
            }
            set {
                this._spokenLanguage = value;
            }
        }
        
        /// <summary>The first year that a television show aired. This value is required for and also only used for show assets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startYear")]
        public virtual System.Nullable<long> StartYear {
            get {
                return this._startYear;
            }
            set {
                this._startYear = value;
            }
        }
        
        /// <summary>A list of languages for which the video has either a separate caption track or burnt-in captions that are part of the video. Each value in the list should be an ISO 639-1 two-letter language code. This value is only used for episode and movie assets and is not valid for other types of assets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subtitledLanguage")]
        public virtual System.Collections.Generic.IList<string> SubtitledLanguage {
            get {
                return this._subtitledLanguage;
            }
            set {
                this._subtitledLanguage = value;
            }
        }
        
        /// <summary>The asset&apos;s title or name. The value has a maximum length of 255 bytes. This value is required for the assets listed below and optional for all other assets:  
        ///- Show assets 
        ///- Episode assets that are linked to a show 
        ///- Movie assets that appear in YouTube&apos;s Movies category 
        ///- Sound recordings included in the AudioSwap program</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>TMS (Tribune Media Systems) ID for the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tmsId")]
        public virtual string TmsId {
            get {
                return this._tmsId;
            }
            set {
                this._tmsId = value;
            }
        }
        
        /// <summary>Specifies the total number of full-length episodes in the season. This value is used only for season assets.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalEpisodesExpected")]
        public virtual System.Nullable<long> TotalEpisodesExpected {
            get {
                return this._totalEpisodesExpected;
            }
            set {
                this._totalEpisodesExpected = value;
            }
        }
        
        /// <summary>The UPC (Universal Product Code) associated with the asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("upc")]
        public virtual string Upc {
            get {
                return this._upc;
            }
            set {
                this._upc = value;
            }
        }
        
        /// <summary>A list that identifies writers associated with the asset. You can specify up to 50 writers for an asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("writer")]
        public virtual System.Collections.Generic.IList<string> Writer {
            get {
                return this._writer;
            }
            set {
                this._writer = value;
            }
        }
    }
    
    public class MetadataHistory {
        
        private string _kind;
        
        private Metadata _metadata;
        
        private Origination _origination;
        
        private string _timeProvidedMs;
        
        /// <summary>The type of the API resource. For metadata history resources, the value is youtubePartner#metadataHistory.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual Metadata Metadata {
            get {
                return this._metadata;
            }
            set {
                this._metadata = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("origination")]
        public virtual Origination Origination {
            get {
                return this._origination;
            }
            set {
                this._origination = value;
            }
        }
        
        /// <summary>The time the metadata was provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeProvidedMs")]
        public virtual string TimeProvidedMs {
            get {
                return this._timeProvidedMs;
            }
            set {
                this._timeProvidedMs = value;
            }
        }
    }
    
    public class MetadataHistoryListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<MetadataHistory> _items;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>A list of metadata history (youtubePartner#metadataHistory) resources that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<MetadataHistory> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#metadataHistoryList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class Order : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _availGroupId;
        
        private string _channelId;
        
        private string _contentType;
        
        private string _country;
        
        private string _customId;
        
        private Date _dvdReleaseDate;
        
        private DateRange _estDates;
        
        private System.Collections.Generic.IList<StateCompleted> _events;
        
        private string _id;
        
        private string _kind;
        
        private string _movie;
        
        private Date _originalReleaseDate;
        
        private string _priority;
        
        private string _productionHouse;
        
        private string _purchaseOrder;
        
        private Requirements _requirements;
        
        private ShowDetails _show;
        
        private string _status;
        
        private string _videoId;
        
        private DateRange _vodDates;
        
        private string _ETag;
        
        /// <summary>Links an order to the avails associated with it.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("availGroupId")]
        public virtual string AvailGroupId {
            get {
                return this._availGroupId;
            }
            set {
                this._availGroupId = value;
            }
        }
        
        /// <summary>Channel ID - identifies the channel this order and video are associated with</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Type of content possible values are 
        ///- MOVIE
        ///- SHOW</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType {
            get {
                return this._contentType;
            }
            set {
                this._contentType = value;
            }
        }
        
        /// <summary>Two letter country code for the order only countries where YouTube does transactional business are allowed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("country")]
        public virtual string Country {
            get {
                return this._country;
            }
            set {
                this._country = value;
            }
        }
        
        /// <summary>Secondary id to be used to identify content in other systems like partner database</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("customId")]
        public virtual string CustomId {
            get {
                return this._customId;
            }
            set {
                this._customId = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("dvdReleaseDate")]
        public virtual Date DvdReleaseDate {
            get {
                return this._dvdReleaseDate;
            }
            set {
                this._dvdReleaseDate = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("estDates")]
        public virtual DateRange EstDates {
            get {
                return this._estDates;
            }
            set {
                this._estDates = value;
            }
        }
        
        /// <summary>History log of events for this order</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("events")]
        public virtual System.Collections.Generic.IList<StateCompleted> Events {
            get {
                return this._events;
            }
            set {
                this._events = value;
            }
        }
        
        /// <summary>Order Id unique identifier for an order.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Identifies this resource as order. Value: &quot;youtubePartner#order&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Title if the order is type movie.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("movie")]
        public virtual string Movie {
            get {
                return this._movie;
            }
            set {
                this._movie = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("originalReleaseDate")]
        public virtual Date OriginalReleaseDate {
            get {
                return this._originalReleaseDate;
            }
            set {
                this._originalReleaseDate = value;
            }
        }
        
        /// <summary>The priority for the order in the QC review queue once the content is ready for QC.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("priority")]
        public virtual string Priority {
            get {
                return this._priority;
            }
            set {
                this._priority = value;
            }
        }
        
        /// <summary>Post production house that is to process this order</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("productionHouse")]
        public virtual string ProductionHouse {
            get {
                return this._productionHouse;
            }
            set {
                this._productionHouse = value;
            }
        }
        
        /// <summary>Youtube purchase order reference for the post production house.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("purchaseOrder")]
        public virtual string PurchaseOrder {
            get {
                return this._purchaseOrder;
            }
            set {
                this._purchaseOrder = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("requirements")]
        public virtual Requirements Requirements {
            get {
                return this._requirements;
            }
            set {
                this._requirements = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("show")]
        public virtual ShowDetails Show {
            get {
                return this._show;
            }
            set {
                this._show = value;
            }
        }
        
        /// <summary>The order&apos;s status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
        
        /// <summary>Video ID the video that this order is associated with if any.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
        public virtual string VideoId {
            get {
                return this._videoId;
            }
            set {
                this._videoId = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("vodDates")]
        public virtual DateRange VodDates {
            get {
                return this._vodDates;
            }
            set {
                this._vodDates = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class OrderListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Order> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _previousPageToken;
        
        private string _ETag;
        
        /// <summary>A list of orders that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Order> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#orderList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("previousPageToken")]
        public virtual string PreviousPageToken {
            get {
                return this._previousPageToken;
            }
            set {
                this._previousPageToken = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class Origination {
        
        private string _owner;
        
        private string _source;
        
        /// <summary>The content owner who provided the metadata or ownership information.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("owner")]
        public virtual string Owner {
            get {
                return this._owner;
            }
            set {
                this._owner = value;
            }
        }
        
        /// <summary>The mechanism by which the piece of metadata, ownership or relationship information was provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("source")]
        public virtual string Source {
            get {
                return this._source;
            }
            set {
                this._source = value;
            }
        }
    }
    
    public class OwnershipHistoryListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<RightsOwnershipHistory> _items;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>A list of ownership history (youtubePartner#ownershipHistory) resources that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<RightsOwnershipHistory> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#ownershipHistoryList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class PageInfo {
        
        private System.Nullable<long> _resultsPerPage;
        
        private System.Nullable<long> _startIndex;
        
        private System.Nullable<long> _totalResults;
        
        /// <summary>The number of results included in the API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resultsPerPage")]
        public virtual System.Nullable<long> ResultsPerPage {
            get {
                return this._resultsPerPage;
            }
            set {
                this._resultsPerPage = value;
            }
        }
        
        /// <summary>The index of the first item in the API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startIndex")]
        public virtual System.Nullable<long> StartIndex {
            get {
                return this._startIndex;
            }
            set {
                this._startIndex = value;
            }
        }
        
        /// <summary>The total number of results in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalResults")]
        public virtual System.Nullable<long> TotalResults {
            get {
                return this._totalResults;
            }
            set {
                this._totalResults = value;
            }
        }
    }
    
    public class Policy : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _description;
        
        private string _id;
        
        private string _kind;
        
        private string _name;
        
        private System.Collections.Generic.IList<PolicyRule> _rule;
        
        private System.Collections.Generic.IList<PolicyRule> _rules;
        
        private string _ETag;
        
        /// <summary>The policy&apos;s description.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>A value that YouTube assigns and uses to uniquely identify the policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Identifies this as a policy. Value: &quot;youtubePartner#policy&quot; The type of the API resource. The asset match policy is a type of policy, so for this resource, the value is youtubePartner#policy.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The policy&apos;s name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        /// <summary>A list of rules that specify the circumstances under which the policy is enforced.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rule")]
        public virtual System.Collections.Generic.IList<PolicyRule> Rule {
            get {
                return this._rule;
            }
            set {
                this._rule = value;
            }
        }
        
        /// <summary>A list of rules that collectively define the policy that the content owner wants to apply to user-uploaded videos that match the asset. Each rule specifies the action that YouTube should take and may optionally specify conditions under which that action is enforced.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rules")]
        public virtual System.Collections.Generic.IList<PolicyRule> Rules {
            get {
                return this._rules;
            }
            set {
                this._rules = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class PolicyList : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Policy> _items;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>A list of saved policies.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Policy> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#policyList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class PolicyRule {
        
        private string _action;
        
        private Conditions _conditions;
        
        private string _subaction;
        
        /// <summary>The policy that YouTube should enforce if the rule&apos;s conditions are all valid for an asset or for an attempt to view that asset on YouTube.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("action")]
        public virtual string Action {
            get {
                return this._action;
            }
            set {
                this._action = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("conditions")]
        public virtual Conditions Conditions {
            get {
                return this._conditions;
            }
            set {
                this._conditions = value;
            }
        }
        
        /// <summary>A list of additional actions that YouTube should take if the conditions in the rule are met.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subaction")]
        public virtual string Subaction {
            get {
                return this._subaction;
            }
            set {
                this._subaction = value;
            }
        }
    }
    
    public class Publisher : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _caeNumber;
        
        private string _id;
        
        private string _ipiNumber;
        
        private string _kind;
        
        private string _name;
        
        private string _ETag;
        
        /// <summary>The publisher&apos;s unique CAE (Compositeur, Auteur and Editeur) number.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("caeNumber")]
        public virtual string CaeNumber {
            get {
                return this._caeNumber;
            }
            set {
                this._caeNumber = value;
            }
        }
        
        /// <summary>A value that YouTube assigns and uses to uniquely identify the publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The publisher&apos;s unique IPI (Interested Parties Information) code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ipiNumber")]
        public virtual string IpiNumber {
            get {
                return this._ipiNumber;
            }
            set {
                this._ipiNumber = value;
            }
        }
        
        /// <summary>The type of the API resource. For this resource, the value is youtubePartner#publisher.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The publisher&apos;s name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name {
            get {
                return this._name;
            }
            set {
                this._name = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class PublisherList : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Publisher> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _ETag;
        
        /// <summary>A list of publishers that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Publisher> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#publisherList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class Rating {
        
        private string _rating;
        
        private string _ratingSystem;
        
        /// <summary>The rating that the asset received.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rating")]
        public virtual string RatingValue {
            get {
                return this._rating;
            }
            set {
                this._rating = value;
            }
        }
        
        /// <summary>The rating system associated with the rating.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ratingSystem")]
        public virtual string RatingSystem {
            get {
                return this._ratingSystem;
            }
            set {
                this._ratingSystem = value;
            }
        }
    }
    
    public class Reference : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _assetId;
        
        private System.Nullable<bool> _audioswapEnabled;
        
        private string _contentType;
        
        private string _duplicateLeader;
        
        private System.Nullable<bool> _fpDirect;
        
        private string _hashCode;
        
        private string _id;
        
        private System.Nullable<bool> _ignoreFpMatch;
        
        private string _kind;
        
        private System.Nullable<double> _length;
        
        private string _status;
        
        private string _statusReason;
        
        private System.Nullable<bool> _urgent;
        
        private string _videoId;
        
        private string _ETag;
        
        /// <summary>The ID that uniquely identifies the asset that the reference is associated with.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("assetId")]
        public virtual string AssetId {
            get {
                return this._assetId;
            }
            set {
                this._assetId = value;
            }
        }
        
        /// <summary>Set this field&apos;s value to true to indicate that the reference content should be included in YouTube&apos;s AudioSwap program.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("audioswapEnabled")]
        public virtual System.Nullable<bool> AudioswapEnabled {
            get {
                return this._audioswapEnabled;
            }
            set {
                this._audioswapEnabled = value;
            }
        }
        
        /// <summary>The type of content that the reference represents.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentType")]
        public virtual string ContentType {
            get {
                return this._contentType;
            }
            set {
                this._contentType = value;
            }
        }
        
        /// <summary>The ID that uniquely identifies the reference that this reference duplicates. This field is only present if the reference&apos;s status is duplicate_on_hold.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duplicateLeader")]
        public virtual string DuplicateLeader {
            get {
                return this._duplicateLeader;
            }
            set {
                this._duplicateLeader = value;
            }
        }
        
        /// <summary>When uploading a reference, set this value to true to indicate that the reference is a pre-generated fingerprint.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("fpDirect")]
        public virtual System.Nullable<bool> FpDirect {
            get {
                return this._fpDirect;
            }
            set {
                this._fpDirect = value;
            }
        }
        
        /// <summary>The MD5 hashcode of the reference content.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hashCode")]
        public virtual string HashCode {
            get {
                return this._hashCode;
            }
            set {
                this._hashCode = value;
            }
        }
        
        /// <summary>A value that YouTube assigns and uses to uniquely identify a reference.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>Set this value to true to indicate that the reference should not be used to generate claims. This field is only used on AudioSwap references.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ignoreFpMatch")]
        public virtual System.Nullable<bool> IgnoreFpMatch {
            get {
                return this._ignoreFpMatch;
            }
            set {
                this._ignoreFpMatch = value;
            }
        }
        
        /// <summary>The type of the API resource. For reference resources, the value is youtubePartner#reference.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The length of the reference in seconds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("length")]
        public virtual System.Nullable<double> Length {
            get {
                return this._length;
            }
            set {
                this._length = value;
            }
        }
        
        /// <summary>The reference&apos;s status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual string Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
        
        /// <summary>An explanation of how a reference entered its current state. This value is only present if the reference&apos;s status is either inactive or deleted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statusReason")]
        public virtual string StatusReason {
            get {
                return this._statusReason;
            }
            set {
                this._statusReason = value;
            }
        }
        
        /// <summary>Set this value to true to indicate that YouTube should prioritize Content ID processing for a video file. YouTube processes urgent video files before other files that are not marked as urgent. This setting is primarily used for videos of live events or other videos that require time-sensitive processing. The sooner YouTube completes Content ID processing for a video, the sooner YouTube can match user-uploaded videos to that video.
        ///
        ///Note that marking all of your files as urgent could delay processing for those files.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("urgent")]
        public virtual System.Nullable<bool> Urgent {
            get {
                return this._urgent;
            }
            set {
                this._urgent = value;
            }
        }
        
        /// <summary>This field is present if the reference was created by associating an asset with an existing YouTube video that was uploaded to a YouTube channel linked to your CMS account. In that case, this field contains the ID of the source video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
        public virtual string VideoId {
            get {
                return this._videoId;
            }
            set {
                this._videoId = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class ReferenceListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Reference> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _ETag;
        
        /// <summary>A list of references that match the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Reference> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of the API response. For this operation, the value is youtubePartner#referenceList.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class Requirements {
        
        private System.Nullable<bool> _caption;
        
        private System.Nullable<bool> _hdTranscode;
        
        private System.Nullable<bool> _posterArt;
        
        private System.Nullable<bool> _spotlightArt;
        
        private System.Nullable<bool> _spotlightReview;
        
        private System.Nullable<bool> _trailer;
        
        /// <summary>This value indicates whether the order requires closed captions.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("caption")]
        public virtual System.Nullable<bool> Caption {
            get {
                return this._caption;
            }
            set {
                this._caption = value;
            }
        }
        
        /// <summary>This value indicates whether the order requires HD-quality video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hdTranscode")]
        public virtual System.Nullable<bool> HdTranscode {
            get {
                return this._hdTranscode;
            }
            set {
                this._hdTranscode = value;
            }
        }
        
        /// <summary>This value indicates whether the order requires poster artwork.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("posterArt")]
        public virtual System.Nullable<bool> PosterArt {
            get {
                return this._posterArt;
            }
            set {
                this._posterArt = value;
            }
        }
        
        /// <summary>This value indicates whether the order requires spotlight artwork.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spotlightArt")]
        public virtual System.Nullable<bool> SpotlightArt {
            get {
                return this._spotlightArt;
            }
            set {
                this._spotlightArt = value;
            }
        }
        
        /// <summary>This value indicates whether the spotlight artwork for the order needs to be reviewed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("spotlightReview")]
        public virtual System.Nullable<bool> SpotlightReview {
            get {
                return this._spotlightReview;
            }
            set {
                this._spotlightReview = value;
            }
        }
        
        /// <summary>This value indicates whether the order requires a trailer.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("trailer")]
        public virtual System.Nullable<bool> Trailer {
            get {
                return this._trailer;
            }
            set {
                this._trailer = value;
            }
        }
    }
    
    public class RightsOwnership : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<TerritoryOwners> _general;
        
        private string _kind;
        
        private System.Collections.Generic.IList<TerritoryOwners> _mechanical;
        
        private System.Collections.Generic.IList<TerritoryOwners> _performance;
        
        private System.Collections.Generic.IList<TerritoryOwners> _synchronization;
        
        private string _ETag;
        
        /// <summary>A list that identifies the owners of an asset and the territories where each owner has ownership. General asset ownership is used for all types of assets and is the only type of ownership data that can be provided for assets that are not compositions.
        ///
        ///Note: You cannot specify general ownership rights and also specify either mechanical, performance, or synchronization rights.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("general")]
        public virtual System.Collections.Generic.IList<TerritoryOwners> General {
            get {
                return this._general;
            }
            set {
                this._general = value;
            }
        }
        
        /// <summary>The type of the API resource. For rightsOwnership resources, the value is youtubePartner#rightsOwnership.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>A list that identifies owners of the mechanical rights for a composition asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("mechanical")]
        public virtual System.Collections.Generic.IList<TerritoryOwners> Mechanical {
            get {
                return this._mechanical;
            }
            set {
                this._mechanical = value;
            }
        }
        
        /// <summary>A list that identifies owners of the performance rights for a composition asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("performance")]
        public virtual System.Collections.Generic.IList<TerritoryOwners> Performance {
            get {
                return this._performance;
            }
            set {
                this._performance = value;
            }
        }
        
        /// <summary>A list that identifies owners of the synchronization rights for a composition asset.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("synchronization")]
        public virtual System.Collections.Generic.IList<TerritoryOwners> Synchronization {
            get {
                return this._synchronization;
            }
            set {
                this._synchronization = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class RightsOwnershipHistory {
        
        private string _kind;
        
        private Origination _origination;
        
        private RightsOwnership _ownership;
        
        private string _timeProvidedMs;
        
        /// <summary>The type of the API resource. For ownership history resources, the value is youtubePartner#rightsOwnershipHistory.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("origination")]
        public virtual Origination Origination {
            get {
                return this._origination;
            }
            set {
                this._origination = value;
            }
        }
        
        [Newtonsoft.Json.JsonPropertyAttribute("ownership")]
        public virtual RightsOwnership Ownership {
            get {
                return this._ownership;
            }
            set {
                this._ownership = value;
            }
        }
        
        /// <summary>The time that the ownership data was provided.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeProvidedMs")]
        public virtual string TimeProvidedMs {
            get {
                return this._timeProvidedMs;
            }
            set {
                this._timeProvidedMs = value;
            }
        }
    }
    
    public class ShowDetails {
        
        private string _episodeNumber;
        
        private string _episodeTitle;
        
        private string _seasonNumber;
        
        private string _title;
        
        /// <summary>The episode number associated with the episode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("episodeNumber")]
        public virtual string EpisodeNumber {
            get {
                return this._episodeNumber;
            }
            set {
                this._episodeNumber = value;
            }
        }
        
        /// <summary>The episode&apos;s title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("episodeTitle")]
        public virtual string EpisodeTitle {
            get {
                return this._episodeTitle;
            }
            set {
                this._episodeTitle = value;
            }
        }
        
        /// <summary>The season number associated with the episode.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("seasonNumber")]
        public virtual string SeasonNumber {
            get {
                return this._seasonNumber;
            }
            set {
                this._seasonNumber = value;
            }
        }
        
        /// <summary>The show&apos;s title</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
    }
    
    public class StateCompleted {
        
        private string _state;
        
        private string _timeCompleted;
        
        /// <summary>The state that the order entered.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("state")]
        public virtual string State {
            get {
                return this._state;
            }
            set {
                this._state = value;
            }
        }
        
        /// <summary>The time that the state transition occurred.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeCompleted")]
        public virtual string TimeCompleted {
            get {
                return this._timeCompleted;
            }
            set {
                this._timeCompleted = value;
            }
        }
    }
    
    public class TerritoryCondition {
        
        private System.Collections.Generic.IList<string> _territories;
        
        private string _type;
        
        /// <summary>A list of territories. Each territory is an ISO 3166 two-letter country code..</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("territories")]
        public virtual System.Collections.Generic.IList<string> Territories {
            get {
                return this._territories;
            }
            set {
                this._territories = value;
            }
        }
        
        /// <summary>This field indicates whether the associated policy rule is or is not valid in the specified territories.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
    }
    
    public class TerritoryOwners {
        
        private string _owner;
        
        private string _publisher;
        
        private System.Nullable<long> _ratio;
        
        private System.Collections.Generic.IList<string> _territories;
        
        private string _type;
        
        /// <summary>The name of the asset&apos;s owner or rights administrator.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("owner")]
        public virtual string Owner {
            get {
                return this._owner;
            }
            set {
                this._owner = value;
            }
        }
        
        /// <summary>The name of the asset&apos;s publisher. This field is only used for composition assets, and it is used when the asset owner is not known to have a formal relationship established with YouTube.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publisher")]
        public virtual string Publisher {
            get {
                return this._publisher;
            }
            set {
                this._publisher = value;
            }
        }
        
        /// <summary>The percentage of the asset that the owner controls or administers. For composition assets, the value can be any decimal value between 0 and 100 inclusive. For all other assets, the only valid values are 100, which indicates that the owner completely owns the asset in the specified territories, and 0, which indicates that you are removing ownership of the asset in the specified territories.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("ratio")]
        public virtual System.Nullable<long> Ratio {
            get {
                return this._ratio;
            }
            set {
                this._ratio = value;
            }
        }
        
        /// <summary>A list of territories where the owner owns (or does not own) the asset. Each territory is an ISO 3166 two-letter country code..</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("territories")]
        public virtual System.Collections.Generic.IList<string> Territories {
            get {
                return this._territories;
            }
            set {
                this._territories = value;
            }
        }
        
        /// <summary>This field indicates whether the ownership data applies or does not apply in the specified territories.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
    }
    
    public class VideoAdvertisingOption : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<AdBreak> _adBreaks;
        
        private System.Collections.Generic.IList<string> _adFormats;
        
        private System.Collections.Generic.IList<string> _breakPosition;
        
        private string _id;
        
        private string _kind;
        
        private string _tpAdServerVideoId;
        
        private string _tpTargetingUrl;
        
        private string _tpUrlParameters;
        
        private string _ETag;
        
        /// <summary>A list of times when YouTube can show an in-stream advertisement during playback of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adBreaks")]
        public virtual System.Collections.Generic.IList<AdBreak> AdBreaks {
            get {
                return this._adBreaks;
            }
            set {
                this._adBreaks = value;
            }
        }
        
        /// <summary>A list of ad formats that the video is allowed to show.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adFormats")]
        public virtual System.Collections.Generic.IList<string> AdFormats {
            get {
                return this._adFormats;
            }
            set {
                this._adFormats = value;
            }
        }
        
        /// <summary>The point at which the break occurs during the video playback.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("breakPosition")]
        public virtual System.Collections.Generic.IList<string> BreakPosition {
            get {
                return this._breakPosition;
            }
            set {
                this._breakPosition = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the video associated with the advertising settings.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For this resource, the value is youtubePartner#videoAdvertisingOption.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>A value that uniquely identifies the video to the third-party ad server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tpAdServerVideoId")]
        public virtual string TpAdServerVideoId {
            get {
                return this._tpAdServerVideoId;
            }
            set {
                this._tpAdServerVideoId = value;
            }
        }
        
        /// <summary>The base URL for a third-party ad server from which YouTube can retrieve in-stream ads for the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tpTargetingUrl")]
        public virtual string TpTargetingUrl {
            get {
                return this._tpTargetingUrl;
            }
            set {
                this._tpTargetingUrl = value;
            }
        }
        
        /// <summary>A parameter string to append to the end of the request to the third-party ad server.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tpUrlParameters")]
        public virtual string TpUrlParameters {
            get {
                return this._tpUrlParameters;
            }
            set {
                this._tpUrlParameters = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class VideoAdvertisingOptionGetEnabledAdsResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<AdBreak> _adBreaks;
        
        private System.Nullable<bool> _adsOnEmbeds;
        
        private System.Collections.Generic.IList<CountriesRestriction> _countriesRestriction;
        
        private string _id;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>A list of ad breaks that occur in a claimed YouTube video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adBreaks")]
        public virtual System.Collections.Generic.IList<AdBreak> AdBreaks {
            get {
                return this._adBreaks;
            }
            set {
                this._adBreaks = value;
            }
        }
        
        /// <summary>This field indicates whether YouTube can show ads when the video is played in an embedded player.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("adsOnEmbeds")]
        public virtual System.Nullable<bool> AdsOnEmbeds {
            get {
                return this._adsOnEmbeds;
            }
            set {
                this._adsOnEmbeds = value;
            }
        }
        
        /// <summary>A list that identifies the countries where ads can run and the types of ads allowed in those countries.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("countriesRestriction")]
        public virtual System.Collections.Generic.IList<CountriesRestriction> CountriesRestriction {
            get {
                return this._countriesRestriction;
            }
            set {
                this._countriesRestriction = value;
            }
        }
        
        /// <summary>The ID that YouTube uses to uniquely identify the claimed video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of the API resource. For this resource, the value is youtubePartner#videoAdvertisingOptionGetEnabledAds.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
}
namespace Google.Apis.YoutubePartner.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class YoutubePartnerService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService _service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"etag\":\"\\\"zZ6SZIrxjkCWan0Pp0n2ulHSaJk/oQR-RWQ" +
            "i53sCiZw-6A86zbZQJzc\\\"\",\"discoveryVersion\":\"v1\",\"id\":\"youtubePartner:v1\",\"name\":" +
            "\"youtubePartner\",\"version\":\"v1\",\"revision\":\"20121212\",\"title\":\"Youtube Content P" +
            "artner API\",\"description\":\"API for YouTube partners. To use this API YouTube CMS" +
            " account is required.\",\"icons\":{\"x16\":\"http://www.google.com/images/icons/produc" +
            "t/youtube-16.png\",\"x32\":\"http://www.google.com/images/icons/product/youtube-32.p" +
            "ng\"},\"documentationLink\":\"https://developers.google.com/youtube/partner/\",\"proto" +
            "col\":\"rest\",\"baseUrl\":\"https://www.googleapis.com/youtube/partner/v1/\",\"basePath" +
            "\":\"/youtube/partner/v1/\",\"rootUrl\":\"https://www.googleapis.com/\",\"servicePath\":\"" +
            "youtube/partner/v1/\",\"batchPath\":\"batch\",\"parameters\":{\"alt\":{\"type\":\"string\",\"d" +
            "escription\":\"Data format for the response.\",\"default\":\"json\",\"enum\":[\"json\"],\"en" +
            "umDescriptions\":[\"Responses with Content-Type of application/json\"],\"location\":\"" +
            "query\"},\"fields\":{\"type\":\"string\",\"description\":\"Selector specifying which field" +
            "s to include in a partial response.\",\"location\":\"query\"},\"key\":{\"type\":\"string\"," +
            "\"description\":\"API key. Your API key identifies your project and provides you wi" +
            "th API access, quota, and reports. Required unless you provide an OAuth 2.0 toke" +
            "n.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\",\"description\":\"OAuth 2.0 " +
            "token for the current user.\",\"location\":\"query\"},\"prettyPrint\":{\"type\":\"boolean\"" +
            ",\"description\":\"Returns response with indentations and line breaks.\",\"default\":\"" +
            "true\",\"location\":\"query\"},\"quotaUser\":{\"type\":\"string\",\"description\":\"Available " +
            "to use for quota purposes for server-side applications. Can be any arbitrary str" +
            "ing assigned to a user, but should not exceed 40 characters. Overrides userIp if" +
            " both are provided.\",\"location\":\"query\"},\"userIp\":{\"type\":\"string\",\"description\"" +
            ":\"IP address of the site where the request originates. Use this if you want to e" +
            "nforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oauth2\":{\"scopes\":{\"https" +
            "://www.googleapis.com/auth/youtubepartner\":{\"description\":\"View and manage your " +
            "assets and associated content on YouTube\"}}}},\"schemas\":{\"AdBreak\":{\"id\":\"AdBrea" +
            "k\",\"type\":\"object\",\"properties\":{\"midrollSeconds\":{\"type\":\"integer\",\"description" +
            "\":\"The time of the ad break specified as the number of seconds after the start o" +
            "f the video when the break occurs.\",\"format\":\"int32\"},\"position\":{\"type\":\"string" +
            "\",\"description\":\"The point at which the break occurs during the video playback.\"" +
            "},\"slot\":{\"type\":\"array\",\"description\":\"A list of ad slots that occur in an ad b" +
            "reak. Ad slots let you specify the number of ads that should run in each break.\"" +
            ",\"items\":{\"$ref\":\"AdSlot\"}}}},\"AdSlot\":{\"id\":\"AdSlot\",\"type\":\"object\",\"propertie" +
            "s\":{\"id\":{\"type\":\"string\",\"description\":\"A value that identifies the ad slot to " +
            "the ad server.\"},\"type\":{\"type\":\"string\",\"description\":\"The type of ad that runs" +
            " in the slot. The value may affect YouTube\'s fallback behavior if the third-part" +
            "y platform does not return ads.\"}}},\"AllowedAdvertisingOptions\":{\"id\":\"AllowedAd" +
            "vertisingOptions\",\"type\":\"object\",\"properties\":{\"adsOnEmbeds\":{\"type\":\"boolean\"," +
            "\"description\":\"This setting indicates whether the partner can display ads when v" +
            "ideos run in an embedded player.\"},\"kind\":{\"type\":\"string\",\"description\":\"This p" +
            "roperty identifies the resource type. Its value is youtubePartner#allowedAdverti" +
            "singOptions.\",\"default\":\"youtubePartner#allowedAdvertisingOptions\"},\"licAdFormat" +
            "s\":{\"type\":\"array\",\"description\":\"A list of ad formats that the partner is allow" +
            "ed to use for its uploaded videos.\",\"items\":{\"type\":\"string\"}},\"ugcAdFormats\":{\"" +
            "type\":\"array\",\"description\":\"A list of ad formats that the partner is allowed to" +
            " use for claimed, user-uploaded content.\",\"items\":{\"type\":\"string\"}}}},\"Asset\":{" +
            "\"id\":\"Asset\",\"type\":\"object\",\"properties\":{\"aliasId\":{\"type\":\"array\",\"descriptio" +
            "n\":\"A list of asset IDs that can be used to refer to the asset. The list contain" +
            "s values if the asset represents multiple constituent assets that have been merg" +
            "ed. In that case, any of the asset IDs originally assigned to the constituent as" +
            "sets could be used to update the master, or synthesized, asset.\",\"items\":{\"type\"" +
            ":\"string\"}},\"id\":{\"type\":\"string\",\"description\":\"An ID that YouTube assigns and " +
            "uses to uniquely identify the asset.\",\"annotations\":{\"required\":[\"youtubePartner" +
            ".assetMatchPolicy.update\",\"youtubePartner.ownership.update\"]}},\"kind\":{\"type\":\"s" +
            "tring\",\"description\":\"The type of the API resource. For asset resources, the val" +
            "ue is youtubePartner#asset.\",\"default\":\"youtubePartner#asset\"},\"matchPolicy\":{\"$" +
            "ref\":\"Policy\",\"description\":\"The matchPolicy object contains information about t" +
            "he asset\'s match policy, which YouTube applies to user-uploaded videos that matc" +
            "h the asset.\"},\"metadata\":{\"$ref\":\"Metadata\",\"description\":\"The metadata object " +
            "contains information that identifies and describes the asset. This information c" +
            "ould be used to search for the asset or to eliminate duplication within YouTube\'" +
            "s database.\"},\"ownership\":{\"$ref\":\"RightsOwnership\",\"description\":\"The ownership" +
            " object identifies an asset\'s owners and provides additional details about their" +
            " ownership, such as the territories where they own the asset.\"},\"status\":{\"type\"" +
            ":\"string\",\"description\":\"The asset\'s status.\"},\"type\":{\"type\":\"string\",\"descript" +
            "ion\":\"The asset\'s type. This value determines the metadata fields that you can s" +
            "et for the asset. In addition, certain API functions may only be supported for s" +
            "pecific types of assets. For example, composition assets may have more complex o" +
            "wnership data than other types of assets.\"}}},\"AssetListResponse\":{\"id\":\"AssetLi" +
            "stResponse\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":" +
            "\"A list of asset resources that match the request criteria.\",\"items\":{\"$ref\":\"As" +
            "set\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of the API response. For " +
            "this operation, the value is youtubePartner#assetList.\",\"default\":\"youtubePartne" +
            "r#assetList\"}}},\"AssetRelationship\":{\"id\":\"AssetRelationship\",\"type\":\"object\",\"p" +
            "roperties\":{\"childAssetId\":{\"type\":\"string\",\"description\":\"The ID of the child (" +
            "contained) asset.\"},\"id\":{\"type\":\"string\",\"description\":\"A value that YouTube as" +
            "signs and uses to uniquely identify the asset relationship.\"},\"kind\":{\"type\":\"st" +
            "ring\",\"description\":\"The type of the API resource. For this resource, the value " +
            "is youtubePartner#assetRelationship.\",\"default\":\"youtubePartner#assetRelationshi" +
            "p\"},\"parentAssetId\":{\"type\":\"string\",\"description\":\"The ID of the parent (contai" +
            "ning) asset.\"}}},\"AssetRelationshipListResponse\":{\"id\":\"AssetRelationshipListRes" +
            "ponse\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"A li" +
            "st of assetRelationship resources that match the request criteria.\",\"items\":{\"$r" +
            "ef\":\"AssetRelationship\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of the" +
            " API response. For this operation, the value is youtubePartner#assetRelationship" +
            "List.\",\"default\":\"youtubePartner#assetRelationshipList\"},\"nextPageToken\":{\"type\"" +
            ":\"string\",\"description\":\"The token that can be used as the value of the pageToke" +
            "n parameter to retrieve the next page of results.\"},\"pageInfo\":{\"$ref\":\"PageInfo" +
            "\",\"description\":\"The pageInfo object encapsulates paging information for the res" +
            "ult set.\"}}},\"AssetSearchResponse\":{\"id\":\"AssetSearchResponse\",\"type\":\"object\",\"" +
            "properties\":{\"items\":{\"type\":\"array\",\"description\":\"A list of asset resources th" +
            "at match the request criteria.\",\"items\":{\"$ref\":\"AssetSnippet\"}},\"kind\":{\"type\":" +
            "\"string\",\"description\":\"The type of the API response. For this operation, the va" +
            "lue is youtubePartner#assetSnippetList.\",\"default\":\"youtubePartner#assetSnippetL" +
            "ist\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"The token that can be used" +
            " as the value of the pageToken parameter to retrieve the next page of results.\"}" +
            ",\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"The pageInfo object encapsulates p" +
            "aging information for the result set.\"}}},\"AssetSnippet\":{\"id\":\"AssetSnippet\",\"t" +
            "ype\":\"object\",\"properties\":{\"customId\":{\"type\":\"string\",\"description\":\"Custom ID" +
            " assigned by the content owner to this asset.\"},\"id\":{\"type\":\"string\",\"descripti" +
            "on\":\"An ID that YouTube assigns and uses to uniquely identify the asset.\"},\"isrc" +
            "\":{\"type\":\"string\",\"description\":\"The ISRC (International Standard Recording Cod" +
            "e) for this asset.\"},\"iswc\":{\"type\":\"string\",\"description\":\"The ISWC (Internatio" +
            "nal Standard Musical Work Code) for this asset.\"},\"kind\":{\"type\":\"string\",\"descr" +
            "iption\":\"The type of the API resource. For this operation, the value is youtubeP" +
            "artner#assetSnippet.\",\"default\":\"youtubePartner#assetSnippet\"},\"title\":{\"type\":\"" +
            "string\",\"description\":\"Title of this asset.\"},\"type\":{\"type\":\"string\",\"descripti" +
            "on\":\"The asset\'s type. This value determines which metadata fields might be incl" +
            "uded in the metadata object.\"}}},\"Claim\":{\"id\":\"Claim\",\"type\":\"object\",\"properti" +
            "es\":{\"assetId\":{\"type\":\"string\",\"description\":\"The unique YouTube asset ID that " +
            "identifies the asset associated with the claim.\",\"annotations\":{\"required\":[\"you" +
            "tubePartner.claims.insert\"]}},\"contentType\":{\"type\":\"string\",\"description\":\"This" +
            " value indicates whether the claim covers the audio, video, or audiovisual porti" +
            "on of the claimed content.\",\"annotations\":{\"required\":[\"youtubePartner.claims.in" +
            "sert\"]}},\"id\":{\"type\":\"string\",\"description\":\"The ID that YouTube assigns and us" +
            "es to uniquely identify the claim.\"},\"kind\":{\"type\":\"string\",\"description\":\"The " +
            "type of the API resource. For claim resources, this value is youtubePartner#clai" +
            "m.\",\"default\":\"youtubePartner#claim\"},\"policy\":{\"$ref\":\"Policy\",\"description\":\"T" +
            "he policy that YouTube will enforce for the claim.\"},\"status\":{\"type\":\"string\",\"" +
            "description\":\"The claim\'s status. When updating a claim, you can update its stat" +
            "us from active to inactive to effectively release the claim, but the API does no" +
            "t support other updates to a claim\'s status.\"},\"videoId\":{\"type\":\"string\",\"descr" +
            "iption\":\"The unique YouTube video ID that identifies the video associated with t" +
            "he claim.\",\"annotations\":{\"required\":[\"youtubePartner.claims.insert\"]}}}},\"Claim" +
            "ListResponse\":{\"id\":\"ClaimListResponse\",\"type\":\"object\",\"properties\":{\"items\":{\"" +
            "type\":\"array\",\"description\":\"A list of claims that match the request criteria.\"," +
            "\"items\":{\"$ref\":\"Claim\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of the" +
            " API response. For this operation, the value is youtubePartner#claimList.\",\"defa" +
            "ult\":\"youtubePartner#claimList\"},\"nextPageToken\":{\"type\":\"string\",\"description\":" +
            "\"The token that can be used as the value of the pageToken parameter to retrieve " +
            "the next page in the result set.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"" +
            "The pageInfo object encapsulates paging information for the result set.\"},\"previ" +
            "ousPageToken\":{\"type\":\"string\",\"description\":\"The token that can be used as the " +
            "value of the pageToken parameter to retrieve the previous page in the result set" +
            ".\"}}},\"ClaimedVideoDefaults\":{\"id\":\"ClaimedVideoDefaults\",\"type\":\"object\",\"prope" +
            "rties\":{\"channelOverride\":{\"type\":\"boolean\",\"description\":\"Set this property to " +
            "true to indicate that the channel\'s claimedVideoOptions can override the content" +
            " owner\'s claimedVideoOptions.\"},\"kind\":{\"type\":\"string\",\"description\":\"Identifie" +
            "s this resource as default options for newly claimed video. Value: \\\"youtubePart" +
            "ner#claimedVideoDefaults\\\".\",\"default\":\"youtubePartner#claimedVideoDefaults\"},\"n" +
            "ewVideoDefaults\":{\"type\":\"array\",\"description\":\"A list of ad formats that could " +
            "be used as the default settings for a newly claimed video. The first partner tha" +
            "t claims the video sets its default advertising options to that video.\",\"items\":" +
            "{\"type\":\"string\"}}}},\"Conditions\":{\"id\":\"Conditions\",\"type\":\"object\",\"properties" +
            "\":{\"contentMatchType\":{\"type\":\"string\",\"description\":\"This match condition speci" +
            "fies whether the user- or partner-uploaded content needs to match the audio, vid" +
            "eo or audiovisual content of a reference file for the rule to apply.\"},\"matchDur" +
            "ation\":{\"type\":\"array\",\"description\":\"This match condition specifies an amount o" +
            "f time that the user- or partner- uploaded content needs to match a reference fi" +
            "le for the rule to apply.\",\"items\":{\"$ref\":\"IntervalCondition\"}},\"matchPercent\":" +
            "{\"type\":\"array\",\"description\":\"This match condition specifies a percentage of th" +
            "e user- or partner-uploaded content that needs to match a reference file for the" +
            " rule to apply.\",\"items\":{\"$ref\":\"IntervalCondition\"}},\"referenceDuration\":{\"typ" +
            "e\":\"array\",\"description\":\"This match condition indicates that the reference must" +
            " be a certain duration for the rule to apply.\",\"items\":{\"$ref\":\"IntervalConditio" +
            "n\"}},\"referencePercent\":{\"type\":\"array\",\"description\":\"This match condition indi" +
            "cates that the specified percentage of a reference file must match the user- or " +
            "partner-uploaded content for the rule to apply.\",\"items\":{\"$ref\":\"IntervalCondit" +
            "ion\"}},\"requiredTerritories\":{\"$ref\":\"TerritoryCondition\",\"description\":\"This wa" +
            "tch condition specifies where users are (or or not) allowed to watch (or listen " +
            "to) an asset. YouTube determines whether the condition is satisfied based on the" +
            " user\'s location.\"}}},\"ContentOwner\":{\"id\":\"ContentOwner\",\"type\":\"object\",\"prope" +
            "rties\":{\"conflictNotificationEmail\":{\"type\":\"string\",\"description\":\"The email ad" +
            "dress visible to other partners for use in managing asset ownership conflicts.\"}" +
            ",\"displayName\":{\"type\":\"string\",\"description\":\"The content owner\'s display name." +
            "\"},\"disputeNotificationEmails\":{\"type\":\"array\",\"description\":\"The email address(" +
            "es) to which YouTube sends claim dispute notifications and possible claim notifi" +
            "cations.\",\"items\":{\"type\":\"string\"}},\"fingerprintReportNotificationEmails\":{\"typ" +
            "e\":\"array\",\"description\":\"The email address(es) to which YouTube sends fingerpri" +
            "nt reports.\",\"items\":{\"type\":\"string\"}},\"id\":{\"type\":\"string\",\"description\":\"A u" +
            "nique ID that YouTube uses to identify the content owner.\"},\"kind\":{\"type\":\"stri" +
            "ng\",\"description\":\"The type of the API resource. For content owner resources, th" +
            "e value is youtubePartner#contentOwner.\",\"default\":\"youtubePartner#contentOwner\"" +
            "},\"primaryNotificationEmails\":{\"type\":\"array\",\"description\":\"The email address(e" +
            "s) to which YouTube sends CMS account details and report notifications.\",\"items\"" +
            ":{\"type\":\"string\"}}}},\"ContentOwnerAdvertisingOption\":{\"id\":\"ContentOwnerAdverti" +
            "singOption\",\"type\":\"object\",\"properties\":{\"allowedOptions\":{\"$ref\":\"AllowedAdver" +
            "tisingOptions\",\"description\":\"This object identifies the ad formats that the con" +
            "tent owner is allowed to use.\"},\"claimedVideoOptions\":{\"$ref\":\"ClaimedVideoDefau" +
            "lts\",\"description\":\"This object identifies the advertising options used by defau" +
            "lt for the content owner\'s newly claimed videos.\"},\"id\":{\"type\":\"string\",\"descri" +
            "ption\":\"The value that YouTube uses to uniquely identify the content owner.\"},\"k" +
            "ind\":{\"type\":\"string\",\"description\":\"The type of the API resource. For this reso" +
            "urce, the value is youtubePartner#contentOwnerAdvertisingOption.\",\"default\":\"you" +
            "tubePartner#contentOwnerAdvertisingOption\"}}},\"ContentOwnerListResponse\":{\"id\":\"" +
            "ContentOwnerListResponse\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\"," +
            "\"description\":\"A list of content owners that match the request criteria.\",\"items" +
            "\":{\"$ref\":\"ContentOwner\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of th" +
            "e API response. For this operation, the value is youtubePartner#contentOwnerList" +
            ".\",\"default\":\"youtubePartner#contentOwnerList\"}}},\"CountriesRestriction\":{\"id\":\"" +
            "CountriesRestriction\",\"type\":\"object\",\"properties\":{\"adFormats\":{\"type\":\"array\"," +
            "\"description\":\"A list of ad formats that can be used in the specified countries." +
            "\",\"items\":{\"type\":\"string\"}},\"territories\":{\"type\":\"array\",\"description\":\"A list" +
            " of ISO 3166-1 alpha-2 country codes that identify the countries where ads are e" +
            "nabled.\",\"items\":{\"type\":\"string\"}}}},\"Date\":{\"id\":\"Date\",\"type\":\"object\",\"prope" +
            "rties\":{\"day\":{\"type\":\"integer\",\"description\":\"The date\'s day. The value should " +
            "be an integer between 1 and 31. Note that some day-month combinations are not va" +
            "lid.\",\"format\":\"uint32\"},\"month\":{\"type\":\"integer\",\"description\":\"The date\'s mon" +
            "th. The value should be an integer between 1 and 12.\",\"format\":\"uint32\"},\"year\":" +
            "{\"type\":\"integer\",\"description\":\"The date\'s year in the Gregorian Calendar. Assu" +
            "med to be A.D.\",\"format\":\"uint32\"}}},\"DateRange\":{\"id\":\"DateRange\",\"type\":\"objec" +
            "t\",\"properties\":{\"end\":{\"$ref\":\"Date\",\"description\":\"The end date (inclusive) fo" +
            "r the date range. This value is required for video-on-demand (VOD) orders and op" +
            "tional for electronic sell-through (EST) orders.\"},\"kind\":{\"type\":\"string\",\"desc" +
            "ription\":\"Identifies this resource as order date range. Value: \\\"youtubePartner#" +
            "dateRange\\\".\",\"default\":\"youtubePartner#dateRange\"},\"start\":{\"$ref\":\"Date\",\"desc" +
            "ription\":\"The start date for the date range. This value is required for all date" +
            " ranges.\"}}},\"IntervalCondition\":{\"id\":\"IntervalCondition\",\"type\":\"object\",\"prop" +
            "erties\":{\"high\":{\"type\":\"number\",\"description\":\"The maximum (inclusive) allowed " +
            "value for the condition to be satisfied. The default value is âˆž.\",\"format\":\"do" +
            "uble\"},\"low\":{\"type\":\"number\",\"description\":\"The minimum (inclusive) allowed val" +
            "ue for the condition to be satisfied. The default value is -âˆž.\",\"format\":\"doub" +
            "le\"}}},\"Metadata\":{\"id\":\"Metadata\",\"type\":\"object\",\"properties\":{\"actor\":{\"type\"" +
            ":\"array\",\"description\":\"A list that identifies actors associated with the asset." +
            " You can specify up to 50 actors for an asset.\",\"items\":{\"type\":\"string\"}},\"albu" +
            "m\":{\"type\":\"string\",\"description\":\"The album on which a sound recording asset is" +
            " included. This field is only valid for sound recording assets and has a maximum" +
            " length of 255 bytes.\"},\"artist\":{\"type\":\"array\",\"description\":\"The artist assoc" +
            "iated with a music video or sound recording asset. This field is only valid for " +
            "music video and sound recording assets. It is required for sound recordings incl" +
            "uded in the AudioSwap program.\",\"items\":{\"type\":\"string\"}},\"broadcaster\":{\"type\"" +
            ":\"array\",\"description\":\"Identifies the network or channel that originally broadc" +
            "ast a show or a season of a show. This field should only be included for an asse" +
            "t if the broadcaster associated with the asset is different from the partner upl" +
            "oading the asset to YouTube. Note that a show may have multiple broadcasters; fo" +
            "r example, a show may switch networks between seasons.\",\"items\":{\"type\":\"string\"" +
            "}},\"category\":{\"type\":\"string\",\"description\":\"Category of this asset.\"},\"content" +
            "Type\":{\"type\":\"string\",\"description\":\"The type of video content that the asset r" +
            "epresents. This field is only valid for movie and episode assets, and is require" +
            "d for the following types of those assets:  \\n- Episode assets that are linked t" +
            "o a show \\n- Movie assets that appear in YouTube\'s Movies category\"},\"copyrightD" +
            "ate\":{\"$ref\":\"Date\",\"description\":\"The date copyright for this asset was establi" +
            "shed. *\"},\"customId\":{\"type\":\"string\",\"description\":\"A unique value that you, th" +
            "e metadata provider, use to identify an asset. The value could be a unique ID th" +
            "at you created for the asset or a standard identifier, such as an ISRC. The valu" +
            "e has a maximum length of 64 bytes and may contain alphanumeric characters, hyph" +
            "ens (-), underscores (_), periods (.), \\\"at\\\" symbols (@), or forward slashes (/" +
            ").\"},\"description\":{\"type\":\"string\",\"description\":\"A description of the asset. T" +
            "he description may be displayed on YouTube or in CMS. This field has a maximum l" +
            "ength of 5,000 bytes.\"},\"director\":{\"type\":\"array\",\"description\":\"A list that id" +
            "entifies directors associated with the asset. You can specify up to 50 directors" +
            " for an asset.\",\"items\":{\"type\":\"string\"}},\"eidr\":{\"type\":\"string\",\"description\"" +
            ":\"The Entertainment Identifier Registry (EIDR) assigned to an asset. This value " +
            "is only used for episode and movie assets and is optional in both cases. The val" +
            "ue contains a standard prefix for EIDR registry, followed by a forward slash, a " +
            "20-character hexadecimal string, and an alphanumeric (0-9A-Z) check character.\"}" +
            ",\"endYear\":{\"type\":\"integer\",\"description\":\"The last year that a television show" +
            " aired. This value is only used for show assets, for which it is optional. Do no" +
            "t specify a value if new show episodes are still being created.\",\"format\":\"uint3" +
            "2\"},\"episodeNumber\":{\"type\":\"string\",\"description\":\"The episode number associate" +
            "d with an episode asset. This field is required for and only used for episode as" +
            "sets that are linked to show assets. It has a maximum length of 5 bytes.\"},\"epis" +
            "odesAreUntitled\":{\"type\":\"boolean\",\"description\":\"This value indicates that the " +
            "episodes associated with a particular show asset or a particular season asset ar" +
            "e untitled. An untitled show (or season) has episodes which are identified by th" +
            "eir episode number or date. If this field is set to true, then YouTube will opti" +
            "mize the title displayed for associated episodes.\"},\"genre\":{\"type\":\"array\",\"des" +
            "cription\":\"This field specifies a genre that can be used to categorize an asset." +
            " Assets may be categorized in more than one genre, and YouTube uses different se" +
            "ts of genres to categorize different types of assets. For example, Soaps might b" +
            "e a valid genre for a show but not for a movie or sound recording.  \\n- Show ass" +
            "ets \\n- Movie assets that appear in YouTube\'s Movies category \\n- Sound recordin" +
            "gs included in the AudioSwap program\",\"items\":{\"type\":\"string\"}},\"grid\":{\"type\":" +
            "\"string\",\"description\":\"The GRID (Global Release Identifier) of a music video or" +
            " sound recording. This field\'s value must contain exactly 18 alphanumeric charac" +
            "ters.\"},\"hfa\":{\"type\":\"string\",\"description\":\"The six-character Harry Fox Agency" +
            " (HFA) song code issued to uniquely identify a composition. This value is only v" +
            "alid for composition assets.\"},\"infoUrl\":{\"type\":\"string\",\"description\":\"An offi" +
            "cial URL associated with the asset. This field has a maximum length of 1536 byte" +
            "s. Please do not submit a 1537-byte URL. Your efforts would be futile.\"},\"isan\":" +
            "{\"type\":\"string\",\"description\":\"The ISAN (International Standard Audiovisual Num" +
            "ber) for the asset. This value is only used for episode and movie assets and is " +
            "optional in both cases. The value contains 26 characters, which includes the 24 " +
            "hexadecimal characters of the ISAN as well as two check characters, in the follo" +
            "wing format:  \\n- The first 16 characters in the tag value contain hexadecimal c" +
            "haracters specifying the \'root\' and \'episode\' components of the ISAN. \\n- The se" +
            "venteenth character is a check character (a letter from A-Z). \\n- Characters 18 " +
            "to 25 are the remaining eight characters of the ISAN, which specify the \'version" +
            "\' component of the ISAN. \\n- The twenty-sixth character is another check charact" +
            "er (A-Z).\"},\"isrc\":{\"type\":\"string\",\"description\":\"The ISRC (International Stand" +
            "ard Recording Code) of a music video or sound recording asset. This field\'s valu" +
            "e must contain exactly 12 alphanumeric characters.\"},\"iswc\":{\"type\":\"string\",\"de" +
            "scription\":\"The ISWC (International Standard Musical Work Code) for a compositio" +
            "n asset. The field\'s value must contain exactly 11 characters in the format of a" +
            " letter (T) followed by 10 digits.\"},\"keyword\":{\"type\":\"array\",\"description\":\"A " +
            "list of up to 100 keywords associated with a show asset. This field is required " +
            "for and also only used for show assets.\",\"items\":{\"type\":\"string\"}},\"label\":{\"ty" +
            "pe\":\"string\",\"description\":\"The record label that released a sound recording ass" +
            "et. This field is only valid for sound recording assets and has a maximum length" +
            " of 255 bytes.\"},\"notes\":{\"type\":\"string\",\"description\":\"Additional information " +
            "that does not map directly to one of the other metadata fields. This field has a" +
            " maximum length of 255 bytes.\"},\"originalReleaseMedium\":{\"type\":\"string\",\"descri" +
            "ption\":\"The method by which people first had the opportunity to see a video asse" +
            "t. This value is only used for episode and movie assets. It is required for the " +
            "assets listed below and otherwise optional:  \\n- Episode assets that are linked " +
            "to a show \\n- Movie assets that appear in YouTube\'s Movies category\"},\"producer\"" +
            ":{\"type\":\"array\",\"description\":\"A list that identifies producers of the asset. Y" +
            "ou can specify up to 50 producers for an asset.\",\"items\":{\"type\":\"string\"}},\"rat" +
            "ings\":{\"type\":\"array\",\"description\":\"A list of ratings that an asset received. T" +
            "he rating must be valid under the specified rating system.\",\"items\":{\"$ref\":\"Rat" +
            "ing\"}},\"releaseDate\":{\"$ref\":\"Date\",\"description\":\"The date that an asset was pu" +
            "blicly released. For season assets, this value specifies the first date that the" +
            " season aired. Dates prior to the year 1902 are not supported. This value is val" +
            "id for episode, season, movie, music video, and sound recording assets. It is re" +
            "quired for the assets listed below and otherwise optional:  \\n- Episode assets t" +
            "hat are linked to a show \\n- Movie assets that appear in YouTube\'s Movies catego" +
            "ry\"},\"seasonNumber\":{\"type\":\"string\",\"description\":\"The season number that ident" +
            "ifies a season asset, or the season number that is associated with an episode as" +
            "set. This field has a maximum length of 5 bytes.\"},\"showCustomId\":{\"type\":\"strin" +
            "g\",\"description\":\"The customId of the show asset that a season or episode asset " +
            "is associated with. It is required for season and episode assets that appear in " +
            "the Shows category on YouTube, and it is not valid for other types of assets. Th" +
            "is field has a maximum length of 64 bytes and may contain alphanumeric character" +
            "s, hyphens (-), underscores (_), periods (.), \\\"at\\\" symbols (@), or forward sla" +
            "shes (/).\"},\"showTitle\":{\"type\":\"string\",\"description\":\"The name of the show tha" +
            "t an episode asset is associated with. Note: This tag is only used for and valid" +
            " for episodes that are not associated with show assets and enables those assets " +
            "to still display a show title in the asset metadata section of CMS. This field h" +
            "as a maximum length of 120 bytes.\"},\"spokenLanguage\":{\"type\":\"string\",\"descripti" +
            "on\":\"The video\'s primary spoken language. The value can be any ISO 639-1 two-let" +
            "ter language code. This value is only used for episode and movie assets and is n" +
            "ot valid for other types of assets.\"},\"startYear\":{\"type\":\"integer\",\"description" +
            "\":\"The first year that a television show aired. This value is required for and a" +
            "lso only used for show assets.\",\"format\":\"uint32\"},\"subtitledLanguage\":{\"type\":\"" +
            "array\",\"description\":\"A list of languages for which the video has either a separ" +
            "ate caption track or burnt-in captions that are part of the video. Each value in" +
            " the list should be an ISO 639-1 two-letter language code. This value is only us" +
            "ed for episode and movie assets and is not valid for other types of assets.\",\"it" +
            "ems\":{\"type\":\"string\"}},\"title\":{\"type\":\"string\",\"description\":\"The asset\'s titl" +
            "e or name. The value has a maximum length of 255 bytes. This value is required f" +
            "or the assets listed below and optional for all other assets:  \\n- Show assets \\" +
            "n- Episode assets that are linked to a show \\n- Movie assets that appear in YouT" +
            "ube\'s Movies category \\n- Sound recordings included in the AudioSwap program\"},\"" +
            "tmsId\":{\"type\":\"string\",\"description\":\"TMS (Tribune Media Systems) ID for the as" +
            "set.\"},\"totalEpisodesExpected\":{\"type\":\"integer\",\"description\":\"Specifies the to" +
            "tal number of full-length episodes in the season. This value is used only for se" +
            "ason assets.\",\"format\":\"uint32\"},\"upc\":{\"type\":\"string\",\"description\":\"The UPC (" +
            "Universal Product Code) associated with the asset.\"},\"writer\":{\"type\":\"array\",\"d" +
            "escription\":\"A list that identifies writers associated with the asset. You can s" +
            "pecify up to 50 writers for an asset.\",\"items\":{\"type\":\"string\"}}}},\"MetadataHis" +
            "tory\":{\"id\":\"MetadataHistory\",\"type\":\"object\",\"properties\":{\"kind\":{\"type\":\"stri" +
            "ng\",\"description\":\"The type of the API resource. For metadata history resources," +
            " the value is youtubePartner#metadataHistory.\",\"default\":\"youtubePartner#metadat" +
            "aHistory\"},\"metadata\":{\"$ref\":\"Metadata\",\"description\":\"The metadata object cont" +
            "ains the metadata provided by the specified source (origination) at the specifie" +
            "d time (timeProvidedMs).\"},\"origination\":{\"$ref\":\"Origination\",\"description\":\"Th" +
            "e origination object contains information that describes the metadata source.\"}," +
            "\"timeProvidedMs\":{\"type\":\"string\",\"description\":\"The time the metadata was provi" +
            "ded.\",\"format\":\"date-time\"}}},\"MetadataHistoryListResponse\":{\"id\":\"MetadataHisto" +
            "ryListResponse\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"descripti" +
            "on\":\"A list of metadata history (youtubePartner#metadataHistory) resources that " +
            "match the request criteria.\",\"items\":{\"$ref\":\"MetadataHistory\"}},\"kind\":{\"type\":" +
            "\"string\",\"description\":\"The type of the API response. For this operation, the va" +
            "lue is youtubePartner#metadataHistoryList.\",\"default\":\"youtubePartner#metadataHi" +
            "storyList\"}}},\"Order\":{\"id\":\"Order\",\"type\":\"object\",\"properties\":{\"availGroupId\"" +
            ":{\"type\":\"string\",\"description\":\"Links an order to the avails associated with it" +
            ".\"},\"channelId\":{\"type\":\"string\",\"description\":\"Channel ID - identifies the chan" +
            "nel this order and video are associated with\"},\"contentType\":{\"type\":\"string\",\"d" +
            "escription\":\"Type of content possible values are \\n- MOVIE\\n- SHOW\"},\"country\":{" +
            "\"type\":\"string\",\"description\":\"Two letter country code for the order only countr" +
            "ies where YouTube does transactional business are allowed.\"},\"customId\":{\"type\":" +
            "\"string\",\"description\":\"Secondary id to be used to identify content in other sys" +
            "tems like partner database\"},\"dvdReleaseDate\":{\"$ref\":\"Date\",\"description\":\"Date" +
            " when this content was first made available on DVD\"},\"estDates\":{\"$ref\":\"DateRan" +
            "ge\",\"description\":\"Range of time content is to be available for rental.\"},\"event" +
            "s\":{\"type\":\"array\",\"description\":\"History log of events for this order\",\"items\":" +
            "{\"$ref\":\"StateCompleted\"}},\"id\":{\"type\":\"string\",\"description\":\"Order Id unique " +
            "identifier for an order.\"},\"kind\":{\"type\":\"string\",\"description\":\"Identifies thi" +
            "s resource as order. Value: \\\"youtubePartner#order\\\".\",\"default\":\"youtubePartner" +
            "#order\"},\"movie\":{\"type\":\"string\",\"description\":\"Title if the order is type movi" +
            "e.\"},\"originalReleaseDate\":{\"$ref\":\"Date\",\"description\":\"Date when this content " +
            "was first made available to the public\"},\"priority\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The priority for the order in the QC review queue once the content is ready " +
            "for QC.\"},\"productionHouse\":{\"type\":\"string\",\"description\":\"Post production hous" +
            "e that is to process this order\"},\"purchaseOrder\":{\"type\":\"string\",\"description\"" +
            ":\"Youtube purchase order reference for the post production house.\"},\"requirement" +
            "s\":{\"$ref\":\"Requirements\",\"description\":\"Minumim set of requirements for this or" +
            "der to be complete such as is a trailer required.\"},\"show\":{\"$ref\":\"ShowDetails\"" +
            ",\"description\":\"Details of a show, show name, season number, episode etc.\"},\"sta" +
            "tus\":{\"type\":\"string\",\"description\":\"The order\'s status.\"},\"videoId\":{\"type\":\"st" +
            "ring\",\"description\":\"Video ID the video that this order is associated with if an" +
            "y.\"},\"vodDates\":{\"$ref\":\"DateRange\",\"description\":\"Range of time content is to b" +
            "e available for purchase.\"}}},\"OrderListResponse\":{\"id\":\"OrderListResponse\",\"typ" +
            "e\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"A list of order" +
            "s that match the request criteria.\",\"items\":{\"$ref\":\"Order\"}},\"kind\":{\"type\":\"st" +
            "ring\",\"description\":\"The type of the API response. For this operation, the value" +
            " is youtubePartner#orderList.\",\"default\":\"youtubePartner#orderList\"},\"nextPageTo" +
            "ken\":{\"type\":\"string\",\"description\":\"The token that can be used as the value of " +
            "the pageToken parameter to retrieve the next page in the result set.\"},\"pageInfo" +
            "\":{\"$ref\":\"PageInfo\",\"description\":\"The pageInfo object encapsulates paging info" +
            "rmation for the result set.\"},\"previousPageToken\":{\"type\":\"string\",\"description\"" +
            ":\"The token that can be used as the value of the pageToken parameter to retrieve" +
            " the previous page in the result set.\"}}},\"Origination\":{\"id\":\"Origination\",\"typ" +
            "e\":\"object\",\"properties\":{\"owner\":{\"type\":\"string\",\"description\":\"The content ow" +
            "ner who provided the metadata or ownership information.\"},\"source\":{\"type\":\"stri" +
            "ng\",\"description\":\"The mechanism by which the piece of metadata, ownership or re" +
            "lationship information was provided.\"}}},\"OwnershipHistoryListResponse\":{\"id\":\"O" +
            "wnershipHistoryListResponse\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"arra" +
            "y\",\"description\":\"A list of ownership history (youtubePartner#ownershipHistory) " +
            "resources that match the request criteria.\",\"items\":{\"$ref\":\"RightsOwnershipHist" +
            "ory\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of the API response. For " +
            "this operation, the value is youtubePartner#ownershipHistoryList.\",\"default\":\"yo" +
            "utubePartner#ownershipHistoryList\"}}},\"PageInfo\":{\"id\":\"PageInfo\",\"type\":\"object" +
            "\",\"properties\":{\"resultsPerPage\":{\"type\":\"integer\",\"description\":\"The number of " +
            "results included in the API response.\",\"format\":\"int32\"},\"startIndex\":{\"type\":\"i" +
            "nteger\",\"description\":\"The index of the first item in the API response.\",\"format" +
            "\":\"int32\"},\"totalResults\":{\"type\":\"integer\",\"description\":\"The total number of r" +
            "esults in the result set.\",\"format\":\"int32\"}}},\"Policy\":{\"id\":\"Policy\",\"type\":\"o" +
            "bject\",\"properties\":{\"description\":{\"type\":\"string\",\"description\":\"The policy\'s " +
            "description.\"},\"id\":{\"type\":\"string\",\"description\":\"A value that YouTube assigns" +
            " and uses to uniquely identify the policy.\"},\"kind\":{\"type\":\"string\",\"descriptio" +
            "n\":\"Identifies this as a policy. Value: \\\"youtubePartner#policy\\\" The type of th" +
            "e API resource. The asset match policy is a type of policy, so for this resource" +
            ", the value is youtubePartner#policy.\",\"default\":\"youtubePartner#policy\"},\"name\"" +
            ":{\"type\":\"string\",\"description\":\"The policy\'s name.\"},\"rule\":{\"type\":\"array\",\"de" +
            "scription\":\"A list of rules that specify the circumstances under which the polic" +
            "y is enforced.\",\"items\":{\"$ref\":\"PolicyRule\"}},\"rules\":{\"type\":\"array\",\"descript" +
            "ion\":\"A list of rules that collectively define the policy that the content owner" +
            " wants to apply to user-uploaded videos that match the asset. Each rule specifie" +
            "s the action that YouTube should take and may optionally specify conditions unde" +
            "r which that action is enforced.\",\"items\":{\"$ref\":\"PolicyRule\"}}}},\"PolicyList\":" +
            "{\"id\":\"PolicyList\",\"type\":\"object\",\"properties\":{\"items\":{\"type\":\"array\",\"descri" +
            "ption\":\"A list of saved policies.\",\"items\":{\"$ref\":\"Policy\"}},\"kind\":{\"type\":\"st" +
            "ring\",\"description\":\"The type of the API response. For this operation, the value" +
            " is youtubePartner#policyList.\",\"default\":\"youtubePartner#policyList\"}}},\"Policy" +
            "Rule\":{\"id\":\"PolicyRule\",\"type\":\"object\",\"properties\":{\"action\":{\"type\":\"string\"" +
            ",\"description\":\"The policy that YouTube should enforce if the rule\'s conditions " +
            "are all valid for an asset or for an attempt to view that asset on YouTube.\"},\"c" +
            "onditions\":{\"$ref\":\"Conditions\",\"description\":\"A set of conditions that must be " +
            "met for the rule\'s action (and subactions) to be enforced. For a rule to be vali" +
            "d, all of its conditions must be met.\"},\"subaction\":{\"type\":\"string\",\"descriptio" +
            "n\":\"A list of additional actions that YouTube should take if the conditions in t" +
            "he rule are met.\"}}},\"Publisher\":{\"id\":\"Publisher\",\"type\":\"object\",\"properties\":" +
            "{\"caeNumber\":{\"type\":\"string\",\"description\":\"The publisher\'s unique CAE (Composi" +
            "teur, Auteur and Editeur) number.\"},\"id\":{\"type\":\"string\",\"description\":\"A value" +
            " that YouTube assigns and uses to uniquely identify the publisher.\"},\"ipiNumber\"" +
            ":{\"type\":\"string\",\"description\":\"The publisher\'s unique IPI (Interested Parties " +
            "Information) code.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of the API " +
            "resource. For this resource, the value is youtubePartner#publisher.\",\"default\":\"" +
            "youtubePartner#publisher\"},\"name\":{\"type\":\"string\",\"description\":\"The publisher\'" +
            "s name.\"}}},\"PublisherList\":{\"id\":\"PublisherList\",\"type\":\"object\",\"properties\":{" +
            "\"items\":{\"type\":\"array\",\"description\":\"A list of publishers that match the reque" +
            "st criteria.\",\"items\":{\"$ref\":\"Publisher\"}},\"kind\":{\"type\":\"string\",\"description" +
            "\":\"The type of the API response. For this operation, the value is youtubePartner" +
            "#publisherList.\",\"default\":\"youtubePartner#publisherList\"},\"nextPageToken\":{\"typ" +
            "e\":\"string\",\"description\":\"The token that can be used as the value of the pageTo" +
            "ken parameter to retrieve the next page in the result set.\"},\"pageInfo\":{\"$ref\":" +
            "\"PageInfo\",\"description\":\"The pageInfo object encapsulates paging information fo" +
            "r the result set.\"}}},\"Rating\":{\"id\":\"Rating\",\"type\":\"object\",\"properties\":{\"rat" +
            "ing\":{\"type\":\"string\",\"description\":\"The rating that the asset received.\"},\"rati" +
            "ngSystem\":{\"type\":\"string\",\"description\":\"The rating system associated with the " +
            "rating.\"}}},\"Reference\":{\"id\":\"Reference\",\"type\":\"object\",\"properties\":{\"assetId" +
            "\":{\"type\":\"string\",\"description\":\"The ID that uniquely identifies the asset that" +
            " the reference is associated with.\"},\"audioswapEnabled\":{\"type\":\"boolean\",\"descr" +
            "iption\":\"Set this field\'s value to true to indicate that the reference content s" +
            "hould be included in YouTube\'s AudioSwap program.\"},\"contentType\":{\"type\":\"strin" +
            "g\",\"description\":\"The type of content that the reference represents.\"},\"duplicat" +
            "eLeader\":{\"type\":\"string\",\"description\":\"The ID that uniquely identifies the ref" +
            "erence that this reference duplicates. This field is only present if the referen" +
            "ce\'s status is duplicate_on_hold.\"},\"fpDirect\":{\"type\":\"boolean\",\"description\":\"" +
            "When uploading a reference, set this value to true to indicate that the referenc" +
            "e is a pre-generated fingerprint.\"},\"hashCode\":{\"type\":\"string\",\"description\":\"T" +
            "he MD5 hashcode of the reference content.\"},\"id\":{\"type\":\"string\",\"description\":" +
            "\"A value that YouTube assigns and uses to uniquely identify a reference.\",\"annot" +
            "ations\":{\"required\":[\"youtubePartner.references.patch\",\"youtubePartner.reference" +
            "s.update\"]}},\"ignoreFpMatch\":{\"type\":\"boolean\",\"description\":\"Set this value to " +
            "true to indicate that the reference should not be used to generate claims. This " +
            "field is only used on AudioSwap references.\"},\"kind\":{\"type\":\"string\",\"descripti" +
            "on\":\"The type of the API resource. For reference resources, the value is youtube" +
            "Partner#reference.\",\"default\":\"youtubePartner#reference\"},\"length\":{\"type\":\"numb" +
            "er\",\"description\":\"The length of the reference in seconds.\",\"format\":\"double\"},\"" +
            "status\":{\"type\":\"string\",\"description\":\"The reference\'s status.\",\"annotations\":{" +
            "\"required\":[\"youtubePartner.references.patch\",\"youtubePartner.references.update\"" +
            "]}},\"statusReason\":{\"type\":\"string\",\"description\":\"An explanation of how a refer" +
            "ence entered its current state. This value is only present if the reference\'s st" +
            "atus is either inactive or deleted.\"},\"urgent\":{\"type\":\"boolean\",\"description\":\"" +
            "Set this value to true to indicate that YouTube should prioritize Content ID pro" +
            "cessing for a video file. YouTube processes urgent video files before other file" +
            "s that are not marked as urgent. This setting is primarily used for videos of li" +
            "ve events or other videos that require time-sensitive processing. The sooner You" +
            "Tube completes Content ID processing for a video, the sooner YouTube can match u" +
            "ser-uploaded videos to that video.\\n\\nNote that marking all of your files as urg" +
            "ent could delay processing for those files.\"},\"videoId\":{\"type\":\"string\",\"descri" +
            "ption\":\"This field is present if the reference was created by associating an ass" +
            "et with an existing YouTube video that was uploaded to a YouTube channel linked " +
            "to your CMS account. In that case, this field contains the ID of the source vide" +
            "o.\"}}},\"ReferenceListResponse\":{\"id\":\"ReferenceListResponse\",\"type\":\"object\",\"pr" +
            "operties\":{\"items\":{\"type\":\"array\",\"description\":\"A list of references that matc" +
            "h the request criteria.\",\"items\":{\"$ref\":\"Reference\"}},\"kind\":{\"type\":\"string\",\"" +
            "description\":\"The type of the API response. For this operation, the value is you" +
            "tubePartner#referenceList.\",\"default\":\"youtubePartner#referenceList\"},\"nextPageT" +
            "oken\":{\"type\":\"string\",\"description\":\"The token that can be used as the value of" +
            " the pageToken parameter to retrieve the next page in the result set.\"},\"pageInf" +
            "o\":{\"$ref\":\"PageInfo\",\"description\":\"The pageInfo object encapsulates paging inf" +
            "ormation for the result set.\"}}},\"Requirements\":{\"id\":\"Requirements\",\"type\":\"obj" +
            "ect\",\"properties\":{\"caption\":{\"type\":\"boolean\",\"description\":\"This value indicat" +
            "es whether the order requires closed captions.\"},\"hdTranscode\":{\"type\":\"boolean\"" +
            ",\"description\":\"This value indicates whether the order requires HD-quality video" +
            ".\"},\"posterArt\":{\"type\":\"boolean\",\"description\":\"This value indicates whether th" +
            "e order requires poster artwork.\"},\"spotlightArt\":{\"type\":\"boolean\",\"description" +
            "\":\"This value indicates whether the order requires spotlight artwork.\"},\"spotlig" +
            "htReview\":{\"type\":\"boolean\",\"description\":\"This value indicates whether the spot" +
            "light artwork for the order needs to be reviewed.\"},\"trailer\":{\"type\":\"boolean\"," +
            "\"description\":\"This value indicates whether the order requires a trailer.\"}}},\"R" +
            "ightsOwnership\":{\"id\":\"RightsOwnership\",\"type\":\"object\",\"properties\":{\"general\":" +
            "{\"type\":\"array\",\"description\":\"A list that identifies the owners of an asset and" +
            " the territories where each owner has ownership. General asset ownership is used" +
            " for all types of assets and is the only type of ownership data that can be prov" +
            "ided for assets that are not compositions.\\n\\nNote: You cannot specify general o" +
            "wnership rights and also specify either mechanical, performance, or synchronizat" +
            "ion rights.\",\"items\":{\"$ref\":\"TerritoryOwners\"}},\"kind\":{\"type\":\"string\",\"descri" +
            "ption\":\"The type of the API resource. For rightsOwnership resources, the value i" +
            "s youtubePartner#rightsOwnership.\",\"default\":\"youtubePartner#rightsOwnership\"},\"" +
            "mechanical\":{\"type\":\"array\",\"description\":\"A list that identifies owners of the " +
            "mechanical rights for a composition asset.\",\"items\":{\"$ref\":\"TerritoryOwners\"}}," +
            "\"performance\":{\"type\":\"array\",\"description\":\"A list that identifies owners of th" +
            "e performance rights for a composition asset.\",\"items\":{\"$ref\":\"TerritoryOwners\"" +
            "}},\"synchronization\":{\"type\":\"array\",\"description\":\"A list that identifies owner" +
            "s of the synchronization rights for a composition asset.\",\"items\":{\"$ref\":\"Terri" +
            "toryOwners\"}}}},\"RightsOwnershipHistory\":{\"id\":\"RightsOwnershipHistory\",\"type\":\"" +
            "object\",\"properties\":{\"kind\":{\"type\":\"string\",\"description\":\"The type of the API" +
            " resource. For ownership history resources, the value is youtubePartner#rightsOw" +
            "nershipHistory.\",\"default\":\"youtubePartner#rightsOwnershipHistory\"},\"origination" +
            "\":{\"$ref\":\"Origination\",\"description\":\"The origination object contains informati" +
            "on that describes the metadata source.\"},\"ownership\":{\"$ref\":\"RightsOwnership\",\"" +
            "description\":\"The ownership object contains the ownership data provided by the s" +
            "pecified source (origination) at the specified time (timeProvidedMs).\"},\"timePro" +
            "videdMs\":{\"type\":\"string\",\"description\":\"The time that the ownership data was pr" +
            "ovided.\",\"format\":\"date-time\"}}},\"ShowDetails\":{\"id\":\"ShowDetails\",\"type\":\"objec" +
            "t\",\"properties\":{\"episodeNumber\":{\"type\":\"string\",\"description\":\"The episode num" +
            "ber associated with the episode.\"},\"episodeTitle\":{\"type\":\"string\",\"description\"" +
            ":\"The episode\'s title.\"},\"seasonNumber\":{\"type\":\"string\",\"description\":\"The seas" +
            "on number associated with the episode.\"},\"title\":{\"type\":\"string\",\"description\":" +
            "\"The show\'s title\"}}},\"StateCompleted\":{\"id\":\"StateCompleted\",\"type\":\"object\",\"p" +
            "roperties\":{\"state\":{\"type\":\"string\",\"description\":\"The state that the order ent" +
            "ered.\"},\"timeCompleted\":{\"type\":\"string\",\"description\":\"The time that the state " +
            "transition occurred.\",\"format\":\"int64\"}}},\"TerritoryCondition\":{\"id\":\"TerritoryC" +
            "ondition\",\"type\":\"object\",\"properties\":{\"territories\":{\"type\":\"array\",\"descripti" +
            "on\":\"A list of territories. Each territory is an ISO 3166 two-letter country cod" +
            "e..\",\"items\":{\"type\":\"string\"}},\"type\":{\"type\":\"string\",\"description\":\"This fiel" +
            "d indicates whether the associated policy rule is or is not valid in the specifi" +
            "ed territories.\"}}},\"TerritoryOwners\":{\"id\":\"TerritoryOwners\",\"type\":\"object\",\"p" +
            "roperties\":{\"owner\":{\"type\":\"string\",\"description\":\"The name of the asset\'s owne" +
            "r or rights administrator.\"},\"publisher\":{\"type\":\"string\",\"description\":\"The nam" +
            "e of the asset\'s publisher. This field is only used for composition assets, and " +
            "it is used when the asset owner is not known to have a formal relationship estab" +
            "lished with YouTube.\"},\"ratio\":{\"type\":\"integer\",\"description\":\"The percentage o" +
            "f the asset that the owner controls or administers. For composition assets, the " +
            "value can be any decimal value between 0 and 100 inclusive. For all other assets" +
            ", the only valid values are 100, which indicates that the owner completely owns " +
            "the asset in the specified territories, and 0, which indicates that you are remo" +
            "ving ownership of the asset in the specified territories.\",\"format\":\"int32\"},\"te" +
            "rritories\":{\"type\":\"array\",\"description\":\"A list of territories where the owner " +
            "owns (or does not own) the asset. Each territory is an ISO 3166 two-letter count" +
            "ry code..\",\"items\":{\"type\":\"string\"}},\"type\":{\"type\":\"string\",\"description\":\"Thi" +
            "s field indicates whether the ownership data applies or does not apply in the sp" +
            "ecified territories.\"}}},\"VideoAdvertisingOption\":{\"id\":\"VideoAdvertisingOption\"" +
            ",\"type\":\"object\",\"properties\":{\"adBreaks\":{\"type\":\"array\",\"description\":\"A list " +
            "of times when YouTube can show an in-stream advertisement during playback of the" +
            " video.\",\"items\":{\"$ref\":\"AdBreak\"}},\"adFormats\":{\"type\":\"array\",\"description\":\"" +
            "A list of ad formats that the video is allowed to show.\",\"items\":{\"type\":\"string" +
            "\"}},\"breakPosition\":{\"type\":\"array\",\"description\":\"The point at which the break " +
            "occurs during the video playback.\",\"items\":{\"type\":\"string\"}},\"id\":{\"type\":\"stri" +
            "ng\",\"description\":\"The ID that YouTube uses to uniquely identify the video assoc" +
            "iated with the advertising settings.\"},\"kind\":{\"type\":\"string\",\"description\":\"Th" +
            "e type of the API resource. For this resource, the value is youtubePartner#video" +
            "AdvertisingOption.\",\"default\":\"youtubePartner#videoAdvertisingOption\"},\"tpAdServ" +
            "erVideoId\":{\"type\":\"string\",\"description\":\"A value that uniquely identifies the " +
            "video to the third-party ad server.\"},\"tpTargetingUrl\":{\"type\":\"string\",\"descrip" +
            "tion\":\"The base URL for a third-party ad server from which YouTube can retrieve " +
            "in-stream ads for the video.\"},\"tpUrlParameters\":{\"type\":\"string\",\"description\":" +
            "\"A parameter string to append to the end of the request to the third-party ad se" +
            "rver.\"}}},\"VideoAdvertisingOptionGetEnabledAdsResponse\":{\"id\":\"VideoAdvertisingO" +
            "ptionGetEnabledAdsResponse\",\"type\":\"object\",\"properties\":{\"adBreaks\":{\"type\":\"ar" +
            "ray\",\"description\":\"A list of ad breaks that occur in a claimed YouTube video.\"," +
            "\"items\":{\"$ref\":\"AdBreak\"}},\"adsOnEmbeds\":{\"type\":\"boolean\",\"description\":\"This " +
            "field indicates whether YouTube can show ads when the video is played in an embe" +
            "dded player.\"},\"countriesRestriction\":{\"type\":\"array\",\"description\":\"A list that" +
            " identifies the countries where ads can run and the types of ads allowed in thos" +
            "e countries.\",\"items\":{\"$ref\":\"CountriesRestriction\"}},\"id\":{\"type\":\"string\",\"de" +
            "scription\":\"The ID that YouTube uses to uniquely identify the claimed video.\"},\"" +
            "kind\":{\"type\":\"string\",\"description\":\"The type of the API resource. For this res" +
            "ource, the value is youtubePartner#videoAdvertisingOptionGetEnabledAds.\",\"defaul" +
            "t\":\"youtubePartner#videoAdvertisingOptionGetEnabledAds\"}}}},\"resources\":{\"assetM" +
            "atchPolicy\":{\"methods\":{\"get\":{\"id\":\"youtubePartner.assetMatchPolicy.get\",\"path\"" +
            ":\"assets/{assetId}/matchPolicy\",\"httpMethod\":\"GET\",\"description\":\"Retrieves the " +
            "match policy assigned to the specified asset by the content owner associated wit" +
            "h the authenticated user. This information is only accessible to an owner of the" +
            " asset.\",\"parameters\":{\"assetId\":{\"type\":\"string\",\"description\":\"The assetId par" +
            "ameter specifies the YouTube asset ID of the asset for which you are retrieving " +
            "the match policy.\",\"required\":true,\"location\":\"path\"},\"onBehalfOfContentOwner\":{" +
            "\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter identifies t" +
            "he content owner that the user is acting on behalf of. This parameter supports u" +
            "sers whose accounts are associated with multiple content owners.\",\"location\":\"qu" +
            "ery\"}},\"parameterOrder\":[\"assetId\"],\"response\":{\"$ref\":\"Policy\"},\"scopes\":[\"http" +
            "s://www.googleapis.com/auth/youtubepartner\"]},\"patch\":{\"id\":\"youtubePartner.asse" +
            "tMatchPolicy.patch\",\"path\":\"assets/{assetId}/matchPolicy\",\"httpMethod\":\"PATCH\",\"" +
            "description\":\"Updates the asset\'s match policy. If an asset has multiple owners," +
            " each owner may set its own match policy for the asset. YouTube then computes th" +
            "e match policy that is actually applied for the asset based on the territories w" +
            "here each owner owns the asset. This method supports patch semantics.\",\"paramete" +
            "rs\":{\"assetId\":{\"type\":\"string\",\"description\":\"The assetId parameter specifies t" +
            "he YouTube asset ID of the asset for which you are retrieving the match policy.\"" +
            ",\"required\":true,\"location\":\"path\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"d" +
            "escription\":\"The onBehalfOfContentOwner parameter identifies the content owner t" +
            "hat the user is acting on behalf of. This parameter supports users whose account" +
            "s are associated with multiple content owners.\",\"location\":\"query\"}},\"parameterO" +
            "rder\":[\"assetId\"],\"request\":{\"$ref\":\"Policy\"},\"response\":{\"$ref\":\"Policy\"},\"scop" +
            "es\":[\"https://www.googleapis.com/auth/youtubepartner\"]},\"update\":{\"id\":\"youtubeP" +
            "artner.assetMatchPolicy.update\",\"path\":\"assets/{assetId}/matchPolicy\",\"httpMetho" +
            "d\":\"PUT\",\"description\":\"Updates the asset\'s match policy. If an asset has multip" +
            "le owners, each owner may set its own match policy for the asset. YouTube then c" +
            "omputes the match policy that is actually applied for the asset based on the ter" +
            "ritories where each owner owns the asset.\",\"parameters\":{\"assetId\":{\"type\":\"stri" +
            "ng\",\"description\":\"The assetId parameter specifies the YouTube asset ID of the a" +
            "sset for which you are retrieving the match policy.\",\"required\":true,\"location\":" +
            "\"path\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfC" +
            "ontentOwner parameter identifies the content owner that the user is acting on be" +
            "half of. This parameter supports users whose accounts are associated with multip" +
            "le content owners.\",\"location\":\"query\"}},\"parameterOrder\":[\"assetId\"],\"request\":" +
            "{\"$ref\":\"Policy\"},\"response\":{\"$ref\":\"Policy\"},\"scopes\":[\"https://www.googleapis" +
            ".com/auth/youtubepartner\"]}}},\"assetRelationships\":{\"methods\":{\"delete\":{\"id\":\"y" +
            "outubePartner.assetRelationships.delete\",\"path\":\"assetRelationships/{assetRelati" +
            "onshipId}\",\"httpMethod\":\"DELETE\",\"description\":\"Deletes a relationship between t" +
            "wo assets.\",\"parameters\":{\"assetRelationshipId\":{\"type\":\"string\",\"description\":\"" +
            "The assetRelationshipId parameter specifies a value that uniquely identifies the" +
            " relationship you are deleting.\",\"required\":true,\"location\":\"path\"},\"onBehalfOfC" +
            "ontentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner paramete" +
            "r identifies the content owner that the user is acting on behalf of. This parame" +
            "ter supports users whose accounts are associated with multiple content owners.\"," +
            "\"location\":\"query\"}},\"parameterOrder\":[\"assetRelationshipId\"],\"scopes\":[\"https:/" +
            "/www.googleapis.com/auth/youtubepartner\"]},\"insert\":{\"id\":\"youtubePartner.assetR" +
            "elationships.insert\",\"path\":\"assetRelationships\",\"httpMethod\":\"POST\",\"descriptio" +
            "n\":\"Creates a relationship that links two assets.\",\"parameters\":{\"onBehalfOfCont" +
            "entOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter i" +
            "dentifies the content owner that the user is acting on behalf of. This parameter" +
            " supports users whose accounts are associated with multiple content owners.\",\"lo" +
            "cation\":\"query\"}},\"request\":{\"$ref\":\"AssetRelationship\"},\"response\":{\"$ref\":\"Ass" +
            "etRelationship\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]},\"l" +
            "ist\":{\"id\":\"youtubePartner.assetRelationships.list\",\"path\":\"assetRelationships\"," +
            "\"httpMethod\":\"GET\",\"description\":\"Retrieves a list of relationships for a given " +
            "asset. The list contains relationships where the specified asset is either the p" +
            "arent (embedding) or child (embedded) asset in the relationship.\",\"parameters\":{" +
            "\"assetId\":{\"type\":\"string\",\"description\":\"The assetId parameter specifies the as" +
            "set ID of the asset for which you are retrieving relationships.\",\"required\":true" +
            ",\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"Th" +
            "e onBehalfOfContentOwner parameter identifies the content owner that the user is" +
            " acting on behalf of. This parameter supports users whose accounts are associate" +
            "d with multiple content owners.\",\"location\":\"query\"},\"pageToken\":{\"type\":\"string" +
            "\",\"description\":\"The pageToken parameter specifies a token that identifies a par" +
            "ticular page of results to return. Set this parameter to the value of the nextPa" +
            "geToken value from the previous API response to retrieve the next page of search" +
            " results.\",\"location\":\"query\"}},\"parameterOrder\":[\"assetId\"],\"response\":{\"$ref\":" +
            "\"AssetRelationshipListResponse\"},\"scopes\":[\"https://www.googleapis.com/auth/yout" +
            "ubepartner\"]}}},\"assetSearch\":{\"methods\":{\"list\":{\"id\":\"youtubePartner.assetSear" +
            "ch.list\",\"path\":\"assetSearch\",\"httpMethod\":\"GET\",\"description\":\"Searches for ass" +
            "ets based on asset metadata. The method can retrieve all assets or only assets o" +
            "wned by the content owner. This method mimics the functionality of the advanced " +
            "search feature on the Assets page in CMS.\",\"parameters\":{\"hasConflicts\":{\"type\":" +
            "\"boolean\",\"description\":\"The hasConflicts parameter enables you to only retrieve" +
            " assets that have ownership conflicts. The only valid value is true. Setting the" +
            " parameter value to false does not affect the results.\",\"location\":\"query\"},\"onB" +
            "ehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner " +
            "parameter identifies the content owner that the user is acting on behalf of. Thi" +
            "s parameter supports users whose accounts are associated with multiple content o" +
            "wners.\",\"location\":\"query\"},\"ownershipRestriction\":{\"type\":\"string\",\"description" +
            "\":\"The ownershipRestriction parameter specifies the ownership filtering option f" +
            "or the search. By default the search is performed in the assets owned by current" +
            "ly authenticated user only.\",\"default\":\"mine\",\"enum\":[\"mine\",\"none\"],\"enumDescri" +
            "ptions\":[\"Find assets owned by the current user that match the search query. Thi" +
            "s is the default behavior.\",\"Find all assets that match the search query, regard" +
            "less of owner.\"],\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"description\":" +
            "\"The pageToken parameter specifies a token that identifies a particular page of " +
            "results to return. Set this parameter to the value of the nextPageToken value fr" +
            "om the previous API response to retrieve the next page of search results.\",\"loca" +
            "tion\":\"query\"},\"q\":{\"type\":\"string\",\"description\":\"The q parameter specifies the" +
            " query term to search for.\",\"location\":\"query\"},\"sort\":{\"type\":\"string\",\"descrip" +
            "tion\":\"The sort parameter specifies how the search results should be sorted. Not" +
            "e that results are always sorted in descending order.\",\"enum\":[\"claims\",\"time\",\"" +
            "views\"],\"enumDescriptions\":[\"Sort by the number of claims for each asset.\",\"Sort" +
            " by the modification time for each asset. This is the default value.\",\"Sort by t" +
            "he approximate daily views for each asset.\"],\"location\":\"query\"},\"type\":{\"type\":" +
            "\"string\",\"description\":\"The type parameter specifies the types of assets that yo" +
            "u want to retrieve. The parameter value is a comma-separated list of asset types" +
            ".\",\"enum\":[\"composition\",\"episode\",\"general\",\"movie\",\"music_video\",\"season\",\"sho" +
            "w\",\"sound_recording\",\"video_game\",\"web\"],\"enumDescriptions\":[\"\",\"\",\"\",\"\",\"\",\"\",\"" +
            "\",\"\",\"\",\"\"],\"location\":\"query\"}},\"response\":{\"$ref\":\"AssetSearchResponse\"},\"scop" +
            "es\":[\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"assets\":{\"methods\":{\"" +
            "get\":{\"id\":\"youtubePartner.assets.get\",\"path\":\"assets/{assetId}\",\"httpMethod\":\"G" +
            "ET\",\"description\":\"Retrieves the metadata for the specified asset. Note that if " +
            "the request identifies an asset that has been merged with another asset, meaning" +
            " that YouTube identified the requested asset as a duplicate, then the request re" +
            "trieves the merged, or synthesized, asset.\",\"parameters\":{\"assetId\":{\"type\":\"str" +
            "ing\",\"description\":\"The assetId parameter specifies the YouTube asset ID of the " +
            "asset being retrieved.\",\"required\":true,\"location\":\"path\"},\"fetchMatchPolicy\":{\"" +
            "type\":\"string\",\"description\":\"The fetchMatchPolicy parameter specifies the versi" +
            "on of the asset\'s match policy that should be returned in the API response.\",\"en" +
            "um\":[\"mine\",\"none\"],\"enumDescriptions\":[\"Retrieve the match policy set by the de" +
            "fault content owner for the currently authenticated user.\",\"Do not retrieve the " +
            "asset\'s match policy. This is the default value.\"],\"location\":\"query\"},\"fetchMet" +
            "adata\":{\"type\":\"string\",\"description\":\"The fetchMetadata parameter specifies the" +
            " version of the asset\'s metadata that should be returned in the API response. In" +
            " some cases, YouTube receives metadata for an asset from multiple sources, such " +
            "as when different partners own the asset in different territories.\",\"enum\":[\"can" +
            "onical\",\"mine\",\"none\"],\"enumDescriptions\":[\"Retrieve the asset metadata that You" +
            "Tube has algorithmically determined is the most accurate description of the asse" +
            "t. Even if a request retrieves the canonical version of an asset\'s metadata, the" +
            " metadata still specifies the metadata.customId value provided by the API user.\"" +
            ",\"Retrieve the asset metadata provided by the default content owner associated w" +
            "ith the currently authenticated user.\",\"Do not retrieve any metadata. This is th" +
            "e default value.\"],\"location\":\"query\"},\"fetchOwnership\":{\"type\":\"string\",\"descri" +
            "ption\":\"The fetchOwnership parameter specifies the version of the asset\'s owners" +
            "hip data that should be returned in the API response. As with asset metadata, Yo" +
            "uTube can receive asset ownership data from multiple sources.\",\"enum\":[\"canonica" +
            "l\",\"mine\",\"none\"],\"enumDescriptions\":[\"Retrieve the ownership data that YouTube " +
            "has algorithmically determined is the most accurate for the asset.\",\"Retrieve th" +
            "e ownership data provided by the default content owner associated with the curre" +
            "ntly authenticated user.\",\"Do not retrieve any ownership data. This is the defau" +
            "lt value.\"],\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"descr" +
            "iption\":\"The onBehalfOfContentOwner parameter identifies the content owner that " +
            "the user is acting on behalf of. This parameter supports users whose accounts ar" +
            "e associated with multiple content owners.\",\"location\":\"query\"}},\"parameterOrder" +
            "\":[\"assetId\"],\"response\":{\"$ref\":\"Asset\"},\"scopes\":[\"https://www.googleapis.com/" +
            "auth/youtubepartner\"]},\"insert\":{\"id\":\"youtubePartner.assets.insert\",\"path\":\"ass" +
            "ets\",\"httpMethod\":\"POST\",\"description\":\"Inserts an asset with the specified meta" +
            "data. After inserting an asset, you can set its ownership data and match policy." +
            "\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onB" +
            "ehalfOfContentOwner parameter identifies the content owner that the user is acti" +
            "ng on behalf of. This parameter supports users whose accounts are associated wit" +
            "h multiple content owners.\",\"location\":\"query\"}},\"request\":{\"$ref\":\"Asset\"},\"res" +
            "ponse\":{\"$ref\":\"Asset\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartne" +
            "r\"]},\"list\":{\"id\":\"youtubePartner.assets.list\",\"path\":\"assets\",\"httpMethod\":\"GET" +
            "\",\"description\":\"Retrieves a list of assets based on asset metadata. The method " +
            "can retrieve all assets or only assets owned by the content owner.\\n\\nNote that " +
            "in cases where duplicate assets have been merged, the API response only contains" +
            " the synthesized asset. (It does not contain the constituent assets that were me" +
            "rged into the synthesized asset.)\",\"parameters\":{\"fetchMatchPolicy\":{\"type\":\"str" +
            "ing\",\"description\":\"The fetchMatchPolicy parameter specifies the version of the " +
            "asset\'s match policy that should be returned in the API response.\",\"enum\":[\"mine" +
            "\",\"none\"],\"enumDescriptions\":[\"Retrieve the match policy set by the default cont" +
            "ent owner for the currently authenticated user.\",\"Do not retrieve the asset\'s ma" +
            "tch policy. This is the default value.\"],\"location\":\"query\"},\"fetchMetadata\":{\"t" +
            "ype\":\"string\",\"description\":\"The fetchMetadata parameter specifies the version o" +
            "f the asset\'s metadata that should be returned in the API response. In some case" +
            "s, YouTube receives metadata for an asset from multiple sources, such as when di" +
            "fferent partners own the asset in different territories.\",\"enum\":[\"canonical\",\"m" +
            "ine\",\"none\"],\"enumDescriptions\":[\"Retrieve the asset metadata that YouTube has a" +
            "lgorithmically determined is the most accurate description of the asset. Even if" +
            " a request retrieves the canonical version of an asset\'s metadata, the metadata " +
            "still specifies the metadata.customId value provided by the API user.\",\"Retrieve" +
            " the asset metadata provided by the API user.\",\"Do not retrieve any metadata. Th" +
            "is is the default value.\"],\"location\":\"query\"},\"fetchOwnership\":{\"type\":\"string\"" +
            ",\"description\":\"The fetchOwnership parameter specifies the version of the asset\'" +
            "s ownership data that should be returned in the API response. As with asset meta" +
            "data, YouTube can receive asset ownership data from multiple sources.\",\"enum\":[\"" +
            "canonical\",\"mine\",\"none\"],\"enumDescriptions\":[\"Retrieve the ownership data that " +
            "YouTube has algorithmically determined is the most accurate for the asset.\",\"Ret" +
            "rieve the ownership data provided by the default content owner associated with t" +
            "he currently authenticated user.\",\"Do not retrieve any ownership data. This is t" +
            "he default value.\"],\"location\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"The" +
            " id parameter specifies a comma-separated list of YouTube Asset IDs that identif" +
            "y the assets you want to retrieve. As noted in the method description, if you tr" +
            "y to retrieve an asset that YouTube identified as a duplicate and merged with an" +
            "other asset, the API response only returns the synthesized asset. In that case, " +
            "the aliasId property in the asset resource specifies a list of other asset IDs t" +
            "hat can be used to identify that asset.\\n\\nAlso note that the API response does " +
            "not contain duplicates. As such, if your request identifies three asset IDs, and" +
            " all of those have been merged into a single asset, then the API response identi" +
            "fies one matching asset.\",\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"" +
            "string\",\"description\":\"The onBehalfOfContentOwner parameter identifies the conte" +
            "nt owner that the user is acting on behalf of. This parameter supports users who" +
            "se accounts are associated with multiple content owners.\",\"location\":\"query\"}},\"" +
            "response\":{\"$ref\":\"AssetListResponse\"},\"scopes\":[\"https://www.googleapis.com/aut" +
            "h/youtubepartner\"]},\"patch\":{\"id\":\"youtubePartner.assets.patch\",\"path\":\"assets/{" +
            "assetId}\",\"httpMethod\":\"PATCH\",\"description\":\"Updates the metadata for the speci" +
            "fied asset. This method supports patch semantics.\",\"parameters\":{\"assetId\":{\"typ" +
            "e\":\"string\",\"description\":\"The assetId parameter specifies the YouTube asset ID " +
            "of the asset being updated.\",\"required\":true,\"location\":\"path\"},\"onBehalfOfConte" +
            "ntOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter id" +
            "entifies the content owner that the user is acting on behalf of. This parameter " +
            "supports users whose accounts are associated with multiple content owners.\",\"loc" +
            "ation\":\"query\"}},\"parameterOrder\":[\"assetId\"],\"request\":{\"$ref\":\"Asset\"},\"respon" +
            "se\":{\"$ref\":\"Asset\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]" +
            "},\"update\":{\"id\":\"youtubePartner.assets.update\",\"path\":\"assets/{assetId}\",\"httpM" +
            "ethod\":\"PUT\",\"description\":\"Updates the metadata for the specified asset.\",\"para" +
            "meters\":{\"assetId\":{\"type\":\"string\",\"description\":\"The assetId parameter specifi" +
            "es the YouTube asset ID of the asset being updated.\",\"required\":true,\"location\":" +
            "\"path\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfC" +
            "ontentOwner parameter identifies the content owner that the user is acting on be" +
            "half of. This parameter supports users whose accounts are associated with multip" +
            "le content owners.\",\"location\":\"query\"}},\"parameterOrder\":[\"assetId\"],\"request\":" +
            "{\"$ref\":\"Asset\"},\"response\":{\"$ref\":\"Asset\"},\"scopes\":[\"https://www.googleapis.c" +
            "om/auth/youtubepartner\"]}}},\"claims\":{\"methods\":{\"get\":{\"id\":\"youtubePartner.cla" +
            "ims.get\",\"path\":\"claims/{claimId}\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a" +
            " specific claim by ID.\",\"parameters\":{\"claimId\":{\"type\":\"string\",\"description\":\"" +
            "The claimId parameter specifies the claim ID of the claim being retrieved.\",\"req" +
            "uired\":true,\"location\":\"path\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"descri" +
            "ption\":\"The onBehalfOfContentOwner parameter identifies the content owner that t" +
            "he user is acting on behalf of. This parameter supports users whose accounts are" +
            " associated with multiple content owners.\",\"location\":\"query\"}},\"parameterOrder\"" +
            ":[\"claimId\"],\"response\":{\"$ref\":\"Claim\"},\"scopes\":[\"https://www.googleapis.com/a" +
            "uth/youtubepartner\"]},\"insert\":{\"id\":\"youtubePartner.claims.insert\",\"path\":\"clai" +
            "ms\",\"httpMethod\":\"POST\",\"description\":\"Creates a claim. The video being claimed " +
            "must have been uploaded to a channel associated with the same content owner as t" +
            "he API user sending the request. You can set the claim\'s policy in any of the fo" +
            "llowing ways:\\n- Use the claim resource\'s policy property to identify a saved po" +
            "licy by its unique ID.\\n- Use the claim resource\'s policy property to specify a " +
            "custom set of rules.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"d" +
            "escription\":\"The onBehalfOfContentOwner parameter identifies the content owner t" +
            "hat the user is acting on behalf of. This parameter supports users whose account" +
            "s are associated with multiple content owners.\",\"location\":\"query\"}},\"request\":{" +
            "\"$ref\":\"Claim\"},\"response\":{\"$ref\":\"Claim\"},\"scopes\":[\"https://www.googleapis.co" +
            "m/auth/youtubepartner\"]},\"list\":{\"id\":\"youtubePartner.claims.list\",\"path\":\"claim" +
            "s\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a list of claims administered by " +
            "the content owner associated with the currently authenticated user. Results are " +
            "sorted in descending order of creation time.\",\"parameters\":{\"assetId\":{\"type\":\"s" +
            "tring\",\"description\":\"The assetId parameter specifies the YouTube asset ID of th" +
            "e asset for which you are retrieving claims.\",\"location\":\"query\"},\"id\":{\"type\":\"" +
            "string\",\"description\":\"The id parameter specifies a list of comma-separated YouT" +
            "ube claim IDs to retrieve.\",\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\"" +
            ":\"string\",\"description\":\"The onBehalfOfContentOwner parameter identifies the con" +
            "tent owner that the user is acting on behalf of. This parameter supports users w" +
            "hose accounts are associated with multiple content owners.\",\"location\":\"query\"}," +
            "\"pageToken\":{\"type\":\"string\",\"description\":\"The pageToken parameter specifies a " +
            "token that identifies a particular page of results to return. For example, set t" +
            "his parameter to the value of the nextPageToken value from the previous API resp" +
            "onse to retrieve the next page of search results.\",\"location\":\"query\"},\"q\":{\"typ" +
            "e\":\"string\",\"description\":\"The q parameter specifies the query string to use to " +
            "filter search results. YouTube searches for the query string in the following cl" +
            "aim fields: video_title, video_keywords, user_name, isrc, iswc, grid, custom_id," +
            " encrypted claim_id, video_id, asset_id.\",\"location\":\"query\"},\"videoId\":{\"type\":" +
            "\"string\",\"description\":\"The assetId parameter specifies a list of comma-separate" +
            "d YouTube video IDs for which you are retrieving claims.\",\"location\":\"query\"}},\"" +
            "response\":{\"$ref\":\"ClaimListResponse\"},\"scopes\":[\"https://www.googleapis.com/aut" +
            "h/youtubepartner\"]},\"patch\":{\"id\":\"youtubePartner.claims.patch\",\"path\":\"claims/{" +
            "claimId}\",\"httpMethod\":\"PATCH\",\"description\":\"Updates an existing claim by eithe" +
            "r changing its policy or its status. You can update a claim\'s status from active" +
            " to inactive to effectively release the claim. This method supports patch semant" +
            "ics.\",\"parameters\":{\"claimId\":{\"type\":\"string\",\"description\":\"The claimId parame" +
            "ter specifies the claim ID of the claim being updated.\",\"required\":true,\"locatio" +
            "n\":\"path\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalf" +
            "OfContentOwner parameter identifies the content owner that the user is acting on" +
            " behalf of. This parameter supports users whose accounts are associated with mul" +
            "tiple content owners.\",\"location\":\"query\"}},\"parameterOrder\":[\"claimId\"],\"reques" +
            "t\":{\"$ref\":\"Claim\"},\"response\":{\"$ref\":\"Claim\"},\"scopes\":[\"https://www.googleapi" +
            "s.com/auth/youtubepartner\"]},\"update\":{\"id\":\"youtubePartner.claims.update\",\"path" +
            "\":\"claims/{claimId}\",\"httpMethod\":\"PUT\",\"description\":\"Updates an existing claim" +
            " by either changing its policy or its status. You can update a claim\'s status fr" +
            "om active to inactive to effectively release the claim.\",\"parameters\":{\"claimId\"" +
            ":{\"type\":\"string\",\"description\":\"The claimId parameter specifies the claim ID of" +
            " the claim being updated.\",\"required\":true,\"location\":\"path\"},\"onBehalfOfContent" +
            "Owner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter iden" +
            "tifies the content owner that the user is acting on behalf of. This parameter su" +
            "pports users whose accounts are associated with multiple content owners.\",\"locat" +
            "ion\":\"query\"}},\"parameterOrder\":[\"claimId\"],\"request\":{\"$ref\":\"Claim\"},\"response" +
            "\":{\"$ref\":\"Claim\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]}}" +
            "},\"contentOwnerAdvertisingOptions\":{\"methods\":{\"get\":{\"id\":\"youtubePartner.conte" +
            "ntOwnerAdvertisingOptions.get\",\"path\":\"contentOwnerAdvertisingOptions\",\"httpMeth" +
            "od\":\"GET\",\"description\":\"Retrieves advertising options for the content owner ass" +
            "ociated with the authenticated user.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"t" +
            "ype\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter identifies the" +
            " content owner that the user is acting on behalf of. This parameter supports use" +
            "rs whose accounts are associated with multiple content owners.\",\"location\":\"quer" +
            "y\"}},\"response\":{\"$ref\":\"ContentOwnerAdvertisingOption\"},\"scopes\":[\"https://www." +
            "googleapis.com/auth/youtubepartner\"]},\"patch\":{\"id\":\"youtubePartner.contentOwner" +
            "AdvertisingOptions.patch\",\"path\":\"contentOwnerAdvertisingOptions\",\"httpMethod\":\"" +
            "PATCH\",\"description\":\"Updates advertising options for the content owner associat" +
            "ed with the authenticated API user. This method supports patch semantics.\",\"para" +
            "meters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOf" +
            "ContentOwner parameter identifies the content owner that the user is acting on b" +
            "ehalf of. This parameter supports users whose accounts are associated with multi" +
            "ple content owners.\",\"location\":\"query\"}},\"request\":{\"$ref\":\"ContentOwnerAdverti" +
            "singOption\"},\"response\":{\"$ref\":\"ContentOwnerAdvertisingOption\"},\"scopes\":[\"http" +
            "s://www.googleapis.com/auth/youtubepartner\"]},\"update\":{\"id\":\"youtubePartner.con" +
            "tentOwnerAdvertisingOptions.update\",\"path\":\"contentOwnerAdvertisingOptions\",\"htt" +
            "pMethod\":\"PUT\",\"description\":\"Updates advertising options for the content owner " +
            "associated with the authenticated API user.\",\"parameters\":{\"onBehalfOfContentOwn" +
            "er\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter identif" +
            "ies the content owner that the user is acting on behalf of. This parameter suppo" +
            "rts users whose accounts are associated with multiple content owners.\",\"location" +
            "\":\"query\"}},\"request\":{\"$ref\":\"ContentOwnerAdvertisingOption\"},\"response\":{\"$ref" +
            "\":\"ContentOwnerAdvertisingOption\"},\"scopes\":[\"https://www.googleapis.com/auth/yo" +
            "utubepartner\"]}}},\"contentOwners\":{\"methods\":{\"get\":{\"id\":\"youtubePartner.conten" +
            "tOwners.get\",\"path\":\"contentOwners/{contentOwnerId}\",\"httpMethod\":\"GET\",\"descrip" +
            "tion\":\"Retrieves information about the specified content owner.\",\"parameters\":{\"" +
            "contentOwnerId\":{\"type\":\"string\",\"description\":\"The contentOwnerId parameter spe" +
            "cifies a value that uniquely identifies the content owner.\",\"required\":true,\"loc" +
            "ation\":\"path\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBe" +
            "halfOfContentOwner parameter identifies the content owner that the user is actin" +
            "g on behalf of. This parameter supports users whose accounts are associated with" +
            " multiple content owners.\",\"location\":\"query\"}},\"parameterOrder\":[\"contentOwnerI" +
            "d\"],\"response\":{\"$ref\":\"ContentOwner\"},\"scopes\":[\"https://www.googleapis.com/aut" +
            "h/youtubepartner\"]},\"list\":{\"id\":\"youtubePartner.contentOwners.list\",\"path\":\"con" +
            "tentOwners\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a list of content owners" +
            " that match the request criteria.\",\"parameters\":{\"fetchMine\":{\"type\":\"boolean\",\"" +
            "description\":\"The fetchMine parameter restricts the result set to content owners" +
            " associated with the currently authenticated API user.\",\"location\":\"query\"},\"id\"" +
            ":{\"type\":\"string\",\"description\":\"The id parameter specifies a comma-separated li" +
            "st of YouTube content owner IDs to retrieve.\",\"location\":\"query\"},\"onBehalfOfCon" +
            "tentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter " +
            "identifies the content owner that the user is acting on behalf of. This paramete" +
            "r supports users whose accounts are associated with multiple content owners.\",\"l" +
            "ocation\":\"query\"}},\"response\":{\"$ref\":\"ContentOwnerListResponse\"},\"scopes\":[\"htt" +
            "ps://www.googleapis.com/auth/youtubepartner\"]}}},\"metadataHistory\":{\"methods\":{\"" +
            "list\":{\"id\":\"youtubePartner.metadataHistory.list\",\"path\":\"metadataHistory\",\"http" +
            "Method\":\"GET\",\"description\":\"Retrieves a list of all metadata provided for an as" +
            "set, regardless of which content owner provided the data.\",\"parameters\":{\"assetI" +
            "d\":{\"type\":\"string\",\"description\":\"The assetId parameter specifies the YouTube a" +
            "sset ID of the asset for which you are retrieving a metadata history.\",\"required" +
            "\":true,\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The onBehalfOfContentOwner parameter identifies the content owner that the u" +
            "ser is acting on behalf of. This parameter supports users whose accounts are ass" +
            "ociated with multiple content owners.\",\"location\":\"query\"}},\"parameterOrder\":[\"a" +
            "ssetId\"],\"response\":{\"$ref\":\"MetadataHistoryListResponse\"},\"scopes\":[\"https://ww" +
            "w.googleapis.com/auth/youtubepartner\"]}}},\"orders\":{\"methods\":{\"delete\":{\"id\":\"y" +
            "outubePartner.orders.delete\",\"path\":\"orders/{orderId}\",\"httpMethod\":\"DELETE\",\"de" +
            "scription\":\"Delete an order, which moves orders to inactive state and removes an" +
            "y associated video.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"de" +
            "scription\":\"ContentOnwerId that super admin acts in behalf of.\",\"location\":\"quer" +
            "y\"},\"orderId\":{\"type\":\"string\",\"description\":\"Id of the order to delete.\",\"requi" +
            "red\":true,\"location\":\"path\"}},\"parameterOrder\":[\"orderId\"],\"scopes\":[\"https://ww" +
            "w.googleapis.com/auth/youtubepartner\"]},\"get\":{\"id\":\"youtubePartner.orders.get\"," +
            "\"path\":\"orders/{orderId}\",\"httpMethod\":\"GET\",\"description\":\"Retrieve the details" +
            " of an existing order.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\"," +
            "\"description\":\"ContentOnwerId that super admin acts in behalf of.\",\"location\":\"q" +
            "uery\"},\"orderId\":{\"type\":\"string\",\"description\":\"The id of the order.\",\"required" +
            "\":true,\"location\":\"path\"}},\"parameterOrder\":[\"orderId\"],\"response\":{\"$ref\":\"Orde" +
            "r\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]},\"insert\":{\"id\":" +
            "\"youtubePartner.orders.insert\",\"path\":\"orders\",\"httpMethod\":\"POST\",\"description\"" +
            ":\"Creates a new basic order entry in the YouTube premium asset order management " +
            "system. You must supply at least a country and channel in the new order.\",\"param" +
            "eters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"ContentOnwerId " +
            "that super admin acts in behalf of.\",\"location\":\"query\"}},\"request\":{\"$ref\":\"Ord" +
            "er\"},\"response\":{\"$ref\":\"Order\"},\"scopes\":[\"https://www.googleapis.com/auth/yout" +
            "ubepartner\"]},\"list\":{\"id\":\"youtubePartner.orders.list\",\"path\":\"orders\",\"httpMet" +
            "hod\":\"GET\",\"description\":\"Return a list of orders, filtered by the parameters be" +
            "low, may return more than a single page of results.\",\"parameters\":{\"channelId\":{" +
            "\"type\":\"string\",\"description\":\"Filter results to only a specific channel ( use e" +
            "ncrypted ID).\",\"location\":\"query\"},\"contentType\":{\"type\":\"string\",\"description\":" +
            "\"Filter the results by type, possible values are SHOW or MOVIE.\",\"location\":\"que" +
            "ry\"},\"country\":{\"type\":\"string\",\"description\":\"Filter results by country, two le" +
            "tter ISO country codes are used.\",\"location\":\"query\"},\"customId\":{\"type\":\"string" +
            "\",\"description\":\"Filter result by orders that have this custom ID.\",\"location\":\"" +
            "query\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"ContentOnwerId " +
            "that super admin acts in behalf of.\",\"location\":\"query\"},\"pageToken\":{\"type\":\"st" +
            "ring\",\"description\":\"The continuation token is an optional value that is only us" +
            "ed to page through large result sets.\\n\\n- To retrieve the next page of results " +
            "for a request, set this parameter to the value of the nextPageToken value from t" +
            "he previous response.\\n- To get the previous page of results, set this parameter" +
            " to the value of the previousPageToken value from the previous response.\",\"locat" +
            "ion\":\"query\"},\"priority\":{\"type\":\"string\",\"description\":\"Filter results by prior" +
            "ity. P0, P1, P2, P3 and P4 are the acceptable options.\",\"location\":\"query\"},\"pro" +
            "ductionHouse\":{\"type\":\"string\",\"description\":\"Filter results by a particular pro" +
            "duction house. Specified by the name of the production house.\",\"location\":\"query" +
            "\"},\"q\":{\"type\":\"string\",\"description\":\"Filter results to only orders that contai" +
            "n this string in the title.\",\"location\":\"query\"},\"status\":{\"type\":\"string\",\"desc" +
            "ription\":\"Filter results to have this status, available options are STATUS_AVAIL" +
            "ED, STATUS_ORDERED, STATUS_RECEIVED, STATUS_READY_FOR_QC, STATUS_MOC_FIX, STATUS" +
            "_PARTNER_FIX, STATUS_YOUTUBE_FIX, STATUS_QC_APPROVED, STATUS_INACTIVE, STATUS_IN" +
            "GESTION_COMPLETE, STATUS_REORDERED\",\"location\":\"query\"},\"videoId\":{\"type\":\"strin" +
            "g\",\"description\":\"Filter results to orders that are associated with this YouTube" +
            " external video id.\",\"location\":\"query\"}},\"response\":{\"$ref\":\"OrderListResponse\"" +
            "},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]},\"patch\":{\"id\":\"yo" +
            "utubePartner.orders.patch\",\"path\":\"orders/{orderId}\",\"httpMethod\":\"PATCH\",\"descr" +
            "iption\":\"Update the values in an existing order. This method supports patch sema" +
            "ntics.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"C" +
            "ontentOwnerId that super admin acts in behalf of.\",\"location\":\"query\"},\"orderId\"" +
            ":{\"type\":\"string\",\"description\":\"The id of the order.\",\"required\":true,\"location" +
            "\":\"path\"}},\"parameterOrder\":[\"orderId\"],\"request\":{\"$ref\":\"Order\"},\"response\":{\"" +
            "$ref\":\"Order\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]},\"upd" +
            "ate\":{\"id\":\"youtubePartner.orders.update\",\"path\":\"orders/{orderId}\",\"httpMethod\"" +
            ":\"PUT\",\"description\":\"Update the values in an existing order.\",\"parameters\":{\"on" +
            "BehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"ContentOwnerId that super " +
            "admin acts in behalf of.\",\"location\":\"query\"},\"orderId\":{\"type\":\"string\",\"descri" +
            "ption\":\"The id of the order.\",\"required\":true,\"location\":\"path\"}},\"parameterOrde" +
            "r\":[\"orderId\"],\"request\":{\"$ref\":\"Order\"},\"response\":{\"$ref\":\"Order\"},\"scopes\":[" +
            "\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"ownership\":{\"methods\":{\"ge" +
            "t\":{\"id\":\"youtubePartner.ownership.get\",\"path\":\"assets/{assetId}/ownership\",\"htt" +
            "pMethod\":\"GET\",\"description\":\"Retrieves the ownership data provided for the spec" +
            "ified asset by the content owner associated with the authenticated user.\",\"param" +
            "eters\":{\"assetId\":{\"type\":\"string\",\"description\":\"The assetId parameter specifie" +
            "s the YouTube asset ID for which you are retrieving ownership data.\",\"required\":" +
            "true,\"location\":\"path\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":" +
            "\"The onBehalfOfContentOwner parameter identifies the content owner that the user" +
            " is acting on behalf of. This parameter supports users whose accounts are associ" +
            "ated with multiple content owners.\",\"location\":\"query\"}},\"parameterOrder\":[\"asse" +
            "tId\"],\"response\":{\"$ref\":\"RightsOwnership\"},\"scopes\":[\"https://www.googleapis.co" +
            "m/auth/youtubepartner\"]},\"patch\":{\"id\":\"youtubePartner.ownership.patch\",\"path\":\"" +
            "assets/{assetId}/ownership\",\"httpMethod\":\"PATCH\",\"description\":\"Provides new own" +
            "ership information for the specified asset. Note that YouTube may receive owners" +
            "hip information from multiple sources. For example, if an asset has multiple own" +
            "ers, each owner might send ownership data for the asset. YouTube algorithmically" +
            " combines the ownership data received from all of those sources to generate the " +
            "asset\'s canonical ownership data, which should provide the most comprehensive an" +
            "d accurate representation of the asset\'s ownership. This method supports patch s" +
            "emantics.\",\"parameters\":{\"assetId\":{\"type\":\"string\",\"description\":\"The assetId p" +
            "arameter specifies the YouTube asset ID of the asset being updated.\",\"required\":" +
            "true,\"location\":\"path\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":" +
            "\"The onBehalfOfContentOwner parameter identifies the content owner that the user" +
            " is acting on behalf of. This parameter supports users whose accounts are associ" +
            "ated with multiple content owners.\",\"location\":\"query\"}},\"parameterOrder\":[\"asse" +
            "tId\"],\"request\":{\"$ref\":\"RightsOwnership\"},\"response\":{\"$ref\":\"RightsOwnership\"}" +
            ",\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]},\"update\":{\"id\":\"yo" +
            "utubePartner.ownership.update\",\"path\":\"assets/{assetId}/ownership\",\"httpMethod\":" +
            "\"PUT\",\"description\":\"Provides new ownership information for the specified asset." +
            " Note that YouTube may receive ownership information from multiple sources. For " +
            "example, if an asset has multiple owners, each owner might send ownership data f" +
            "or the asset. YouTube algorithmically combines the ownership data received from " +
            "all of those sources to generate the asset\'s canonical ownership data, which sho" +
            "uld provide the most comprehensive and accurate representation of the asset\'s ow" +
            "nership.\",\"parameters\":{\"assetId\":{\"type\":\"string\",\"description\":\"The assetId pa" +
            "rameter specifies the YouTube asset ID of the asset being updated.\",\"required\":t" +
            "rue,\"location\":\"path\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"" +
            "The onBehalfOfContentOwner parameter identifies the content owner that the user " +
            "is acting on behalf of. This parameter supports users whose accounts are associa" +
            "ted with multiple content owners.\",\"location\":\"query\"}},\"parameterOrder\":[\"asset" +
            "Id\"],\"request\":{\"$ref\":\"RightsOwnership\"},\"response\":{\"$ref\":\"RightsOwnership\"}," +
            "\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"ownershipHistory" +
            "\":{\"methods\":{\"list\":{\"id\":\"youtubePartner.ownershipHistory.list\",\"path\":\"owners" +
            "hipHistory\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a list of all ownership " +
            "data provided for an asset, regardless of which content owner provided the data." +
            "\",\"parameters\":{\"assetId\":{\"type\":\"string\",\"description\":\"The assetId parameter " +
            "specifies the YouTube asset ID of the asset for which you are retrieving an owne" +
            "rship data history.\",\"required\":true,\"location\":\"query\"},\"onBehalfOfContentOwner" +
            "\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter identifie" +
            "s the content owner that the user is acting on behalf of. This parameter support" +
            "s users whose accounts are associated with multiple content owners.\",\"location\":" +
            "\"query\"}},\"parameterOrder\":[\"assetId\"],\"response\":{\"$ref\":\"OwnershipHistoryListR" +
            "esponse\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"polici" +
            "es\":{\"methods\":{\"get\":{\"id\":\"youtubePartner.policies.get\",\"path\":\"policies/{poli" +
            "cyId}\",\"httpMethod\":\"GET\",\"description\":\"Retrieves the specified saved policy.\"," +
            "\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBeh" +
            "alfOfContentOwner parameter identifies the content owner that the user is acting" +
            " on behalf of. This parameter supports users whose accounts are associated with " +
            "multiple content owners.\",\"location\":\"query\"},\"policyId\":{\"type\":\"string\",\"descr" +
            "iption\":\"The policyId parameter specifies a value that uniquely identifies the p" +
            "olicy being retrieved.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"p" +
            "olicyId\"],\"response\":{\"$ref\":\"Policy\"},\"scopes\":[\"https://www.googleapis.com/aut" +
            "h/youtubepartner\"]},\"insert\":{\"id\":\"youtubePartner.policies.insert\",\"path\":\"poli" +
            "cies\",\"httpMethod\":\"POST\",\"description\":\"Creates a saved policy.\",\"parameters\":{" +
            "\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOw" +
            "ner parameter identifies the content owner that the user is acting on behalf of." +
            " This parameter supports users whose accounts are associated with multiple conte" +
            "nt owners.\",\"location\":\"query\"}},\"request\":{\"$ref\":\"Policy\"},\"response\":{\"$ref\":" +
            "\"Policy\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]},\"list\":{\"" +
            "id\":\"youtubePartner.policies.list\",\"path\":\"policies\",\"httpMethod\":\"GET\",\"descrip" +
            "tion\":\"Retrieves a list of the content owner\'s saved policies.\",\"parameters\":{\"i" +
            "d\":{\"type\":\"string\",\"description\":\"Comma-separated list of saved policy IDs to r" +
            "etrieve. Only policies belonging to the currently authenticated content owner wi" +
            "ll be available.\",\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"string\"," +
            "\"description\":\"The onBehalfOfContentOwner parameter identifies the content owner" +
            " that the user is acting on behalf of. This parameter supports users whose accou" +
            "nts are associated with multiple content owners.\",\"location\":\"query\"}},\"response" +
            "\":{\"$ref\":\"PolicyList\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartne" +
            "r\"]},\"patch\":{\"id\":\"youtubePartner.policies.patch\",\"path\":\"policies/{policyId}\"," +
            "\"httpMethod\":\"PATCH\",\"description\":\"Updates the specified saved policy. This met" +
            "hod supports patch semantics.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"s" +
            "tring\",\"description\":\"The onBehalfOfContentOwner parameter identifies the conten" +
            "t owner that the user is acting on behalf of. This parameter supports users whos" +
            "e accounts are associated with multiple content owners.\",\"location\":\"query\"},\"po" +
            "licyId\":{\"type\":\"string\",\"description\":\"The policyId parameter specifies a value" +
            " that uniquely identifies the policy being updated.\",\"required\":true,\"location\":" +
            "\"path\"}},\"parameterOrder\":[\"policyId\"],\"request\":{\"$ref\":\"Policy\"},\"response\":{\"" +
            "$ref\":\"Policy\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]},\"up" +
            "date\":{\"id\":\"youtubePartner.policies.update\",\"path\":\"policies/{policyId}\",\"httpM" +
            "ethod\":\"PUT\",\"description\":\"Updates the specified saved policy.\",\"parameters\":{\"" +
            "onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwn" +
            "er parameter identifies the content owner that the user is acting on behalf of. " +
            "This parameter supports users whose accounts are associated with multiple conten" +
            "t owners.\",\"location\":\"query\"},\"policyId\":{\"type\":\"string\",\"description\":\"The po" +
            "licyId parameter specifies a value that uniquely identifies the policy being upd" +
            "ated.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"policyId\"],\"reques" +
            "t\":{\"$ref\":\"Policy\"},\"response\":{\"$ref\":\"Policy\"},\"scopes\":[\"https://www.googlea" +
            "pis.com/auth/youtubepartner\"]}}},\"publishers\":{\"methods\":{\"get\":{\"id\":\"youtubePa" +
            "rtner.publishers.get\",\"path\":\"publishers/{publisherId}\",\"httpMethod\":\"GET\",\"desc" +
            "ription\":\"Retrieves information about the specified publisher.\",\"parameters\":{\"o" +
            "nBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwne" +
            "r parameter identifies the content owner that the user is acting on behalf of. T" +
            "his parameter supports users whose accounts are associated with multiple content" +
            " owners.\",\"location\":\"query\"},\"publisherId\":{\"type\":\"string\",\"description\":\"The " +
            "publisherId parameter specifies a publisher ID that uniquely identifies the publ" +
            "isher being retrieved.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"p" +
            "ublisherId\"],\"response\":{\"$ref\":\"Publisher\"},\"scopes\":[\"https://www.googleapis.c" +
            "om/auth/youtubepartner\"]},\"insert\":{\"id\":\"youtubePartner.publishers.insert\",\"pat" +
            "h\":\"publishers\",\"httpMethod\":\"POST\",\"description\":\"Creates a publisher.\",\"parame" +
            "ters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfCo" +
            "ntentOwner parameter identifies the content owner that the user is acting on beh" +
            "alf of. This parameter supports users whose accounts are associated with multipl" +
            "e content owners.\",\"location\":\"query\"}},\"request\":{\"$ref\":\"Publisher\"},\"response" +
            "\":{\"$ref\":\"Publisher\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner" +
            "\"]},\"list\":{\"id\":\"youtubePartner.publishers.list\",\"path\":\"publishers\",\"httpMetho" +
            "d\":\"GET\",\"description\":\"Retrieves a list of publishers that match the request cr" +
            "iteria. This method is analogous to a publisher search function.\",\"parameters\":{" +
            "\"caeNumber\":{\"type\":\"string\",\"description\":\"The caeNumber parameter specifies th" +
            "e CAE number of the publisher that you want to retrieve.\",\"location\":\"query\"},\"i" +
            "d\":{\"type\":\"string\",\"description\":\"The id parameter specifies a comma-separated " +
            "list of YouTube publisher IDs to retrieve.\",\"location\":\"query\"},\"ipiNumber\":{\"ty" +
            "pe\":\"string\",\"description\":\"The ipiNumber parameter specifies the IPI number of " +
            "the publisher that you want to retrieve.\",\"location\":\"query\"},\"maxResults\":{\"typ" +
            "e\":\"integer\",\"description\":\"The maxResults parameter specifies the maximum numbe" +
            "r of results to return per page.\",\"default\":\"25\",\"format\":\"uint32\",\"minimum\":\"0\"" +
            ",\"maximum\":\"50\",\"location\":\"query\"},\"namePrefix\":{\"type\":\"string\",\"description\":" +
            "\"The namePrefix parameter indicates that the API should only return publishers w" +
            "hose name starts with this prefix.\",\"location\":\"query\"},\"onBehalfOfContentOwner\"" +
            ":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter identifies" +
            " the content owner that the user is acting on behalf of. This parameter supports" +
            " users whose accounts are associated with multiple content owners.\",\"location\":\"" +
            "query\"},\"pageToken\":{\"type\":\"string\",\"description\":\"The pageToken parameter spec" +
            "ifies a token that identifies a particular page of results to return. Set this p" +
            "arameter to the value of the nextPageToken value from the previous API response " +
            "to retrieve the next page of search results.\",\"location\":\"query\"}},\"response\":{\"" +
            "$ref\":\"PublisherList\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner" +
            "\"]}}},\"references\":{\"methods\":{\"get\":{\"id\":\"youtubePartner.references.get\",\"path" +
            "\":\"references/{referenceId}\",\"httpMethod\":\"GET\",\"description\":\"Retrieves informa" +
            "tion about the specified reference.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"ty" +
            "pe\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter identifies the " +
            "content owner that the user is acting on behalf of. This parameter supports user" +
            "s whose accounts are associated with multiple content owners.\",\"location\":\"query" +
            "\"},\"referenceId\":{\"type\":\"string\",\"description\":\"The referenceId parameter speci" +
            "fies the YouTube reference ID of the reference being retrieved.\",\"required\":true" +
            ",\"location\":\"path\"}},\"parameterOrder\":[\"referenceId\"],\"response\":{\"$ref\":\"Refere" +
            "nce\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]},\"insert\":{\"id" +
            "\":\"youtubePartner.references.insert\",\"path\":\"references\",\"httpMethod\":\"POST\",\"de" +
            "scription\":\"Creates a reference in one of the following ways:\\n- If your request" +
            " is uploading a reference file, YouTube creates the reference from the provided " +
            "content. In this flow, you can use either the multipart or resumable upload flow" +
            "s to provide the reference content.\\n- If you want to create a reference using a" +
            " claimed video as the reference content, use the claimId parameter to identify t" +
            "he claim.\",\"parameters\":{\"claimId\":{\"type\":\"string\",\"description\":\"The claimId p" +
            "arameter specifies the YouTube claim ID of an existing claim from which a refere" +
            "nce should be created. (The claimed video is used as the reference content.)\",\"l" +
            "ocation\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The o" +
            "nBehalfOfContentOwner parameter identifies the content owner that the user is ac" +
            "ting on behalf of. This parameter supports users whose accounts are associated w" +
            "ith multiple content owners.\",\"location\":\"query\"}},\"request\":{\"$ref\":\"Reference\"" +
            "},\"response\":{\"$ref\":\"Reference\"},\"scopes\":[\"https://www.googleapis.com/auth/you" +
            "tubepartner\"],\"supportsMediaUpload\":true,\"mediaUpload\":{\"accept\":[\"*/*\"],\"maxSiz" +
            "e\":\"20GB\",\"protocols\":{\"simple\":{\"multipart\":true,\"path\":\"/upload/youtube/partne" +
            "r/v1/references\"},\"resumable\":{\"multipart\":true,\"path\":\"/resumable/upload/youtub" +
            "e/partner/v1/references\"}}}},\"list\":{\"id\":\"youtubePartner.references.list\",\"path" +
            "\":\"references\",\"httpMethod\":\"GET\",\"description\":\"Retrieves a list of references " +
            "by ID or the list of references for the specified asset.\",\"parameters\":{\"assetId" +
            "\":{\"type\":\"string\",\"description\":\"The assetId parameter specifies the YouTube as" +
            "set ID of the asset for which you are retrieving references.\",\"location\":\"query\"" +
            "},\"id\":{\"type\":\"string\",\"description\":\"The id parameter specifies a comma-separa" +
            "ted list of YouTube reference IDs to retrieve.\",\"location\":\"query\"},\"onBehalfOfC" +
            "ontentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner paramete" +
            "r identifies the content owner that the user is acting on behalf of. This parame" +
            "ter supports users whose accounts are associated with multiple content owners.\"," +
            "\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"description\":\"The pageToken pa" +
            "rameter specifies a token that identifies a particular page of results to return" +
            ". Set this parameter to the value of the nextPageToken value from the previous A" +
            "PI response to retrieve the next page of search results.\",\"location\":\"query\"}},\"" +
            "response\":{\"$ref\":\"ReferenceListResponse\"},\"scopes\":[\"https://www.googleapis.com" +
            "/auth/youtubepartner\"]},\"patch\":{\"id\":\"youtubePartner.references.patch\",\"path\":\"" +
            "references/{referenceId}\",\"httpMethod\":\"PATCH\",\"description\":\"Updates a referenc" +
            "e. This method supports patch semantics.\",\"parameters\":{\"onBehalfOfContentOwner\"" +
            ":{\"type\":\"string\",\"description\":\"The onBehalfOfContentOwner parameter identifies" +
            " the content owner that the user is acting on behalf of. This parameter supports" +
            " users whose accounts are associated with multiple content owners.\",\"location\":\"" +
            "query\"},\"referenceId\":{\"type\":\"string\",\"description\":\"The referenceId parameter " +
            "specifies the YouTube reference ID of the reference being updated.\",\"required\":t" +
            "rue,\"location\":\"path\"},\"releaseClaims\":{\"type\":\"boolean\",\"description\":\"The rele" +
            "aseClaims parameter indicates that you want to release all match claims associat" +
            "ed with this reference. This parameter only works when the claim\'s status is bei" +
            "ng updated to \'inactive\' - you can then set the parameter\'s value to true to rel" +
            "ease all match claims produced by this reference.\",\"default\":\"false\",\"location\":" +
            "\"query\"}},\"parameterOrder\":[\"referenceId\"],\"request\":{\"$ref\":\"Reference\"},\"respo" +
            "nse\":{\"$ref\":\"Reference\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepart" +
            "ner\"]},\"update\":{\"id\":\"youtubePartner.references.update\",\"path\":\"references/{ref" +
            "erenceId}\",\"httpMethod\":\"PUT\",\"description\":\"Updates a reference.\",\"parameters\":" +
            "{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBehalfOfContentO" +
            "wner parameter identifies the content owner that the user is acting on behalf of" +
            ". This parameter supports users whose accounts are associated with multiple cont" +
            "ent owners.\",\"location\":\"query\"},\"referenceId\":{\"type\":\"string\",\"description\":\"T" +
            "he referenceId parameter specifies the YouTube reference ID of the reference bei" +
            "ng updated.\",\"required\":true,\"location\":\"path\"},\"releaseClaims\":{\"type\":\"boolean" +
            "\",\"description\":\"The releaseClaims parameter indicates that you want to release " +
            "all match claims associated with this reference. This parameter only works when " +
            "the claim\'s status is being updated to \'inactive\' - you can then set the paramet" +
            "er\'s value to true to release all match claims produced by this reference.\",\"def" +
            "ault\":\"false\",\"location\":\"query\"}},\"parameterOrder\":[\"referenceId\"],\"request\":{\"" +
            "$ref\":\"Reference\"},\"response\":{\"$ref\":\"Reference\"},\"scopes\":[\"https://www.google" +
            "apis.com/auth/youtubepartner\"]}}},\"videoAdvertisingOptions\":{\"methods\":{\"get\":{\"" +
            "id\":\"youtubePartner.videoAdvertisingOptions.get\",\"path\":\"videoAdvertisingOptions" +
            "/{videoId}\",\"httpMethod\":\"GET\",\"description\":\"Retrieves advertising settings for" +
            " the specified video.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"" +
            "description\":\"The onBehalfOfContentOwner parameter identifies the content owner " +
            "that the user is acting on behalf of. This parameter supports users whose accoun" +
            "ts are associated with multiple content owners.\",\"location\":\"query\"},\"videoId\":{" +
            "\"type\":\"string\",\"description\":\"The videoId parameter specifies the YouTube video" +
            " ID of the video for which you are retrieving advertising settings.\",\"required\":" +
            "true,\"location\":\"path\"}},\"parameterOrder\":[\"videoId\"],\"response\":{\"$ref\":\"VideoA" +
            "dvertisingOption\"},\"scopes\":[\"https://www.googleapis.com/auth/youtubepartner\"]}," +
            "\"getEnabledAds\":{\"id\":\"youtubePartner.videoAdvertisingOptions.getEnabledAds\",\"pa" +
            "th\":\"videoAdvertisingOptions/{videoId}/getEnabledAds\",\"httpMethod\":\"GET\",\"descri" +
            "ption\":\"Retrieves details about the types of allowed ads for a specified partner" +
            "- or user-uploaded video.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"strin" +
            "g\",\"description\":\"The onBehalfOfContentOwner parameter identifies the content ow" +
            "ner that the user is acting on behalf of. This parameter supports users whose ac" +
            "counts are associated with multiple content owners.\",\"location\":\"query\"},\"videoI" +
            "d\":{\"type\":\"string\",\"description\":\"The videoId parameter specifies the YouTube v" +
            "ideo ID of the video for which you are retrieving advertising options.\",\"require" +
            "d\":true,\"location\":\"path\"}},\"parameterOrder\":[\"videoId\"],\"response\":{\"$ref\":\"Vid" +
            "eoAdvertisingOptionGetEnabledAdsResponse\"},\"scopes\":[\"https://www.googleapis.com" +
            "/auth/youtubepartner\"]},\"patch\":{\"id\":\"youtubePartner.videoAdvertisingOptions.pa" +
            "tch\",\"path\":\"videoAdvertisingOptions/{videoId}\",\"httpMethod\":\"PATCH\",\"descriptio" +
            "n\":\"Updates the advertising settings for the specified video. This method suppor" +
            "ts patch semantics.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"de" +
            "scription\":\"The onBehalfOfContentOwner parameter identifies the content owner th" +
            "at the user is acting on behalf of. This parameter supports users whose accounts" +
            " are associated with multiple content owners.\",\"location\":\"query\"},\"videoId\":{\"t" +
            "ype\":\"string\",\"description\":\"The videoId parameter specifies the YouTube video I" +
            "D of the video for which you are updating advertising settings.\",\"required\":true" +
            ",\"location\":\"path\"}},\"parameterOrder\":[\"videoId\"],\"request\":{\"$ref\":\"VideoAdvert" +
            "isingOption\"},\"response\":{\"$ref\":\"VideoAdvertisingOption\"},\"scopes\":[\"https://ww" +
            "w.googleapis.com/auth/youtubepartner\"]},\"update\":{\"id\":\"youtubePartner.videoAdve" +
            "rtisingOptions.update\",\"path\":\"videoAdvertisingOptions/{videoId}\",\"httpMethod\":\"" +
            "PUT\",\"description\":\"Updates the advertising settings for the specified video.\",\"" +
            "parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The onBeha" +
            "lfOfContentOwner parameter identifies the content owner that the user is acting " +
            "on behalf of. This parameter supports users whose accounts are associated with m" +
            "ultiple content owners.\",\"location\":\"query\"},\"videoId\":{\"type\":\"string\",\"descrip" +
            "tion\":\"The videoId parameter specifies the YouTube video ID of the video for whi" +
            "ch you are updating advertising settings.\",\"required\":true,\"location\":\"path\"}},\"" +
            "parameterOrder\":[\"videoId\"],\"request\":{\"$ref\":\"VideoAdvertisingOption\"},\"respons" +
            "e\":{\"$ref\":\"VideoAdvertisingOption\"},\"scopes\":[\"https://www.googleapis.com/auth/" +
            "youtubepartner\"]}}}}}";
        
        public const string Version = "v1";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string _Key;
        
        protected YoutubePartnerService(Google.Apis.Discovery.IService _service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this._service = _service;
            this._authenticator = _authenticator;
            this._assetMatchPolicy = new AssetMatchPolicyResource(this, _authenticator);
            this._assetRelationships = new AssetRelationshipsResource(this, _authenticator);
            this._assetSearch = new AssetSearchResource(this, _authenticator);
            this._assets = new AssetsResource(this, _authenticator);
            this._claims = new ClaimsResource(this, _authenticator);
            this._contentOwnerAdvertisingOptions = new ContentOwnerAdvertisingOptionsResource(this, _authenticator);
            this._contentOwners = new ContentOwnersResource(this, _authenticator);
            this._metadataHistory = new MetadataHistoryResource(this, _authenticator);
            this._orders = new OrdersResource(this, _authenticator);
            this._ownership = new OwnershipResource(this, _authenticator);
            this._ownershipHistory = new OwnershipHistoryResource(this, _authenticator);
            this._policies = new PoliciesResource(this, _authenticator);
            this._publishers = new PublishersResource(this, _authenticator);
            this._references = new ReferencesResource(this, _authenticator);
            this._videoAdvertisingOptions = new VideoAdvertisingOptionsResource(this, _authenticator);
        }
        
        public YoutubePartnerService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public YoutubePartnerService(Google.Apis.Authentication.IAuthenticator _authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(YoutubePartnerService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameters(new System.Uri("https://www.googleapis.com/youtube/partner/v1/"))), _authenticator) {
        }
        
        public Google.Apis.Authentication.IAuthenticator Authenticator {
            get {
                return this._authenticator;
            }
        }
        
        public virtual string Name {
            get {
                return "youtubePartner";
            }
        }
        
        public virtual string BaseUri {
            get {
                return "https://www.googleapis.com/youtube/partner/v1/";
            }
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this._Key;
            }
            set {
                this._Key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this._service.CreateRequest(resource, method);
            if ((string.IsNullOrEmpty(Key) == false)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(_authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            _service.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return _service.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return _service.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>View and manage your assets and associated content on YouTube</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtubepartner")]
            Youtubepartner,
        }
    }
    
    public class AssetMatchPolicyResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "assetMatchPolicy";
        
        public AssetMatchPolicyResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves the match policy assigned to the specified asset by the content owner associated with the authenticated user. This information is only accessible to an owner of the asset.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy.</param>
        public virtual GetRequest Get(string assetId) {
            return new GetRequest(service, assetId);
        }
        
        /// <summary>Updates the asset&apos;s match policy. If an asset has multiple owners, each owner may set its own match policy for the asset. YouTube then computes the match policy that is actually applied for the asset based on the territories where each owner owns the asset. This method supports patch semantics.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy.</param>
        public virtual PatchRequest Patch(Google.Apis.YoutubePartner.v1.Data.Policy body, string assetId) {
            return new PatchRequest(service, body, assetId);
        }
        
        /// <summary>Updates the asset&apos;s match policy. If an asset has multiple owners, each owner may set its own match policy for the asset. YouTube then computes the match policy that is actually applied for the asset based on the territories where each owner owns the asset.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy.</param>
        public virtual UpdateRequest Update(Google.Apis.YoutubePartner.v1.Data.Policy body, string assetId) {
            return new UpdateRequest(service, body, assetId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Policy> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string assetId) : 
                    base(service) {
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assetMatchPolicy";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Policy> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Policy _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Policy body, string assetId) : 
                    base(service) {
                this.Body = body;
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Policy Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assetMatchPolicy";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Policy> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Policy _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Policy body, string assetId) : 
                    base(service) {
                this.Body = body;
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving the match policy.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Policy Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assetMatchPolicy";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class AssetRelationshipsResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "assetRelationships";
        
        public AssetRelationshipsResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes a relationship between two assets.</summary>
        /// <param name="assetRelationshipId">Required - The assetRelationshipId parameter specifies a value that uniquely identifies the relationship you are deleting.</param>
        public virtual DeleteRequest Delete(string assetRelationshipId) {
            return new DeleteRequest(service, assetRelationshipId);
        }
        
        /// <summary>Creates a relationship that links two assets.</summary>
        public virtual InsertRequest Insert(Google.Apis.YoutubePartner.v1.Data.AssetRelationship body) {
            return new InsertRequest(service, body);
        }
        
        /// <summary>Retrieves a list of relationships for a given asset. The list contains relationships where the specified asset is either the parent (embedding) or child (embedded) asset in the relationship.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the asset ID of the asset for which you are retrieving relationships.</param>
        public virtual ListRequest List(string assetId) {
            return new ListRequest(service, assetId);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetRelationshipId;
            
            private string _onBehalfOfContentOwner;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string assetRelationshipId) : 
                    base(service) {
                this._assetRelationshipId = assetRelationshipId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetRelationshipId parameter specifies a value that uniquely identifies the relationship you are deleting.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetRelationshipId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetRelationshipId {
                get {
                    return this._assetRelationshipId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assetRelationships";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.AssetRelationship> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.AssetRelationship _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.AssetRelationship body) : 
                    base(service) {
                this.Body = body;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.AssetRelationship Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assetRelationships";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.AssetRelationshipListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            private string _pageToken;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string assetId) : 
                    base(service) {
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the asset ID of the asset for which you are retrieving relationships.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The pageToken parameter specifies a token that identifies a particular page of results to return. Set this parameter to the value of the nextPageToken value from the previous API response to retrieve the next page of search results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assetRelationships";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class AssetSearchResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "assetSearch";
        
        public AssetSearchResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Searches for assets based on asset metadata. The method can retrieve all assets or only assets owned by the content owner. This method mimics the functionality of the advanced search feature on the Assets page in CMS.</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        /// <summary>The ownershipRestriction parameter specifies the ownership filtering option for the search. By default the search is performed in the assets owned by currently authenticated user only.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum OwnershipRestriction {
            
            /// <summary>Find assets owned by the current user that match the search query. This is the default behavior.</summary>
            [Google.Apis.Util.StringValueAttribute("mine")]
            Mine,
            
            /// <summary>Find all assets that match the search query, regardless of owner.</summary>
            [Google.Apis.Util.StringValueAttribute("none")]
            None,
        }
        
        /// <summary>The sort parameter specifies how the search results should be sorted. Note that results are always sorted in descending order.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Sort {
            
            /// <summary>Sort by the number of claims for each asset.</summary>
            [Google.Apis.Util.StringValueAttribute("claims")]
            Claims,
            
            /// <summary>Sort by the modification time for each asset. This is the default value.</summary>
            [Google.Apis.Util.StringValueAttribute("time")]
            Time,
            
            /// <summary>Sort by the approximate daily views for each asset.</summary>
            [Google.Apis.Util.StringValueAttribute("views")]
            Views,
        }
        
        /// <summary>The type parameter specifies the types of assets that you want to retrieve. The parameter value is a comma-separated list of asset types.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Type {
            
            [Google.Apis.Util.StringValueAttribute("composition")]
            Composition,
            
            [Google.Apis.Util.StringValueAttribute("episode")]
            Episode,
            
            [Google.Apis.Util.StringValueAttribute("general")]
            General,
            
            [Google.Apis.Util.StringValueAttribute("movie")]
            Movie,
            
            [Google.Apis.Util.StringValueAttribute("music_video")]
            Music_video,
            
            [Google.Apis.Util.StringValueAttribute("season")]
            Season,
            
            [Google.Apis.Util.StringValueAttribute("show")]
            Show,
            
            [Google.Apis.Util.StringValueAttribute("sound_recording")]
            Sound_recording,
            
            [Google.Apis.Util.StringValueAttribute("video_game")]
            Video_game,
            
            [Google.Apis.Util.StringValueAttribute("web")]
            Web,
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.AssetSearchResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private System.Nullable<bool> _hasConflicts;
            
            private string _onBehalfOfContentOwner;
            
            private System.Nullable<OwnershipRestriction> _ownershipRestriction;
            
            private string _pageToken;
            
            private string _q;
            
            private System.Nullable<Sort> _sort;
            
            private System.Nullable<Type> _type;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The hasConflicts parameter enables you to only retrieve assets that have ownership conflicts. The only valid value is true. Setting the parameter value to false does not affect the results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hasConflicts", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> HasConflicts {
                get {
                    return this._hasConflicts;
                }
                set {
                    this._hasConflicts = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The ownershipRestriction parameter specifies the ownership filtering option for the search. By default the search is performed in the assets owned by currently authenticated user only.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ownershipRestriction", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<OwnershipRestriction> OwnershipRestriction {
                get {
                    return this._ownershipRestriction;
                }
                set {
                    this._ownershipRestriction = value;
                }
            }
            
            /// <summary>The pageToken parameter specifies a token that identifies a particular page of results to return. Set this parameter to the value of the nextPageToken value from the previous API response to retrieve the next page of search results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>The q parameter specifies the query term to search for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Q {
                get {
                    return this._q;
                }
                set {
                    this._q = value;
                }
            }
            
            /// <summary>The sort parameter specifies how the search results should be sorted. Note that results are always sorted in descending order.</summary>
            [Google.Apis.Util.RequestParameterAttribute("sort", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Sort> Sort {
                get {
                    return this._sort;
                }
                set {
                    this._sort = value;
                }
            }
            
            /// <summary>The type parameter specifies the types of assets that you want to retrieve. The parameter value is a comma-separated list of asset types.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Type> Type {
                get {
                    return this._type;
                }
                set {
                    this._type = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assetSearch";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class AssetsResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "assets";
        
        public AssetsResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves the metadata for the specified asset. Note that if the request identifies an asset that has been merged with another asset, meaning that YouTube identified the requested asset as a duplicate, then the request retrieves the merged, or synthesized, asset.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset being retrieved.</param>
        public virtual GetRequest Get(string assetId) {
            return new GetRequest(service, assetId);
        }
        
        /// <summary>Inserts an asset with the specified metadata. After inserting an asset, you can set its ownership data and match policy.</summary>
        public virtual InsertRequest Insert(Google.Apis.YoutubePartner.v1.Data.Asset body) {
            return new InsertRequest(service, body);
        }
        
        /// <summary>Retrieves a list of assets based on asset metadata. The method can retrieve all assets or only assets owned by the content owner.
        ///
        ///Note that in cases where duplicate assets have been merged, the API response only contains the synthesized asset. (It does not contain the constituent assets that were merged into the synthesized asset.)</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        /// <summary>Updates the metadata for the specified asset. This method supports patch semantics.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset being updated.</param>
        public virtual PatchRequest Patch(Google.Apis.YoutubePartner.v1.Data.Asset body, string assetId) {
            return new PatchRequest(service, body, assetId);
        }
        
        /// <summary>Updates the metadata for the specified asset.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset being updated.</param>
        public virtual UpdateRequest Update(Google.Apis.YoutubePartner.v1.Data.Asset body, string assetId) {
            return new UpdateRequest(service, body, assetId);
        }
        
        /// <summary>The fetchMatchPolicy parameter specifies the version of the asset&apos;s match policy that should be returned in the API response.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum FetchMatchPolicy {
            
            /// <summary>Retrieve the match policy set by the default content owner for the currently authenticated user.</summary>
            [Google.Apis.Util.StringValueAttribute("mine")]
            Mine,
            
            /// <summary>Do not retrieve the asset&apos;s match policy. This is the default value.</summary>
            [Google.Apis.Util.StringValueAttribute("none")]
            None,
        }
        
        /// <summary>The fetchMetadata parameter specifies the version of the asset&apos;s metadata that should be returned in the API response. In some cases, YouTube receives metadata for an asset from multiple sources, such as when different partners own the asset in different territories.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum FetchMetadata {
            
            /// <summary>Retrieve the asset metadata that YouTube has algorithmically determined is the most accurate description of the asset. Even if a request retrieves the canonical version of an asset&apos;s metadata, the metadata still specifies the metadata.customId value provided by the API user.</summary>
            [Google.Apis.Util.StringValueAttribute("canonical")]
            Canonical,
            
            /// <summary>Retrieve the asset metadata provided by the default content owner associated with the currently authenticated user.</summary>
            [Google.Apis.Util.StringValueAttribute("mine")]
            Mine,
            
            /// <summary>Do not retrieve any metadata. This is the default value.</summary>
            [Google.Apis.Util.StringValueAttribute("none")]
            None,
        }
        
        /// <summary>The fetchOwnership parameter specifies the version of the asset&apos;s ownership data that should be returned in the API response. As with asset metadata, YouTube can receive asset ownership data from multiple sources.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum FetchOwnership {
            
            /// <summary>Retrieve the ownership data that YouTube has algorithmically determined is the most accurate for the asset.</summary>
            [Google.Apis.Util.StringValueAttribute("canonical")]
            Canonical,
            
            /// <summary>Retrieve the ownership data provided by the default content owner associated with the currently authenticated user.</summary>
            [Google.Apis.Util.StringValueAttribute("mine")]
            Mine,
            
            /// <summary>Do not retrieve any ownership data. This is the default value.</summary>
            [Google.Apis.Util.StringValueAttribute("none")]
            None,
        }
        
        /// <summary>The fetchMetadata parameter specifies the version of the asset&apos;s metadata that should be returned in the API response. In some cases, YouTube receives metadata for an asset from multiple sources, such as when different partners own the asset in different territories.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum FetchMetadataEnum {
            
            /// <summary>Retrieve the asset metadata that YouTube has algorithmically determined is the most accurate description of the asset. Even if a request retrieves the canonical version of an asset&apos;s metadata, the metadata still specifies the metadata.customId value provided by the API user.</summary>
            [Google.Apis.Util.StringValueAttribute("canonical")]
            Canonical,
            
            /// <summary>Retrieve the asset metadata provided by the API user.</summary>
            [Google.Apis.Util.StringValueAttribute("mine")]
            Mine,
            
            /// <summary>Do not retrieve any metadata. This is the default value.</summary>
            [Google.Apis.Util.StringValueAttribute("none")]
            None,
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Asset> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private System.Nullable<FetchMatchPolicy> _fetchMatchPolicy;
            
            private System.Nullable<FetchMetadata> _fetchMetadata;
            
            private System.Nullable<FetchOwnership> _fetchOwnership;
            
            private string _onBehalfOfContentOwner;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string assetId) : 
                    base(service) {
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset being retrieved.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The fetchMatchPolicy parameter specifies the version of the asset's match policy that should be returned in the API response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchMatchPolicy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FetchMatchPolicy> FetchMatchPolicy {
                get {
                    return this._fetchMatchPolicy;
                }
                set {
                    this._fetchMatchPolicy = value;
                }
            }
            
            /// <summary>The fetchMetadata parameter specifies the version of the asset's metadata that should be returned in the API response. In some cases, YouTube receives metadata for an asset from multiple sources, such as when different partners own the asset in different territories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchMetadata", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FetchMetadata> FetchMetadata {
                get {
                    return this._fetchMetadata;
                }
                set {
                    this._fetchMetadata = value;
                }
            }
            
            /// <summary>The fetchOwnership parameter specifies the version of the asset's ownership data that should be returned in the API response. As with asset metadata, YouTube can receive asset ownership data from multiple sources.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchOwnership", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FetchOwnership> FetchOwnership {
                get {
                    return this._fetchOwnership;
                }
                set {
                    this._fetchOwnership = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assets";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Asset> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Asset _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Asset body) : 
                    base(service) {
                this.Body = body;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Asset Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assets";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.AssetListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private System.Nullable<FetchMatchPolicy> _fetchMatchPolicy;
            
            private System.Nullable<FetchMetadataEnum> _fetchMetadata;
            
            private System.Nullable<FetchOwnership> _fetchOwnership;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The fetchMatchPolicy parameter specifies the version of the asset's match policy that should be returned in the API response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchMatchPolicy", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FetchMatchPolicy> FetchMatchPolicy {
                get {
                    return this._fetchMatchPolicy;
                }
                set {
                    this._fetchMatchPolicy = value;
                }
            }
            
            /// <summary>The fetchMetadata parameter specifies the version of the asset's metadata that should be returned in the API response. In some cases, YouTube receives metadata for an asset from multiple sources, such as when different partners own the asset in different territories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchMetadata", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FetchMetadataEnum> FetchMetadata {
                get {
                    return this._fetchMetadata;
                }
                set {
                    this._fetchMetadata = value;
                }
            }
            
            /// <summary>The fetchOwnership parameter specifies the version of the asset's ownership data that should be returned in the API response. As with asset metadata, YouTube can receive asset ownership data from multiple sources.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchOwnership", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<FetchOwnership> FetchOwnership {
                get {
                    return this._fetchOwnership;
                }
                set {
                    this._fetchOwnership = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of YouTube Asset IDs that identify the assets you want to retrieve. As noted in the method description, if you try to retrieve an asset that YouTube identified as a duplicate and merged with another asset, the API response only returns the synthesized asset. In that case, the aliasId property in the asset resource specifies a list of other asset IDs that can be used to identify that asset.
            ///
            ///Also note that the API response does not contain duplicates. As such, if your request identifies three asset IDs, and all of those have been merged into a single asset, then the API response identifies one matching asset.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assets";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Asset> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Asset _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Asset body, string assetId) : 
                    base(service) {
                this.Body = body;
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Asset Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assets";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Asset> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Asset _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Asset body, string assetId) : 
                    base(service) {
                this.Body = body;
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Asset Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "assets";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class ClaimsResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "claims";
        
        public ClaimsResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves a specific claim by ID.</summary>
        /// <param name="claimId">Required - The claimId parameter specifies the claim ID of the claim being retrieved.</param>
        public virtual GetRequest Get(string claimId) {
            return new GetRequest(service, claimId);
        }
        
        /// <summary>Creates a claim. The video being claimed must have been uploaded to a channel associated with the same content owner as the API user sending the request. You can set the claim&apos;s policy in any of the following ways:
        ///- Use the claim resource&apos;s policy property to identify a saved policy by its unique ID.
        ///- Use the claim resource&apos;s policy property to specify a custom set of rules.</summary>
        public virtual InsertRequest Insert(Google.Apis.YoutubePartner.v1.Data.Claim body) {
            return new InsertRequest(service, body);
        }
        
        /// <summary>Retrieves a list of claims administered by the content owner associated with the currently authenticated user. Results are sorted in descending order of creation time.</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        /// <summary>Updates an existing claim by either changing its policy or its status. You can update a claim&apos;s status from active to inactive to effectively release the claim. This method supports patch semantics.</summary>
        /// <param name="claimId">Required - The claimId parameter specifies the claim ID of the claim being updated.</param>
        public virtual PatchRequest Patch(Google.Apis.YoutubePartner.v1.Data.Claim body, string claimId) {
            return new PatchRequest(service, body, claimId);
        }
        
        /// <summary>Updates an existing claim by either changing its policy or its status. You can update a claim&apos;s status from active to inactive to effectively release the claim.</summary>
        /// <param name="claimId">Required - The claimId parameter specifies the claim ID of the claim being updated.</param>
        public virtual UpdateRequest Update(Google.Apis.YoutubePartner.v1.Data.Claim body, string claimId) {
            return new UpdateRequest(service, body, claimId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Claim> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _claimId;
            
            private string _onBehalfOfContentOwner;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string claimId) : 
                    base(service) {
                this._claimId = claimId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The claimId parameter specifies the claim ID of the claim being retrieved.</summary>
            [Google.Apis.Util.RequestParameterAttribute("claimId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ClaimId {
                get {
                    return this._claimId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "claims";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Claim> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Claim _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Claim body) : 
                    base(service) {
                this.Body = body;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Claim Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "claims";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.ClaimListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            private string _pageToken;
            
            private string _q;
            
            private string _videoId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving claims.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
                set {
                    this._assetId = value;
                }
            }
            
            /// <summary>The id parameter specifies a list of comma-separated YouTube claim IDs to retrieve.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The pageToken parameter specifies a token that identifies a particular page of results to return. For example, set this parameter to the value of the nextPageToken value from the previous API response to retrieve the next page of search results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>The q parameter specifies the query string to use to filter search results. YouTube searches for the query string in the following claim fields: video_title, video_keywords, user_name, isrc, iswc, grid, custom_id, encrypted claim_id, video_id, asset_id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Q {
                get {
                    return this._q;
                }
                set {
                    this._q = value;
                }
            }
            
            /// <summary>The assetId parameter specifies a list of comma-separated YouTube video IDs for which you are retrieving claims.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
                set {
                    this._videoId = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "claims";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Claim> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _claimId;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Claim _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Claim body, string claimId) : 
                    base(service) {
                this.Body = body;
                this._claimId = claimId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The claimId parameter specifies the claim ID of the claim being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("claimId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ClaimId {
                get {
                    return this._claimId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Claim Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "claims";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Claim> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _claimId;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Claim _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Claim body, string claimId) : 
                    base(service) {
                this.Body = body;
                this._claimId = claimId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The claimId parameter specifies the claim ID of the claim being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("claimId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ClaimId {
                get {
                    return this._claimId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Claim Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "claims";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class ContentOwnerAdvertisingOptionsResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "contentOwnerAdvertisingOptions";
        
        public ContentOwnerAdvertisingOptionsResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves advertising options for the content owner associated with the authenticated user.</summary>
        public virtual GetRequest Get() {
            return new GetRequest(service);
        }
        
        /// <summary>Updates advertising options for the content owner associated with the authenticated API user. This method supports patch semantics.</summary>
        public virtual PatchRequest Patch(Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption body) {
            return new PatchRequest(service, body);
        }
        
        /// <summary>Updates advertising options for the content owner associated with the authenticated API user.</summary>
        public virtual UpdateRequest Update(Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption body) {
            return new UpdateRequest(service, body);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "contentOwnerAdvertisingOptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption body) : 
                    base(service) {
                this.Body = body;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "contentOwnerAdvertisingOptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption body) : 
                    base(service) {
                this.Body = body;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.ContentOwnerAdvertisingOption Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "contentOwnerAdvertisingOptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class ContentOwnersResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "contentOwners";
        
        public ContentOwnersResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves information about the specified content owner.</summary>
        /// <param name="contentOwnerId">Required - The contentOwnerId parameter specifies a value that uniquely identifies the content owner.</param>
        public virtual GetRequest Get(string contentOwnerId) {
            return new GetRequest(service, contentOwnerId);
        }
        
        /// <summary>Retrieves a list of content owners that match the request criteria.</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.ContentOwner> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _contentOwnerId;
            
            private string _onBehalfOfContentOwner;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string contentOwnerId) : 
                    base(service) {
                this._contentOwnerId = contentOwnerId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The contentOwnerId parameter specifies a value that uniquely identifies the content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentOwnerId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ContentOwnerId {
                get {
                    return this._contentOwnerId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "contentOwners";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.ContentOwnerListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private System.Nullable<bool> _fetchMine;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The fetchMine parameter restricts the result set to content owners associated with the currently authenticated API user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("fetchMine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> FetchMine {
                get {
                    return this._fetchMine;
                }
                set {
                    this._fetchMine = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of YouTube content owner IDs to retrieve.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "contentOwners";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class MetadataHistoryResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "metadataHistory";
        
        public MetadataHistoryResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves a list of all metadata provided for an asset, regardless of which content owner provided the data.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving a metadata history.</param>
        public virtual ListRequest List(string assetId) {
            return new ListRequest(service, assetId);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.MetadataHistoryListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string assetId) : 
                    base(service) {
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving a metadata history.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "metadataHistory";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class OrdersResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "orders";
        
        public OrdersResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Delete an order, which moves orders to inactive state and removes any associated video.</summary>
        /// <param name="orderId">Required - Id of the order to delete.</param>
        public virtual DeleteRequest Delete(string orderId) {
            return new DeleteRequest(service, orderId);
        }
        
        /// <summary>Retrieve the details of an existing order.</summary>
        /// <param name="orderId">Required - The id of the order.</param>
        public virtual GetRequest Get(string orderId) {
            return new GetRequest(service, orderId);
        }
        
        /// <summary>Creates a new basic order entry in the YouTube premium asset order management system. You must supply at least a country and channel in the new order.</summary>
        public virtual InsertRequest Insert(Google.Apis.YoutubePartner.v1.Data.Order body) {
            return new InsertRequest(service, body);
        }
        
        /// <summary>Return a list of orders, filtered by the parameters below, may return more than a single page of results.</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        /// <summary>Update the values in an existing order. This method supports patch semantics.</summary>
        /// <param name="orderId">Required - The id of the order.</param>
        public virtual PatchRequest Patch(Google.Apis.YoutubePartner.v1.Data.Order body, string orderId) {
            return new PatchRequest(service, body, orderId);
        }
        
        /// <summary>Update the values in an existing order.</summary>
        /// <param name="orderId">Required - The id of the order.</param>
        public virtual UpdateRequest Update(Google.Apis.YoutubePartner.v1.Data.Order body, string orderId) {
            return new UpdateRequest(service, body, orderId);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _orderId;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string orderId) : 
                    base(service) {
                this._orderId = orderId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>ContentOnwerId that super admin acts in behalf of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Id of the order to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string OrderId {
                get {
                    return this._orderId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "orders";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Order> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _orderId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string orderId) : 
                    base(service) {
                this._orderId = orderId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>ContentOnwerId that super admin acts in behalf of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The id of the order.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string OrderId {
                get {
                    return this._orderId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "orders";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Order> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Order _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Order body) : 
                    base(service) {
                this.Body = body;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>ContentOnwerId that super admin acts in behalf of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Order Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "orders";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.OrderListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _channelId;
            
            private string _contentType;
            
            private string _country;
            
            private string _customId;
            
            private string _onBehalfOfContentOwner;
            
            private string _pageToken;
            
            private string _priority;
            
            private string _productionHouse;
            
            private string _q;
            
            private string _status;
            
            private string _videoId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Filter results to only a specific channel ( use encrypted ID).</summary>
            [Google.Apis.Util.RequestParameterAttribute("channelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChannelId {
                get {
                    return this._channelId;
                }
                set {
                    this._channelId = value;
                }
            }
            
            /// <summary>Filter the results by type, possible values are SHOW or MOVIE.</summary>
            [Google.Apis.Util.RequestParameterAttribute("contentType", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ContentType {
                get {
                    return this._contentType;
                }
                set {
                    this._contentType = value;
                }
            }
            
            /// <summary>Filter results by country, two letter ISO country codes are used.</summary>
            [Google.Apis.Util.RequestParameterAttribute("country", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Country {
                get {
                    return this._country;
                }
                set {
                    this._country = value;
                }
            }
            
            /// <summary>Filter result by orders that have this custom ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("customId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CustomId {
                get {
                    return this._customId;
                }
                set {
                    this._customId = value;
                }
            }
            
            /// <summary>ContentOnwerId that super admin acts in behalf of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The continuation token is an optional value that is only used to page through large result sets.
            ///
            ///- To retrieve the next page of results for a request, set this parameter to the value of the nextPageToken value from the previous response.
            ///- To get the previous page of results, set this parameter to the value of the previousPageToken value from the previous response.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>Filter results by priority. P0, P1, P2, P3 and P4 are the acceptable options.</summary>
            [Google.Apis.Util.RequestParameterAttribute("priority", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Priority {
                get {
                    return this._priority;
                }
                set {
                    this._priority = value;
                }
            }
            
            /// <summary>Filter results by a particular production house. Specified by the name of the production house.</summary>
            [Google.Apis.Util.RequestParameterAttribute("productionHouse", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ProductionHouse {
                get {
                    return this._productionHouse;
                }
                set {
                    this._productionHouse = value;
                }
            }
            
            /// <summary>Filter results to only orders that contain this string in the title.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Q {
                get {
                    return this._q;
                }
                set {
                    this._q = value;
                }
            }
            
            /// <summary>Filter results to have this status, available options are STATUS_AVAILED, STATUS_ORDERED, STATUS_RECEIVED, STATUS_READY_FOR_QC, STATUS_MOC_FIX, STATUS_PARTNER_FIX, STATUS_YOUTUBE_FIX, STATUS_QC_APPROVED, STATUS_INACTIVE, STATUS_INGESTION_COMPLETE, STATUS_REORDERED</summary>
            [Google.Apis.Util.RequestParameterAttribute("status", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Status {
                get {
                    return this._status;
                }
                set {
                    this._status = value;
                }
            }
            
            /// <summary>Filter results to orders that are associated with this YouTube external video id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
                set {
                    this._videoId = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "orders";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Order> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _orderId;
            
            private Google.Apis.YoutubePartner.v1.Data.Order _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Order body, string orderId) : 
                    base(service) {
                this.Body = body;
                this._orderId = orderId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>ContentOwnerId that super admin acts in behalf of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The id of the order.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string OrderId {
                get {
                    return this._orderId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Order Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "orders";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Order> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _orderId;
            
            private Google.Apis.YoutubePartner.v1.Data.Order _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Order body, string orderId) : 
                    base(service) {
                this.Body = body;
                this._orderId = orderId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>ContentOwnerId that super admin acts in behalf of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The id of the order.</summary>
            [Google.Apis.Util.RequestParameterAttribute("orderId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string OrderId {
                get {
                    return this._orderId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Order Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "orders";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class OwnershipResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "ownership";
        
        public OwnershipResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves the ownership data provided for the specified asset by the content owner associated with the authenticated user.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID for which you are retrieving ownership data.</param>
        public virtual GetRequest Get(string assetId) {
            return new GetRequest(service, assetId);
        }
        
        /// <summary>Provides new ownership information for the specified asset. Note that YouTube may receive ownership information from multiple sources. For example, if an asset has multiple owners, each owner might send ownership data for the asset. YouTube algorithmically combines the ownership data received from all of those sources to generate the asset&apos;s canonical ownership data, which should provide the most comprehensive and accurate representation of the asset&apos;s ownership. This method supports patch semantics.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset being updated.</param>
        public virtual PatchRequest Patch(Google.Apis.YoutubePartner.v1.Data.RightsOwnership body, string assetId) {
            return new PatchRequest(service, body, assetId);
        }
        
        /// <summary>Provides new ownership information for the specified asset. Note that YouTube may receive ownership information from multiple sources. For example, if an asset has multiple owners, each owner might send ownership data for the asset. YouTube algorithmically combines the ownership data received from all of those sources to generate the asset&apos;s canonical ownership data, which should provide the most comprehensive and accurate representation of the asset&apos;s ownership.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset being updated.</param>
        public virtual UpdateRequest Update(Google.Apis.YoutubePartner.v1.Data.RightsOwnership body, string assetId) {
            return new UpdateRequest(service, body, assetId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.RightsOwnership> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string assetId) : 
                    base(service) {
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID for which you are retrieving ownership data.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "ownership";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.RightsOwnership> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.RightsOwnership _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.RightsOwnership body, string assetId) : 
                    base(service) {
                this.Body = body;
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.RightsOwnership Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "ownership";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.RightsOwnership> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.RightsOwnership _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.RightsOwnership body, string assetId) : 
                    base(service) {
                this.Body = body;
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.RightsOwnership Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "ownership";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class OwnershipHistoryResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "ownershipHistory";
        
        public OwnershipHistoryResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves a list of all ownership data provided for an asset, regardless of which content owner provided the data.</summary>
        /// <param name="assetId">Required - The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving an ownership data history.</param>
        public virtual ListRequest List(string assetId) {
            return new ListRequest(service, assetId);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.OwnershipHistoryListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _onBehalfOfContentOwner;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string assetId) : 
                    base(service) {
                this._assetId = assetId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving an ownership data history.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "ownershipHistory";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class PoliciesResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "policies";
        
        public PoliciesResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves the specified saved policy.</summary>
        /// <param name="policyId">Required - The policyId parameter specifies a value that uniquely identifies the policy being retrieved.</param>
        public virtual GetRequest Get(string policyId) {
            return new GetRequest(service, policyId);
        }
        
        /// <summary>Creates a saved policy.</summary>
        public virtual InsertRequest Insert(Google.Apis.YoutubePartner.v1.Data.Policy body) {
            return new InsertRequest(service, body);
        }
        
        /// <summary>Retrieves a list of the content owner&apos;s saved policies.</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        /// <summary>Updates the specified saved policy. This method supports patch semantics.</summary>
        /// <param name="policyId">Required - The policyId parameter specifies a value that uniquely identifies the policy being updated.</param>
        public virtual PatchRequest Patch(Google.Apis.YoutubePartner.v1.Data.Policy body, string policyId) {
            return new PatchRequest(service, body, policyId);
        }
        
        /// <summary>Updates the specified saved policy.</summary>
        /// <param name="policyId">Required - The policyId parameter specifies a value that uniquely identifies the policy being updated.</param>
        public virtual UpdateRequest Update(Google.Apis.YoutubePartner.v1.Data.Policy body, string policyId) {
            return new UpdateRequest(service, body, policyId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Policy> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _policyId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string policyId) : 
                    base(service) {
                this._policyId = policyId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The policyId parameter specifies a value that uniquely identifies the policy being retrieved.</summary>
            [Google.Apis.Util.RequestParameterAttribute("policyId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string PolicyId {
                get {
                    return this._policyId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "policies";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Policy> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Policy _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Policy body) : 
                    base(service) {
                this.Body = body;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Policy Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "policies";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.PolicyList> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Comma-separated list of saved policy IDs to retrieve. Only policies belonging to the currently authenticated content owner will be available.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "policies";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Policy> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _policyId;
            
            private Google.Apis.YoutubePartner.v1.Data.Policy _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Policy body, string policyId) : 
                    base(service) {
                this.Body = body;
                this._policyId = policyId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The policyId parameter specifies a value that uniquely identifies the policy being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("policyId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string PolicyId {
                get {
                    return this._policyId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Policy Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "policies";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Policy> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _policyId;
            
            private Google.Apis.YoutubePartner.v1.Data.Policy _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Policy body, string policyId) : 
                    base(service) {
                this.Body = body;
                this._policyId = policyId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The policyId parameter specifies a value that uniquely identifies the policy being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("policyId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string PolicyId {
                get {
                    return this._policyId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Policy Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "policies";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class PublishersResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "publishers";
        
        public PublishersResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves information about the specified publisher.</summary>
        /// <param name="publisherId">Required - The publisherId parameter specifies a publisher ID that uniquely identifies the publisher being retrieved.</param>
        public virtual GetRequest Get(string publisherId) {
            return new GetRequest(service, publisherId);
        }
        
        /// <summary>Creates a publisher.</summary>
        public virtual InsertRequest Insert(Google.Apis.YoutubePartner.v1.Data.Publisher body) {
            return new InsertRequest(service, body);
        }
        
        /// <summary>Retrieves a list of publishers that match the request criteria. This method is analogous to a publisher search function.</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Publisher> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _publisherId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string publisherId) : 
                    base(service) {
                this._publisherId = publisherId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The publisherId parameter specifies a publisher ID that uniquely identifies the publisher being retrieved.</summary>
            [Google.Apis.Util.RequestParameterAttribute("publisherId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string PublisherId {
                get {
                    return this._publisherId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "publishers";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Publisher> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Publisher _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Publisher body) : 
                    base(service) {
                this.Body = body;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Publisher Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "publishers";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.PublisherList> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _caeNumber;
            
            private string _id;
            
            private string _ipiNumber;
            
            private System.Nullable<long> _maxResults;
            
            private string _namePrefix;
            
            private string _onBehalfOfContentOwner;
            
            private string _pageToken;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The caeNumber parameter specifies the CAE number of the publisher that you want to retrieve.</summary>
            [Google.Apis.Util.RequestParameterAttribute("caeNumber", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CaeNumber {
                get {
                    return this._caeNumber;
                }
                set {
                    this._caeNumber = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of YouTube publisher IDs to retrieve.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The ipiNumber parameter specifies the IPI number of the publisher that you want to retrieve.</summary>
            [Google.Apis.Util.RequestParameterAttribute("ipiNumber", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string IpiNumber {
                get {
                    return this._ipiNumber;
                }
                set {
                    this._ipiNumber = value;
                }
            }
            
            /// <summary>The maxResults parameter specifies the maximum number of results to return per page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>The namePrefix parameter indicates that the API should only return publishers whose name starts with this prefix.</summary>
            [Google.Apis.Util.RequestParameterAttribute("namePrefix", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string NamePrefix {
                get {
                    return this._namePrefix;
                }
                set {
                    this._namePrefix = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The pageToken parameter specifies a token that identifies a particular page of results to return. Set this parameter to the value of the nextPageToken value from the previous API response to retrieve the next page of search results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "publishers";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class ReferencesResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "references";
        
        public ReferencesResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves information about the specified reference.</summary>
        /// <param name="referenceId">Required - The referenceId parameter specifies the YouTube reference ID of the reference being retrieved.</param>
        public virtual GetRequest Get(string referenceId) {
            return new GetRequest(service, referenceId);
        }
        
        /// <summary>Creates a reference in one of the following ways:
        ///- If your request is uploading a reference file, YouTube creates the reference from the provided content. In this flow, you can use either the multipart or resumable upload flows to provide the reference content.
        ///- If you want to create a reference using a claimed video as the reference content, use the claimId parameter to identify the claim.</summary>
        public virtual InsertRequest Insert(Google.Apis.YoutubePartner.v1.Data.Reference body) {
            return new InsertRequest(service, body);
        }
        
        /// <summary>Creates a reference in one of the following ways:
        ///- If your request is uploading a reference file, YouTube creates the reference from the provided content. In this flow, you can use either the multipart or resumable upload flows to provide the reference content.
        ///- If you want to create a reference using a claimed video as the reference content, use the claimId parameter to identify the claim.</summary>
        public virtual InsertMediaUpload Insert(Google.Apis.YoutubePartner.v1.Data.Reference body, System.IO.Stream stream, string contentType) {
            return new InsertMediaUpload(service, body, stream, contentType);
        }
        
        /// <summary>Retrieves a list of references by ID or the list of references for the specified asset.</summary>
        public virtual ListRequest List() {
            return new ListRequest(service);
        }
        
        /// <summary>Updates a reference. This method supports patch semantics.</summary>
        /// <param name="referenceId">Required - The referenceId parameter specifies the YouTube reference ID of the reference being updated.</param>
        public virtual PatchRequest Patch(Google.Apis.YoutubePartner.v1.Data.Reference body, string referenceId) {
            return new PatchRequest(service, body, referenceId);
        }
        
        /// <summary>Updates a reference.</summary>
        /// <param name="referenceId">Required - The referenceId parameter specifies the YouTube reference ID of the reference being updated.</param>
        public virtual UpdateRequest Update(Google.Apis.YoutubePartner.v1.Data.Reference body, string referenceId) {
            return new UpdateRequest(service, body, referenceId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Reference> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _referenceId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string referenceId) : 
                    base(service) {
                this._referenceId = referenceId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The referenceId parameter specifies the YouTube reference ID of the reference being retrieved.</summary>
            [Google.Apis.Util.RequestParameterAttribute("referenceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ReferenceId {
                get {
                    return this._referenceId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "references";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Reference> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _claimId;
            
            private string _onBehalfOfContentOwner;
            
            private Google.Apis.YoutubePartner.v1.Data.Reference _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Reference body) : 
                    base(service) {
                this.Body = body;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The claimId parameter specifies the YouTube claim ID of an existing claim from which a reference should be created. (The claimed video is used as the reference content.)</summary>
            [Google.Apis.Util.RequestParameterAttribute("claimId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ClaimId {
                get {
                    return this._claimId;
                }
                set {
                    this._claimId = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Reference Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "references";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<Google.Apis.YoutubePartner.v1.Data.Reference, Google.Apis.YoutubePartner.v1.Data.Reference> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _claimId;
            
            private string _onBehalfOfContentOwner;
            
            public InsertMediaUpload(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Reference body, System.IO.Stream stream, string contentType) : 
                    base(service.BaseUri, "/upload/youtube/partner/v1/references", "POST", stream, contentType) {
                this.Body = body;
                this.Authenticator = service.Authenticator;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The claimId parameter specifies the YouTube claim ID of an existing claim from which a reference should be created. (The claimed video is used as the reference content.)</summary>
            [Google.Apis.Util.RequestParameterAttribute("claimId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ClaimId {
                get {
                    return this._claimId;
                }
                set {
                    this._claimId = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.ReferenceListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _assetId;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            private string _pageToken;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service) : 
                    base(service) {
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The assetId parameter specifies the YouTube asset ID of the asset for which you are retrieving references.</summary>
            [Google.Apis.Util.RequestParameterAttribute("assetId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string AssetId {
                get {
                    return this._assetId;
                }
                set {
                    this._assetId = value;
                }
            }
            
            /// <summary>The id parameter specifies a comma-separated list of YouTube reference IDs to retrieve.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The pageToken parameter specifies a token that identifies a particular page of results to return. Set this parameter to the value of the nextPageToken value from the previous API response to retrieve the next page of search results.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "references";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Reference> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _referenceId;
            
            private System.Nullable<bool> _releaseClaims;
            
            private Google.Apis.YoutubePartner.v1.Data.Reference _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Reference body, string referenceId) : 
                    base(service) {
                this.Body = body;
                this._referenceId = referenceId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The referenceId parameter specifies the YouTube reference ID of the reference being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("referenceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ReferenceId {
                get {
                    return this._referenceId;
                }
            }
            
            /// <summary>The releaseClaims parameter indicates that you want to release all match claims associated with this reference. This parameter only works when the claim's status is being updated to 'inactive' - you can then set the parameter's value to true to release all match claims produced by this reference.</summary>
            [Google.Apis.Util.RequestParameterAttribute("releaseClaims", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> ReleaseClaims {
                get {
                    return this._releaseClaims;
                }
                set {
                    this._releaseClaims = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Reference Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "references";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.Reference> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _referenceId;
            
            private System.Nullable<bool> _releaseClaims;
            
            private Google.Apis.YoutubePartner.v1.Data.Reference _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.Reference body, string referenceId) : 
                    base(service) {
                this.Body = body;
                this._referenceId = referenceId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The referenceId parameter specifies the YouTube reference ID of the reference being updated.</summary>
            [Google.Apis.Util.RequestParameterAttribute("referenceId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ReferenceId {
                get {
                    return this._referenceId;
                }
            }
            
            /// <summary>The releaseClaims parameter indicates that you want to release all match claims associated with this reference. This parameter only works when the claim's status is being updated to 'inactive' - you can then set the parameter's value to true to release all match claims produced by this reference.</summary>
            [Google.Apis.Util.RequestParameterAttribute("releaseClaims", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> ReleaseClaims {
                get {
                    return this._releaseClaims;
                }
                set {
                    this._releaseClaims = value;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.Reference Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "references";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class VideoAdvertisingOptionsResource {
        
        private YoutubePartnerService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "videoAdvertisingOptions";
        
        public VideoAdvertisingOptionsResource(YoutubePartnerService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Retrieves advertising settings for the specified video.</summary>
        /// <param name="videoId">Required - The videoId parameter specifies the YouTube video ID of the video for which you are retrieving advertising settings.</param>
        public virtual GetRequest Get(string videoId) {
            return new GetRequest(service, videoId);
        }
        
        /// <summary>Retrieves details about the types of allowed ads for a specified partner- or user-uploaded video.</summary>
        /// <param name="videoId">Required - The videoId parameter specifies the YouTube video ID of the video for which you are retrieving advertising options.</param>
        public virtual GetEnabledAdsRequest GetEnabledAds(string videoId) {
            return new GetEnabledAdsRequest(service, videoId);
        }
        
        /// <summary>Updates the advertising settings for the specified video. This method supports patch semantics.</summary>
        /// <param name="videoId">Required - The videoId parameter specifies the YouTube video ID of the video for which you are updating advertising settings.</param>
        public virtual PatchRequest Patch(Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption body, string videoId) {
            return new PatchRequest(service, body, videoId);
        }
        
        /// <summary>Updates the advertising settings for the specified video.</summary>
        /// <param name="videoId">Required - The videoId parameter specifies the YouTube video ID of the video for which you are updating advertising settings.</param>
        public virtual UpdateRequest Update(Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption body, string videoId) {
            return new UpdateRequest(service, body, videoId);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _videoId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string videoId) : 
                    base(service) {
                this._videoId = videoId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The videoId parameter specifies the YouTube video ID of the video for which you are retrieving advertising settings.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videoAdvertisingOptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class GetEnabledAdsRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOptionGetEnabledAdsResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _videoId;
            
            public GetEnabledAdsRequest(Google.Apis.Discovery.IRequestProvider service, string videoId) : 
                    base(service) {
                this._videoId = videoId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The videoId parameter specifies the YouTube video ID of the video for which you are retrieving advertising options.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videoAdvertisingOptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "getEnabledAds";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _videoId;
            
            private Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption body, string videoId) : 
                    base(service) {
                this.Body = body;
                this._videoId = videoId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The videoId parameter specifies the YouTube video ID of the video for which you are updating advertising settings.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videoAdvertisingOptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _videoId;
            
            private Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption body, string videoId) : 
                    base(service) {
                this.Body = body;
                this._videoId = videoId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The onBehalfOfContentOwner parameter identifies the content owner that the user is acting on behalf of. This parameter supports users whose accounts are associated with multiple content owners.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>The videoId parameter specifies the YouTube video ID of the video for which you are updating advertising settings.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.YoutubePartner.v1.Data.VideoAdvertisingOption Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videoAdvertisingOptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public partial class YoutubePartnerService {
        
        private const string Resource = "";
        
        private AssetMatchPolicyResource _assetMatchPolicy;
        
        private AssetRelationshipsResource _assetRelationships;
        
        private AssetSearchResource _assetSearch;
        
        private AssetsResource _assets;
        
        private ClaimsResource _claims;
        
        private ContentOwnerAdvertisingOptionsResource _contentOwnerAdvertisingOptions;
        
        private ContentOwnersResource _contentOwners;
        
        private MetadataHistoryResource _metadataHistory;
        
        private OrdersResource _orders;
        
        private OwnershipResource _ownership;
        
        private OwnershipHistoryResource _ownershipHistory;
        
        private PoliciesResource _policies;
        
        private PublishersResource _publishers;
        
        private ReferencesResource _references;
        
        private VideoAdvertisingOptionsResource _videoAdvertisingOptions;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual AssetMatchPolicyResource AssetMatchPolicy {
            get {
                return this._assetMatchPolicy;
            }
        }
        
        public virtual AssetRelationshipsResource AssetRelationships {
            get {
                return this._assetRelationships;
            }
        }
        
        public virtual AssetSearchResource AssetSearch {
            get {
                return this._assetSearch;
            }
        }
        
        public virtual AssetsResource Assets {
            get {
                return this._assets;
            }
        }
        
        public virtual ClaimsResource Claims {
            get {
                return this._claims;
            }
        }
        
        public virtual ContentOwnerAdvertisingOptionsResource ContentOwnerAdvertisingOptions {
            get {
                return this._contentOwnerAdvertisingOptions;
            }
        }
        
        public virtual ContentOwnersResource ContentOwners {
            get {
                return this._contentOwners;
            }
        }
        
        public virtual MetadataHistoryResource MetadataHistory {
            get {
                return this._metadataHistory;
            }
        }
        
        public virtual OrdersResource Orders {
            get {
                return this._orders;
            }
        }
        
        public virtual OwnershipResource Ownership {
            get {
                return this._ownership;
            }
        }
        
        public virtual OwnershipHistoryResource OwnershipHistory {
            get {
                return this._ownershipHistory;
            }
        }
        
        public virtual PoliciesResource Policies {
            get {
                return this._policies;
            }
        }
        
        public virtual PublishersResource Publishers {
            get {
                return this._publishers;
            }
        }
        
        public virtual ReferencesResource References {
            get {
                return this._references;
            }
        }
        
        public virtual VideoAdvertisingOptionsResource VideoAdvertisingOptions {
            get {
                return this._videoAdvertisingOptions;
            }
        }
    }
}
