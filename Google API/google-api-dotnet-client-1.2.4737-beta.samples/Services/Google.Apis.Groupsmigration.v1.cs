//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5466
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Groupsmigration.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    /// <summary>JSON response template for groups migration API.</summary>
    public class Groups : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _kind;
        
        private string _responseCode;
        
        private string _ETag;
        
        /// <summary>The kind of insert resource this is.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The status of the insert request.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("responseCode")]
        public virtual string ResponseCode {
            get {
                return this._responseCode;
            }
            set {
                this._responseCode = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
}
namespace Google.Apis.Groupsmigration.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class GroupsmigrationService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService _service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"etag\":\"\\\"zZ6SZIrxjkCWan0Pp0n2ulHSaJk/9bAbLP8" +
            "lBFrC8xKVRuGadCRcu_k\\\"\",\"discoveryVersion\":\"v1\",\"id\":\"groupsmigration:v1\",\"name\"" +
            ":\"groupsmigration\",\"version\":\"v1\",\"revision\":\"20121207\",\"title\":\"Groups Migratio" +
            "n API\",\"description\":\"Groups Migration Api.\",\"icons\":{\"x16\":\"http://www.google.c" +
            "om/images/icons/product/discussions-16.gif\",\"x32\":\"http://www.google.com/images/" +
            "icons/product/discussions-32.gif\"},\"documentationLink\":\"https://developers.googl" +
            "e.com/google-apps/groups-migration/\",\"protocol\":\"rest\",\"baseUrl\":\"https://www.go" +
            "ogleapis.com/groups/v1/groups/\",\"basePath\":\"/groups/v1/groups/\",\"rootUrl\":\"https" +
            "://www.googleapis.com/\",\"servicePath\":\"groups/v1/groups/\",\"batchPath\":\"batch\",\"p" +
            "arameters\":{\"alt\":{\"type\":\"string\",\"description\":\"Data format for the response.\"" +
            ",\"default\":\"json\",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses with Content-Ty" +
            "pe of application/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"string\",\"descript" +
            "ion\":\"Selector specifying which fields to include in a partial response.\",\"locat" +
            "ion\":\"query\"},\"key\":{\"type\":\"string\",\"description\":\"API key. Your API key identi" +
            "fies your project and provides you with API access, quota, and reports. Required" +
            " unless you provide an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"typ" +
            "e\":\"string\",\"description\":\"OAuth 2.0 token for the current user.\",\"location\":\"qu" +
            "ery\"},\"prettyPrint\":{\"type\":\"boolean\",\"description\":\"Returns response with inden" +
            "tations and line breaks.\",\"default\":\"true\",\"location\":\"query\"},\"quotaUser\":{\"typ" +
            "e\":\"string\",\"description\":\"Available to use for quota purposes for server-side a" +
            "pplications. Can be any arbitrary string assigned to a user, but should not exce" +
            "ed 40 characters. Overrides userIp if both are provided.\",\"location\":\"query\"},\"u" +
            "serIp\":{\"type\":\"string\",\"description\":\"IP address of the site where the request " +
            "originates. Use this if you want to enforce per-user limits.\",\"location\":\"query\"" +
            "}},\"schemas\":{\"Groups\":{\"id\":\"Groups\",\"type\":\"object\",\"description\":\"JSON respon" +
            "se template for groups migration API.\",\"properties\":{\"kind\":{\"type\":\"string\",\"de" +
            "scription\":\"The kind of insert resource this is.\",\"default\":\"groupsmigration#gro" +
            "ups\"},\"responseCode\":{\"type\":\"string\",\"description\":\"The status of the insert re" +
            "quest.\"}}}},\"resources\":{\"archive\":{\"methods\":{\"insert\":{\"id\":\"groupsmigration.a" +
            "rchive.insert\",\"path\":\"{groupId}/archive\",\"httpMethod\":\"POST\",\"description\":\"Ins" +
            "erts a new mail into the archive of the Google group.\",\"parameters\":{\"groupId\":{" +
            "\"type\":\"string\",\"description\":\"The group ID\",\"required\":true,\"location\":\"path\"}}" +
            ",\"parameterOrder\":[\"groupId\"],\"response\":{\"$ref\":\"Groups\"},\"supportsMediaUpload\"" +
            ":true,\"mediaUpload\":{\"accept\":[\"message/rfc822\"],\"maxSize\":\"16MB\",\"protocols\":{\"" +
            "simple\":{\"multipart\":true,\"path\":\"/upload/groups/v1/groups/{groupId}/archive\"},\"" +
            "resumable\":{\"multipart\":true,\"path\":\"/resumable/upload/groups/v1/groups/{groupId" +
            "}/archive\"}}}}}}}}";
        
        public const string Version = "v1";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string _Key;
        
        protected GroupsmigrationService(Google.Apis.Discovery.IService _service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this._service = _service;
            this._authenticator = _authenticator;
            this._archive = new ArchiveResource(this, _authenticator);
        }
        
        public GroupsmigrationService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public GroupsmigrationService(Google.Apis.Authentication.IAuthenticator _authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(GroupsmigrationService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameters(new System.Uri("https://www.googleapis.com/groups/v1/groups/"))), _authenticator) {
        }
        
        public Google.Apis.Authentication.IAuthenticator Authenticator {
            get {
                return this._authenticator;
            }
        }
        
        public virtual string Name {
            get {
                return "groupsmigration";
            }
        }
        
        public virtual string BaseUri {
            get {
                return "https://www.googleapis.com/groups/v1/groups/";
            }
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this._Key;
            }
            set {
                this._Key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this._service.CreateRequest(resource, method);
            if ((string.IsNullOrEmpty(Key) == false)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(_authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            _service.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return _service.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return _service.DeserializeResponse<T>(response);
        }
    }
    
    public class ArchiveResource {
        
        private GroupsmigrationService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "archive";
        
        public ArchiveResource(GroupsmigrationService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Inserts a new mail into the archive of the Google group.</summary>
        /// <param name="groupId">Required - The group ID</param>
        public virtual InsertRequest Insert(string groupId) {
            return new InsertRequest(service, groupId);
        }
        
        /// <summary>Inserts a new mail into the archive of the Google group.</summary>
        /// <param name="groupId">Required - The group ID</param>
        public virtual InsertMediaUpload Insert(string groupId, System.IO.Stream stream, string contentType) {
            return new InsertMediaUpload(service, groupId, stream, contentType);
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Groupsmigration.v1.Data.Groups> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _groupId;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, string groupId) : 
                    base(service) {
                this._groupId = groupId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The group ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string GroupId {
                get {
                    return this._groupId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "archive";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
        }
        
        public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<string, Google.Apis.Groupsmigration.v1.Data.Groups> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _groupId;
            
            public InsertMediaUpload(Google.Apis.Discovery.IRequestProvider service, string groupId, System.IO.Stream stream, string contentType) : 
                    base(service.BaseUri, "/upload/groups/v1/groups/{groupId}/archive", "POST", stream, contentType) {
                this.Authenticator = service.Authenticator;
                this._groupId = groupId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The group ID</summary>
            [Google.Apis.Util.RequestParameterAttribute("groupId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string GroupId {
                get {
                    return this._groupId;
                }
            }
        }
    }
    
    public partial class GroupsmigrationService {
        
        private const string Resource = "";
        
        private ArchiveResource _archive;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual ArchiveResource Archive {
            get {
                return this._archive;
            }
        }
    }
}
